<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CaiusTheory Posts</title>
  <subtitle>Now with even more cowbell…</subtitle>
  <id>http://caiustheory.com/</id>
  <link href="http://caiustheory.com/"/>
  <link href="http://caiustheory.com/feed.xml" rel="self"/>
  <updated>2015-11-26T23:33:37+00:00</updated>
  <author>
    <name>Caius Durling</name>
  </author>
  <entry>
    <title>SoundCloud RSS Feeds</title>
    <link rel="alternate" href="http://caiustheory.com/soundcloud-rss-feeds/"/>
    <id>http://caiustheory.com/soundcloud-rss-feeds/</id>
    <published>2015-11-26T23:33:37+00:00</published>
    <updated>2015-11-26T23:33:37+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="https://soundcloud.com"&gt;SoundCloud&lt;/a&gt; appears to have gained popularity in recent times for hosting podcasts on. As a consumer of their service they're pretty good at everything except having a visible RSS feed on a profile page for a show! If I want to listen to a shown in my podcast app of choice, an RSS feed is the easiest way for me to achieve that.&lt;/p&gt;

&lt;p&gt;Turns out SoundCloud &lt;em&gt;do&lt;/em&gt; have RSS feeds, they're just well hidden and unfindable from the profile page itself. Thankfully, you can construct the URL for it from information on the profile page, and here's a bookmarklet that will do it for you:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;javascript:var%20userURI;var%20metaTags=document.getElementsByTagName(
%22meta%22);for(var%20i=0;i&amp;lt;metaTags.length;i++){t=metaTags[i];if(
t.attributes[%22property%22]&amp;amp;&amp;amp;t.attributes[%22property%22].value==
%22al:ios:url%22){userURI=t.content;}}if(userURI){u=userURI.split(%22//%22)[1];
window.location=%22http://feeds.soundcloud.com/users/soundcloud:%22+u+
%22/sounds.rss%22;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or as a &lt;a href="javascript:var%20userURI;var%20metaTags=document.getElementsByTagName(%22meta%22);for(var%20i=0;i&amp;lt;metaTags.length;i++){t=metaTags[i];if(t.attributes[%22property%22]&amp;amp;&amp;amp;t.attributes[%22property%22].value==%22al:ios:url%22){userURI=t.content;}}if(userURI){u=userURI.split(%22//%22)[1];window.location=%22http://feeds.soundcloud.com/users/soundcloud:%22+u+%22/sounds.rss%22;}"&gt;handy link&lt;/a&gt; to copy to your bookmarks bar. Simply click/run that when on a SoundCloud profile page and you'll be taken to the RSS Feed URL.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>exec(3) in Go</title>
    <link rel="alternate" href="http://caiustheory.com/exec-3-in-go/"/>
    <id>http://caiustheory.com/exec-3-in-go/</id>
    <published>2015-01-31T09:37:37+00:00</published>
    <updated>2015-01-31T09:37:37+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Using &lt;a href="http://man7.org/linux/man-pages/man3/exec.3.html"&gt;exec(3)&lt;/a&gt; from Go is simple enough, once you figure out to look in the &lt;a href="http://golang.org/pkg/syscall/"&gt;syscall&lt;/a&gt; package and how to pass arguments to the new command.&lt;/p&gt;

&lt;p&gt;As a simple example, I'm going to exec &lt;code&gt;/bin/echo&lt;/code&gt; with a hardcoded string from the go binary. &lt;em&gt;The program built here is in the &lt;a href="https://github.com/caius/gecho"&gt;gecho&lt;/a&gt; (Gecko, geddit?) git repo, which each stage as a commit.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In our main function lets setup some variables we're going to need for arguments to &lt;code&gt;syscall.Exec&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func main() {
	cmdPath := "/bin/echo"
	cmdArgs := []string{"Hello", "World"}
	cmdEnv := []string{}    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;(We could use &lt;code&gt;os.Environ()&lt;/code&gt; for &lt;code&gt;cmdEnv&lt;/code&gt; to take the ENV from the go binary, but we don't require anything from the environmnt here so it doesn't matter that we aren't.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now we have the arguments for &lt;code&gt;syscall.Exec&lt;/code&gt;, lets add that in and see what happens:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;err := syscall.Exec(cmdPath, cmdArgs, cmdEnv)
if err != nil {
    panic(err)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And running the file (&lt;code&gt;go run gecho.go&lt;/code&gt; compiles &amp;amp; runs for us) gives the following output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;World
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Err, say what now? Where's "Hello" gone?!&lt;/p&gt;

&lt;p&gt;Took me a while to figure this out when I originally ran into this. The answer is staring us right in the face if we go look at the &lt;a href="http://golang.org/pkg/syscall/#Exec"&gt;syscall.Exec docs&lt;/a&gt;. Lets have a look at the function signature, argument names and all:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func Exec(argv0 string, argv []string, envv []string) (err error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hmm. The first argument is &lt;code&gt;argv0&lt;/code&gt; (and a string), rather than &lt;code&gt;binaryPath&lt;/code&gt; or something similar. The second argument is then &lt;code&gt;argv&lt;/code&gt; and an array of strings.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;At this point I remember that the first element of &lt;code&gt;argv&lt;/code&gt; in other runtimes is the name of the binary or command invoked - &lt;code&gt;$0&lt;/code&gt; in a bash script is the name of the script for example.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The answer is simple. &lt;code&gt;cmdArgs&lt;/code&gt; in our script should have &lt;code&gt;/bin/echo&lt;/code&gt; as the first element, and then we pass &lt;code&gt;cmdArgs[0], cmdArgs&lt;/code&gt; as the first two arguments to &lt;code&gt;syscall.Exec&lt;/code&gt;. Lets give that a go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func main() {
	cmdArgs := []string{"/bin/echo", "Hello", "World"}
	cmdEnv := []string{}

	err := syscall.Exec(cmdArgs[0], cmdArgs, cmdEnv)
	if err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And running it (&lt;code&gt;go run gecho.go&lt;/code&gt; remember) gives the expected output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hello World
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Excellent. Now I just need to remember &lt;code&gt;argv&lt;/code&gt; contains the command name as &lt;code&gt;argv[0]&lt;/code&gt; and we're golden.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There is also the &lt;a href="http://golang.org/pkg/os/exec/"&gt;os/exec&lt;/a&gt; package in the stdlib, which is intended for executing other binaries as child processes from what I can tell. Tellingly, when you create a &lt;code&gt;exec.Cmd&lt;/code&gt; struct with &lt;code&gt;exec.Command()&lt;/code&gt; you give it the name as first argument, and args as following arguments. Then it has the following snippet in the documentation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The returned Cmd's Args field is constructed from the command name followed by the elements of arg, so arg should not include the command name itself. For example, &lt;code&gt;Command("echo", "hello")&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So &lt;code&gt;cmd := exec.Command("echo", "hello"); cmd.Args&lt;/code&gt; would return &lt;code&gt;[]string{"echo", "hello"}&lt;/code&gt; - which is recognisable as what we have to pass to &lt;code&gt;syscall.Exec&lt;/code&gt;!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Example Article</title>
    <link rel="alternate" href="http://caiustheory.com/example-article/"/>
    <id>http://caiustheory.com/example-article/</id>
    <published>2015-01-01T00:00:00+00:00</published>
    <updated>2015-01-01T00:00:00+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;This is an example article. You probably want to delete it and write your own articles!&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Changing hostname in SmartOS Zone</title>
    <link rel="alternate" href="http://caiustheory.com/changing-hostname-in-smartos-zone/"/>
    <id>http://caiustheory.com/changing-hostname-in-smartos-zone/</id>
    <published>2014-12-18T00:00:00+00:00</published>
    <updated>2014-12-18T00:00:00+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Given a non-global zone in SmartOS that we want to change the hostname of, we need to make sure to edit the following files to change it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/etc/nodename&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A quick way to do that is with &lt;code&gt;sed&lt;/code&gt; &lt;em&gt;(renaming "fred" to "beth" here)&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sed -e 's/fred/beth/g' -i /etc/hosts /etc/nodename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then shutdown &amp;amp; start the zone &lt;em&gt;(from my testing a restart doesn't apply it)&lt;/em&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Install Rubinius on OS X</title>
    <link rel="alternate" href="http://caiustheory.com/install-rubinius-on-os-x/"/>
    <id>http://caiustheory.com/install-rubinius-on-os-x/</id>
    <published>2014-11-05T12:50:16+00:00</published>
    <updated>2014-11-05T12:50:16+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Using &lt;a href="https://github.com/postmodern/ruby-install/"&gt;ruby-install&lt;/a&gt;, &lt;a href="http://brew.sh/"&gt;homebrew&lt;/a&gt; building it for use with &lt;a href="https://github.com/postmodern/chruby/"&gt;chruby&lt;/a&gt;, here's how I install &lt;a href="http://rubini.us/"&gt;Rubinius&lt;/a&gt; under Yosemite (works for Mavericks as well.)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure llvm is installed&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ brew install llvm
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Prepend the homebrew-installed llvm tools to your path&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ export PATH="$(brew --prefix llvm)/bin:$PATH"

 # Or, for ZSH
 $ path=( $(brew --prefix llvm)/bin $path )
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install rubinius, v2.3.0 at the time of writing&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ ruby-install rbx 2.3.0
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open a fresh shell once that's built, and you should be able to switch to rbx!&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ chruby rbx
 $ ruby -v
 rubinius 2.3.0 (2.1.0 9d61df5d 2014-10-31 3.5.0 JI) [x86_64-darwin14.0.0]
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;There is also a homebrew tap for rubinius which should also work instead of the above. I couldn't get it working on one of my laptops though, which is why I was installing by hand using the above instead. The tap is at &lt;a href="https://github.com/rubinius/homebrew-apps/"&gt;https://github.com/rubinius/homebrew-apps/&lt;/a&gt; and &lt;a href="https://twitter.com/brixen/status/529725881498226688"&gt;https://twitter.com/brixen/status/529725881498226688&lt;/a&gt; explains install steps.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Changing root password in global zone</title>
    <link rel="alternate" href="http://caiustheory.com/changing-root-password-in-global-zone/"/>
    <id>http://caiustheory.com/changing-root-password-in-global-zone/</id>
    <published>2014-10-19T18:44:20+01:00</published>
    <updated>2014-10-19T18:44:20+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;SmartOS mounts &lt;code&gt;/etc/shadow&lt;/code&gt; from &lt;code&gt;/usbkey/shadow&lt;/code&gt; so we can change the root password for the global zone after install. Here's how:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Fire up a console or ssh session as root in the global zone&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check the existing permissions on the file&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ ls -l /usbkey/shadow
 -r--------   1 root     root         560 Oct 19 16:45 /usbkey/shadow
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make the file writable&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ chmod 600 /usbkey/shadow
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fire up &lt;code&gt;vi&lt;/code&gt; to edit the file&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ vi /usbkey/shadow
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edit the line containing root to change the crypted password. See &lt;a href="https://us-east.manta.joyent.com/smartosman/public/man4/shadow.4.html"&gt;&lt;code&gt;shadow(4)&lt;/code&gt;&lt;/a&gt; if you need help with the format of &lt;code&gt;/etc/shadow&lt;/code&gt; &amp;amp; use &lt;code&gt;/usr/lib/cryptpass&lt;/code&gt; to generate a hash for the password you desire. &lt;em&gt;(Remember to clean the bash history!)&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Save the file and exit &lt;code&gt;vi&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make the file readonly again&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ chmod 400 /usbkey/shadow
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Double check permissions are correct on the file again&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ ls -l /usbkey/shadow
 -r--------   1 root     root         560 Oct 19 16:49 /usbkey/shadow
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Job done. Verify by logging in as root (invoking &lt;code&gt;/usr/bin/login&lt;/code&gt; from an ssh session makes this easy to verify.)&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Compiling SmartOS for AMD processors</title>
    <link rel="alternate" href="http://caiustheory.com/compiling-smartos-for-amd-processors/"/>
    <id>http://caiustheory.com/compiling-smartos-for-amd-processors/</id>
    <published>2014-09-28T01:00:00+01:00</published>
    <updated>2014-09-28T01:00:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;There's a few community-provided patches for SmartOS that enable KVM on AMD processors amongst other things, and given the HP Microserver has an AMD processor, that's quite useful for turning it into a better lab server. The main &lt;a href="http://imgapi.uqcloud.net/builds"&gt;list of so called "eait" builds&lt;/a&gt; was hiccuping when I tried to download the latest, and all I could find was a 20140812T062241Z image &lt;a href="http://builds.smartos.skylime.net"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code for the eait builds is maintained at &lt;a href="https://github.com/arekinath/smartos-live"&gt;https://github.com/arekinath/smartos-live&lt;/a&gt;, and you can see the patches applied on top of the normal SmartOS master by going to &lt;a href="https://github.com/arekinath/smartos-live/compare/joyent:master...eait"&gt;https://github.com/arekinath/smartos-live/compare/joyent:master...eait&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So here's how to use SmartOS to compile a more up to date AMD-friendly Smartos!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Grab the latest multiarch SmartOS image (which &lt;strong&gt;has&lt;/strong&gt; to be used, or the compile will fail.) The latest at the time of writing was &lt;code&gt;4aec529c-55f9-11e3-868e-a37707fcbe86&lt;/code&gt;, so that's what I'll use.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; imgadm import 4aec529c-55f9-11e3-868e-a37707fcbe86
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spin up a zone for us to build in (the &lt;a href="http://wiki.smartos.org/display/DOC/Building+SmartOS+on+SmartOS"&gt;Building SmartOS on SmartOS&lt;/a&gt; page has extra info about this):&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; echo '{
   "alias": "platform-builder",
   "brand": "joyent",
   "dataset_uuid": "4aec529c-55f9-11e3-868e-a37707fcbe86",
   "max_physical_memory": 32768,
   "quota": 0,
   "tmpfs": 8192,
   "fs_allowed": "ufs,pcfs,tmpfs",
   "maintain_resolvers": true,
   "resolvers": [
     "8.8.8.8",
     "8.8.4.4"
   ],
   "nics": [
     {
       "nic_tag": "admin",
       "ip": "dhcp",
       "primary": true
     }
   ],
   "internal_metadata": {
     "root_pw": "password",
     "admin_pw": "password"
   }
 }' | vmadm create
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Login to the created zone:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; zlogin &amp;lt;uuid from `vmadm create` output&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update the image to the latest packages, etc:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; pkgin -y update &amp;amp;&amp;amp; pkgin -y full-upgrade
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install a few images we'll need to compile &amp;amp; package SmartOS:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; pkgin install scmgit cdrtools pbzip2
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Grab the source code of the fork containing the patches we want, from &lt;a href="https://github.com/arekinath/smartos-live"&gt;arekinath/smartos-live&lt;/a&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; git clone https://github.com/arekinath/smartos-live
 cd smartos-live
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Optional&lt;/em&gt;: Edit &lt;code&gt;src/Makefile.defs&lt;/code&gt; and change &lt;code&gt;PARALLEL =      -j$(MAX_JOBS)&lt;/code&gt; to &lt;code&gt;PARALLEL =      -j8&lt;/code&gt; to do less at once. (Microserver only has a dual core CPU!)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copy the configure definition into the right place and start configuration:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; cp {sample.,}configure.smartos
 ./configure
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;&lt;em&gt;(You'll probably get asked to accept the java license during configuration, so keep half an eye on it)&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once configure has completed (which doesn't take &lt;em&gt;too&lt;/em&gt; long, 15 minutes or so), start building:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; gmake world &amp;amp;&amp;amp; gmake live
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once the build is successfully finished, time to package an iso &amp;amp; usb image:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;export LC_ALL=C
tools/build_iso
tools/build_usb
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hey presto, you've a freshly built AMD-friendly SmartOS build to flash to a USB key / put on your netboot server and boot your Microserver from!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://wiki.smartos.org/display/DOC/Building+SmartOS+on+SmartOS"&gt;http://wiki.smartos.org/display/DOC/Building+SmartOS+on+SmartOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/arekinath/smartos-live"&gt;https://github.com/arekinath/smartos-live&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>The People's Triathlon 2014</title>
    <link rel="alternate" href="http://caiustheory.com/the-peoples-triathlon-2014/"/>
    <id>http://caiustheory.com/the-peoples-triathlon-2014/</id>
    <published>2014-08-11T01:00:00+01:00</published>
    <updated>2014-08-11T01:00:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;My first Olympic distance triathlon, and the first time I've ever run 10km to boot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1500m Open Water (Freshwater Lake) Swim: 00:38:08&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Equally happy and upset with my swim. Basically everything went well except my wetsuit, must get a proper swimming one (possibly sleeveless) before my next wetsuit event. Having to get out at the end of each lap and run down the bank to re-enter the water was a bit strange but not too bad. Worst bit of that was diving back in and forgetting to look down - goggles bruised the edge of my eyesocket!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transition 1: 00:03:53&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Took this at a sedate pace, didn't rush but didn't dawdle either. Perhaps could've gone a bit quicker but not unhappy with it. Found bike OK this time, although chain fell off as I went to mount which was slightly annoying.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;40km Cycle: 01:28:49&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Started off really badly, managed to knock my watch from cycle into Transition 2 before I'd gotten out the car park. Had to reset it quickly into just bike mode from multisport mode which wasn't too bad to be fair, just annoying. Having done the route in training was a &lt;em&gt;big&lt;/em&gt; help on the day, I was aiming for about the time I did it in. Didn't push too hard on the two hills (one of which looks deceptively easy). Very happy with my time and more importantly how little effort it was comparatively.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transition 2: 00:01:28&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quicker than T1, as normal. Got my shit on quickly, didn't forget anything and even managed to get my watch in run mode whilst jogging to the exit of the transition area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10km Run: 01:18:40&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The bit I was dreading the most. Very very happy with my performance here though. Walked about 90 seconds of the whole thing and kept plodding away the rest of the time. Given the furthest I'd run solidly in training was about 5.5km, I was exceptionally happy to just keep plodding the whole time. Managed to not take on liquid for the third lap, which lead to some impressive cramping in my right quad, so making sure I take liquid on is a definite thing to watch out for in future. And amazingly I wasn't even tail end charlie (not that it really matters, given I race the clock, not other people. But still.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total: 03:30:51&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There's a tiny part of me that's gutted I didn't manage it in under 3:30 hours, but what's 51 seconds over that period of time. More importantly, I completed the bloody thing! Especially happy with the run, enjoyed the cycle even if it was trying to drown us (there was 6" deep standing water on one of the roundabouts by the end), and mostly happy with my swim.&lt;/p&gt;

&lt;p&gt;Looking forward to returning next year and beating 3:30!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Solve volume down button not working on iPhone 5</title>
    <link rel="alternate" href="http://caiustheory.com/solve-volume-down-button-not-working-on-iphone-5/"/>
    <id>http://caiustheory.com/solve-volume-down-button-not-working-on-iphone-5/</id>
    <published>2014-07-01T12:31:39+01:00</published>
    <updated>2014-07-01T12:31:39+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I noticed this morning that my volume down button (-) wasn't working on my iPhone 5 running iOS 7. Pushing the physical button in didn't change the volume. The volume up button increased the volume successfully still.&lt;/p&gt;

&lt;p&gt;As is my normal first step debugging iPhone weirdness, I rebooted the phone by turning it off, leaving it off for a few seconds, then booting it back up with the power button. Once powered off and on in this way, the volume down key still didn't decrease the volume.&lt;/p&gt;

&lt;p&gt;Fearing a physical button issue at this point, I turned to google for suggestions on what else to try. Running across &lt;a href="https://discussions.apple.com/thread/4894152"&gt;this thread&lt;/a&gt; on Apple's discussion forums, I tried out the solution in there.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open "Settings"&lt;/li&gt;
  &lt;li&gt;Scroll down and tap on "General"&lt;/li&gt;
  &lt;li&gt;Tap on "Accessibility"&lt;/li&gt;
  &lt;li&gt;Scroll down to the bottom and tap on "AssistiveTouch"&lt;/li&gt;
  &lt;li&gt;Tap the toggle for AssistiveTouch to turn it on, and you should see a little icon appear on screen (white circle contained in a dark grey rounded square)&lt;/li&gt;
  &lt;li&gt;Tap the AssistiveTouch icon (was in the top left corner on screen for me)&lt;/li&gt;
  &lt;li&gt;Tap on "Device"&lt;/li&gt;
  &lt;li&gt;Tap "Volume Down" a bunch of times and you should see the volume being turned down&lt;/li&gt;
  &lt;li&gt;Tap outside the AssistiveTouch dialog to close it&lt;/li&gt;
  &lt;li&gt;Try pushing the physical Volume Down button&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In my case, following these steps made my physical volume down button start working again. Makes me wonder if the solution author on the apple discussion thread is right, in that this is a software issue and forcing a volume down action through the on-screen interface makes it remember that there's a physical button to respond to as well.&lt;/p&gt;

&lt;p&gt;Either way, I can stop deafening myself whenever I receive a notification now!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Compile &amp;amp; run swift files directly</title>
    <link rel="alternate" href="http://caiustheory.com/compile-run-swift-files-directly/"/>
    <id>http://caiustheory.com/compile-run-swift-files-directly/</id>
    <published>2014-06-06T15:32:18+01:00</published>
    <updated>2014-06-06T15:32:18+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Turns out you can run a swift file without having to compile it into a binary somewhere and then run that binary. Makes swift behave a bit more like a scripting language like ruby or python when you need it to.&lt;/p&gt;

&lt;p&gt;Using the &lt;code&gt;xcrun&lt;/code&gt; binary, we can reach into the current Xcode &lt;code&gt;/bin&lt;/code&gt; folder and run binaries within there. So &lt;code&gt;xcrun swift&lt;/code&gt; lets you run the swift binary to compile files for instance. If you view the help with &lt;code&gt;-h&lt;/code&gt;, there's a useful flag &lt;code&gt;-i&lt;/code&gt; listed there:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;-i               Immediate mode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Turns out immediate mode means "compile &amp;amp; run" in the same command, which is what we're after.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cat hello.swift
    println("Hello World")

    $ xcrun swift -i hello.swift
    Hello World
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bingo. But what if we want to make hello.swift executable and call it directly without having to know it needs the swift binary to call it. Unix lets files define their shebang to say how the file needs to be executed, so lets go for that here too!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cat hello2.swift
    #!/usr/bin/env xcrun swift -i
    
    println("Hello World 2")

    $ chmod +x hello2.swift
    $ ./hello2.swift
    Hello World 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No more having to fire up Xcode for quick CLI tools, especially ones using the system frameworks!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Cheshire Triathlon 2014</title>
    <link rel="alternate" href="http://caiustheory.com/cheshire-triathlon-2014/"/>
    <id>http://caiustheory.com/cheshire-triathlon-2014/</id>
    <published>2014-06-02T01:00:00+01:00</published>
    <updated>2014-06-02T01:00:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Successfully completed my second Sprint Triathlon of the season in Nantwich.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;500m Swim - 00:10:49&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Felt good swimming this. Mixed up my usual breaststroke with some front crawl to overtake and use my legs less towards the end. Think I need to put a shorter time down on paper next time though, was in with people who were swimming much slower than me. (Including one chap who was doing doggy paddle in the deep end and walking as soon as his feet touched bottom. Oh well!) Need to continue with front crawl practice, and aim to do next sprint tri entirely crawl.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transition 1 - 00:02:43&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Went well. Ran from pool to bike and felt OK. Kit on without any fuckups. Didn't fall off getting on bike. Winning. Need to practice getting on my bike in shoes at a run though.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20km Bike - 00:42:31&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;10 minutes quicker than same length course last year. (Although a slightly new route this year.) Lost a minute when my water bottle fell out about 12km in though. Barely saw a soul, got stuck at one pedestrian crossing on red. Felt very good on the bike (and finally beat Liam on the same route &amp;amp; day  ). Need to fit a tighter bottle carrier to stop the bottle falling out on bumpy roads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transition 2 - 00:01:21&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Came off bike well and ran to shoes. Couldn't find where I'd left them, was trying to find Liam's bike as my marker for it, only someone else earlier in the same row had the same bike as him! Wasted 10 seconds looking probably. Need to remember where my stuff is more accurately in future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5km Run - 00:39:03&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Boiling hot by the point I started running; didn't feel great in the first few hundred meters and never really got comfortable after that. Walked about 800m of it in total at a guess, really didn't have much left in my legs. Not convinced pushing less on the bike would've helped my run though. On the plus side, only 7 minutes slower than a training run a couple of weeks ago in similar heat, and this was on grass. Need to continue running at 5km distance, and train on grass as well as tarmac I think.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total time - 01:36:27&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;8 minutes slower than York a couple of months ago, and felt &lt;em&gt;much&lt;/em&gt; worse on the run. Very happy with my bike &amp;amp; swim though. More run training required!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>York April 2014 Triathlon</title>
    <link rel="alternate" href="http://caiustheory.com/york-triathlon-2014/"/>
    <id>http://caiustheory.com/york-triathlon-2014/</id>
    <published>2014-04-28T01:00:00+01:00</published>
    <updated>2014-04-28T01:00:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Completed the York sprint distance tri in 1:28:37 total, and didn't die in the process. Split times &amp;amp; my thoughts below..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;400m Swim: 00:08:08&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;T1: 00:03:47&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;18km Bike: 00:38:43&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;T2: 00:00:58&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;5km Run: 00:38:08&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(Amusingly the official time for my swim was 00:10:10, which then makes my official time for T1 00:00:38; Fastest Swim/Bike transition time in the tri on paper! Ahem.)&lt;/p&gt;

&lt;p&gt;Happy with my swim, not much different from training speed &amp;amp; felt good getting out the pool. T1 was okay, and I remembered to put my tshirt on before my helmet this time! Quite happy with my cycling, got down on the drop bars going downhill with tailwind, and could maintain 16mph uphill on the return leg, the bike itself had a major service 2 weeks ago and I'd not really ridden much since that either. Legs responded with life in them coming off the bike, second transition was quicker than expected (elastic laces win!). Moderately happy with the run, was hoping to do it in under 40 minutes (and did), but still felt like I had no more distance/pace left before halfway through. Pushed through to the end okay, and didn't walk at all. Overall very happy for my first sprint distance, and especially happy to be running 5km after swim/bike without walking.&lt;/p&gt;

&lt;p&gt;First event of the season done. Main area to work on is my run, but that's been the case since last season. Winter running training seems to have paid off so far.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rename Google Drive folder on Mac</title>
    <link rel="alternate" href="http://caiustheory.com/rename-google-drive-folder-on-mac/"/>
    <id>http://caiustheory.com/rename-google-drive-folder-on-mac/</id>
    <published>2014-03-06T15:49:22+00:00</published>
    <updated>2014-03-06T15:49:22+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;ol&gt;
  &lt;li&gt;Quit Google Drive app&lt;/li&gt;
  &lt;li&gt;Rename "~/Google Drive/" to whatever you want&lt;/li&gt;
  &lt;li&gt;Open Google Drive and wait for it to complain the folder is missing&lt;/li&gt;
  &lt;li&gt;Click the menu item and click the warning item&lt;/li&gt;
  &lt;li&gt;Click "Locate Folder.." button on the right in window that pops up&lt;/li&gt;
  &lt;li&gt;Find your renamed folder and hit OK&lt;/li&gt;
  &lt;li&gt;There is no step seven&lt;/li&gt;
&lt;/ol&gt;

</content>
  </entry>
  <entry>
    <title>Add to iCloud Reading List programmatically</title>
    <link rel="alternate" href="http://caiustheory.com/add-to-icloud-reading-list-programmatically/"/>
    <id>http://caiustheory.com/add-to-icloud-reading-list-programmatically/</id>
    <published>2013-12-16T22:26:31+00:00</published>
    <updated>2013-12-16T22:26:31+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;One piece of a larger puzzle I'm trying to solve currently, was how to add a given URL to my Apple "&lt;a href="http://www.apple.com/uk/safari/#icloud"&gt;Reading List&lt;/a&gt;" that is stored in iCloud and synced across all my OS X and iOS devices. More specifically, I wanted to add URLs to the list from my mac running Mavericks (10.9). I had a quick look at the Cocoa APIs and couldn't see anything in OS X to do this. (iOS has an API to do it from Cocoa-land it seems though.)&lt;/p&gt;

&lt;p&gt;I figured &lt;a href="http://www.apple.com/uk/safari/"&gt;Safari.app&lt;/a&gt; was the key to getting this done on OS X, given it has the ability itself to add the current page to the reading list, either via a keyboard command, a menu item, or a button in the address bar. One quick mental leap later, and I was wondering if the engineers at Apple had been nice enough to expose that via Applescript for me to take advantage of.&lt;/p&gt;

&lt;p&gt;One quick stop in "Script Editor.app" later, and I had the Applescript dictionary open for Safari.app. Lo and behold, there is rather handily an Applescript command called "add reading list item", which does &lt;strong&gt;exactly&lt;/strong&gt; what I want. It has a few different options you can call it with, depending on whether you want Safari to go populate the title &amp;amp; preview text, or if you want to specify it yourself at save-time.&lt;/p&gt;

&lt;p&gt;As I want to be able to call this from multiple runtimes, I've chosen to save it as an executable, which leans on &lt;a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/osascript.1.html"&gt;&lt;code&gt;osascript&lt;/code&gt;&lt;/a&gt; to run the actual Applescript. And here it is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env osascript

on run argv
    if (count of argv) &amp;gt; 0
        tell app "Safari" to add reading list item (item 1 of argv as text)
    end if
end run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save it as whatever you want (eg. &lt;code&gt;add_to_reading_list&lt;/code&gt;), make it executable (&lt;code&gt;chmod +x add_to_reading_list&lt;/code&gt;), and then run it with the URL you want saving as the first argument.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ add_to_reading_list "http://caius.name/"
$ add_to_reading_list "http://google.com/"
# … etc …
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;(Adding support for specifying preview text and title is left as an exercise for the reader!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Have fun reading later!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>North West Triathlon 2013</title>
    <link rel="alternate" href="http://caiustheory.com/north-west-triathlon-2013/"/>
    <id>http://caiustheory.com/north-west-triathlon-2013/</id>
    <published>2013-09-12T01:00:00+01:00</published>
    <updated>2013-09-12T01:00:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;"Fun" triathlon (super sprint distance) done in Nantwich. First ever Triathlon, 7 months after starting training properly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;200m swim: 00:04:08&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Despite feeling like I was going super slow. Brine pool was fairly nice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20km bike: 00:52:31&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pretty happy with that, strongest discipline for me anyway.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.5km run: 00:21:08&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Walked 2/3s of it at a guess. Really hate running, so happyish with this. Need to work on running over the winter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total: 1h 17m 47s&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;BOOYA. Enjoyable. Pretty damn happy with that (had a vague plan of being under 1h30m. So yay.)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Happy Villanelle</title>
    <link rel="alternate" href="http://caiustheory.com/happy-villanelle/"/>
    <id>http://caiustheory.com/happy-villanelle/</id>
    <published>2013-02-22T15:15:03+00:00</published>
    <updated>2013-02-22T15:15:03+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;The writing group that Carole and Liberty belong to had a homework this month to write a Villanelle. It's a very specific kind of poem, written to both a repeating line structure and a rhyming pattern. (If you go read &lt;a href="http://libertyfallsdown.wordpress.com/2013/02/22/villanelle/"&gt;Liberty's villanelle&lt;/a&gt; she explains it properly at the start.)&lt;/p&gt;

&lt;p&gt;However, after reading both &lt;a href="http://carolefindsherwings.wordpress.com/2013/02/23/ward-26-a-villanelle/"&gt;Carole's&lt;/a&gt; and &lt;a href="http://libertyfallsdown.wordpress.com/2013/02/22/villanelle/"&gt;Liberty's&lt;/a&gt;, I was feeling they'd both done very depressing poems. It might be a strict structure of poem, but there's no need to make the subject matter so down!&lt;/p&gt;

&lt;p&gt;So here's my overly enthusiastically attempt to try and balance the world of villanelle's into something less depressing!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Striding out down the street at last,&lt;br /&gt;
Like I own this town,&lt;br /&gt;
Tipping my hat to all that I passed.&lt;/p&gt;

  &lt;p&gt;Smiling at a friendly chugger who asked,&lt;br /&gt;
Grinning at an exuberant clown,&lt;br /&gt;
Striding out down the street at last.&lt;/p&gt;

  &lt;p&gt;Saluting the bookie behind his glass,&lt;br /&gt;
Turning frowns upside down,&lt;br /&gt;
Tipping my hat to all that I passed.&lt;/p&gt;

  &lt;p&gt;Tapping my feet and having a blast,&lt;br /&gt;
Abusing verbs like they were a noun,&lt;br /&gt;
Striding out down the street at last.&lt;/p&gt;

  &lt;p&gt;Being amused by kids playing on grass,&lt;br /&gt;
Seeing the queen in her glorious crown,&lt;br /&gt;
Tipping my hat to all that I passed.&lt;/p&gt;

  &lt;p&gt;Compared to sadness I am a contrast,&lt;br /&gt;
Cheering folk up in my dressing gown,&lt;br /&gt;
Striding out down the street at last,&lt;br /&gt;
Tipping my hat to all that I passed.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>Pair new device with Nexxus Drive Transmit Pro</title>
    <link rel="alternate" href="http://caiustheory.com/pair-new-device-with-nexxus-drive-transmit-pro/"/>
    <id>http://caiustheory.com/pair-new-device-with-nexxus-drive-transmit-pro/</id>
    <published>2013-02-12T18:26:59+00:00</published>
    <updated>2013-02-12T18:26:59+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;The device is a bluetooth to FM transmitter with Model number NEX-FMTX-BTCK. (Hereafter DTP.)&lt;/p&gt;

&lt;p&gt;The set of instructions I use to pair it to a new device, having lost the user manual/instruction booklet, is as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Remove all previously paired devices from range (turn them off/move them away from the DTP.)&lt;/li&gt;
  &lt;li&gt;Turn the power on to the DTP without touching any buttons.&lt;/li&gt;
  &lt;li&gt;Let it flash the blue call button a couple of times as it searches for known devices.&lt;/li&gt;
  &lt;li&gt;Hold the call button down until the call/hangup buttons flash blue/red respectively.&lt;/li&gt;
  &lt;li&gt;Find the "Drive Transmit Pro" on your device you want paired to it and pair with DTP.&lt;/li&gt;
  &lt;li&gt;Test out the pairing by calling your girlfriend and talking to her in a funny accent.&lt;/li&gt;
  &lt;li&gt;Celebrate with a beer!&lt;/li&gt;
&lt;/ol&gt;

</content>
  </entry>
  <entry>
    <title>Church intertwined with State</title>
    <link rel="alternate" href="http://caiustheory.com/church-intertwined-with-state/"/>
    <id>http://caiustheory.com/church-intertwined-with-state/</id>
    <published>2013-02-05T23:06:18+00:00</published>
    <updated>2013-02-05T23:06:18+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;In the UK currently we're moving (slowly) toward the &lt;a href="http://www.publications.parliament.uk/pa/bills/cbill/2012-2013/0126/cbill_2012-20130126_en_1.htm"&gt;same sex marriage bill&lt;/a&gt; making it's way into law. (It's got a way to go still, but support seems to be there now at least.)&lt;/p&gt;

&lt;p&gt;For the record, I'm glad to see the state moving toward allowing two people to be united under law, irrespective of terminology used - and with equal rights to those currently enjoyed by the uniting of a man &amp;amp; woman to date. But for a while now I've been thinking that the discussion is presented in an unclear fashion, which causes people to jump to polarising positions on it, without any common ground.&lt;/p&gt;

&lt;p&gt;The way I see it is the UK has been a country with Religion and State intertwined for many, many hundreds of years - and therefore we have some constructs that exist both in law, and religion, but are conflated under one word and changing one appears to be changing them both.&lt;/p&gt;

&lt;p&gt;The Church of England is Protestant, because Henry VIII wanted to get a divorce and the Catholics wouldn't allow him that, so we as a country "forked" our own religion that wasn't so different, but allowed divorce of marriage. Times were slightly different back then, the church had a lot more direct power in terms of laws &amp;amp; how people lived. We're a more diverse society today, and the church has less (direct?) involvement in our laws, although older laws are still based upon that original conflation of state and church.&lt;/p&gt;

&lt;p&gt;I almost wonder if in this case (and others) we need to start diverging church from state and allowing the state to change things irrespective of the church, whilst still allowing the church to continue unhindered with practices it's held for many years. Seems like the best of both worlds almost - in law we are a very generic and equal society, and if you wish to belong to or align with a group that has more specific beliefs, then that is open to you as well.&lt;/p&gt;

&lt;p&gt;Lets jump back to gay marriage here as an example then. If we define state marriage to be "the unity of two human beings, irrespective of their attributes", then everyone is equal to join with a partner in the eyes of the law, and all such partnerships are afforded the lawful benefits that come with that unity. The church (and indeed, all religions) are also then free to define religious marriage in their doctrine as they wish, so they can say that for them it's only permissible between a man and a woman. And if you wish to join with a partner following that doctrine, then you have to meet their rules.&lt;/p&gt;

&lt;p&gt;In this circumstance, I wonder how much of it is a hangup on the word "marriage". I can see how the state wants to keep hold of it to describe partnerships between two people, and also that religions want to keep hold of it as they've been using it for years and neither wish to yield the word for the other to use. Which possibly means people think solely of this issue as just being an intertwined construct between state and religion, and not as the state giving everyone equality being a separate issue.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>evil.rb</title>
    <link rel="alternate" href="http://caiustheory.com/evil-rb/"/>
    <id>http://caiustheory.com/evil-rb/</id>
    <published>2013-01-23T11:07:43+00:00</published>
    <updated>2013-01-23T11:07:43+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Here be hax. Don't &lt;strong&gt;ever&lt;/strong&gt; do these. ;-)&lt;/p&gt;

&lt;h2 id="reduce-local-variables-with-instanceeval"&gt;Reduce local variables with instance_eval&lt;/h2&gt;

&lt;p&gt;Sometimes (usually in a one-liner) I want to do some work with a value without assigning it to a variable. Chucking an &lt;code&gt;#instance_eval&lt;/code&gt; call in there will set &lt;code&gt;self&lt;/code&gt; to the value, which saves having to assign it to a local value. Pretty much only used by me in one-off scripts or cli commands.&lt;/p&gt;

&lt;h4 id="good"&gt;Good&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;start_date, end_date = ["24 Dec 2011", "23 Jan 2013"].map {|d| Date.parse(d) }
puts "#{start_date} to #{end_date} is #{(end_date - start_date).to_i} days"
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="bad"&gt;Bad&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;puts ["24 Dec 2011", "23 Jan 2013"].map {|d| Date.parse(d) }
  .instance_eval { "#{first} to #{last} is #{(last - first).to_i} days" }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See, way less code! &lt;em&gt;cough, cough&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="bonus-usage-misdirection"&gt;Bonus usage: Misdirection&lt;/h3&gt;

&lt;p&gt;I also dropped some instance_eval on our campfire bot at &lt;a href="https://emberads.com/"&gt;EmberAds&lt;/a&gt; to always blame one person, but without the code reading as such.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%w{Dom Mel Caius CBetta Baz}.sample.instance_eval { "(4V5A8F5T=&amp;amp;$`".unpack("u")[0] }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That does not return one of the array elements as you might think it does from quickly scanning the code…&lt;/p&gt;

&lt;h2 id="set-method-local-variables-in-default-arguments"&gt;Set method-local variables in default arguments&lt;/h2&gt;

&lt;p&gt;You have a method and it takes one argument, which has a default value of &lt;code&gt;nil&lt;/code&gt; specified. You then run into the situation where you need to know if &lt;code&gt;nil&lt;/code&gt; was passed to the method, or if you're getting the default value of &lt;code&gt;nil&lt;/code&gt;. You could change the default value to something you choose to be the "default value" and unlikely to be passed from elsewhere as the argument's value, and reset the parameter to &lt;code&gt;nil&lt;/code&gt; after checking it, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def output name=:default_value
  if name == :default_value
    name = "caius"
    default = true
  end

  "name: #{name.inspect} -- default: #{default.inspect}"
end

output() # =&amp;gt; "name: \"caius\" -- default: true"
output("fred") # =&amp;gt; "name: \"fred\" -- default: nil"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's quite a lot of code added to the method just to find out if we passed a default value or not. And if we forget to reset the value when it's &lt;code&gt;:default_value&lt;/code&gt; then we end up leaking that into whatever the method does with that value. We also have the problem that one day the program &lt;em&gt;could&lt;/em&gt; possibly send that "default value" we've chosen as the actual parameter, and we'd blindly change it thinking it was set as the default value, not the passed argument.&lt;/p&gt;

&lt;p&gt;Instead we could (ab)use the power of ruby, and have ruby decide to set &lt;code&gt;default = true&lt;/code&gt; for us when, and only when, the variable is set &lt;em&gt;to&lt;/em&gt; the default value.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def output name=((default=true); "caius")
  "name: #{name.inspect} -- default: #{default.inspect}"
end

output() # =&amp;gt; "name: \"caius\" -- default: true"
output("fred") # =&amp;gt; "name: \"fred\" -- default: nil"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, the output is identical. Yet we have no extra code &lt;em&gt;inside&lt;/em&gt; the method to figure out if we were given the default value or not. And as a bonus to that, we no longer have to check for a specific value being passed and presume that is actually the default, and not one passed by the program elsewhere.&lt;/p&gt;

&lt;p&gt;I posted this one in &lt;a href="https://gist.github.com/1528785"&gt;a gist&lt;/a&gt; a while back (to show &lt;a href="http://avdi.org/"&gt;Avdi&lt;/a&gt; it looks like), and people came up with some more insane things to do with it, including &lt;a href="https://gist.github.com/1528785#comment-71861"&gt;returning early&lt;/a&gt;, &lt;a href="https://gist.github.com/1528785#comment-71862"&gt;raising errors&lt;/a&gt; or even &lt;a href="https://gist.github.com/1528785#comment-71876"&gt;redefining the current method&lt;/a&gt;, all from the argument list! I'd suggest going to read them, it's a mixture of OMG HAHA and OMFG NO WAY WHYY?!?!.&lt;/p&gt;

&lt;h3 id="dont-do-this"&gt;Don't do this.&lt;/h3&gt;

&lt;p&gt;Don't do the above. No really, don't do them. Unless you're writing a one-off thing. But seriously, don't do them. :-D&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Some Small Refactorings in Ruby</title>
    <link rel="alternate" href="http://caiustheory.com/some-small-refactorings-in-ruby/"/>
    <id>http://caiustheory.com/some-small-refactorings-in-ruby/</id>
    <published>2013-01-16T12:23:54+00:00</published>
    <updated>2013-01-16T12:23:54+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Here's a few things I refactor as I write code down initially. Not entirely convinced it's strictly refactoring, but it's how I amend from one pattern I see in a line or three of code into a different structure that I feel achieves the same result with cleaner or more concise code.&lt;/p&gt;

&lt;h3 id="multiple-equality-comparisons"&gt;Multiple equality comparisons&lt;/h3&gt;

&lt;p&gt;Testing the equality of an object against another is fairly simple, just do &lt;code&gt;foo == "bar"&lt;/code&gt;. However, I usually try to test against multiple objects in a slightly different way. Your first thought might be that the easiest way is just to chain a series of &lt;code&gt;==&lt;/code&gt; with the OR (&lt;code&gt;||&lt;/code&gt;) operator.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foo == "bar" || foo == "baz" || foo == :sed || foo == 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I much prefer to flip it around, think of the objects I'm testing against as a collection (&lt;code&gt;Array&lt;/code&gt;), and then ask them if they contain the object I'm checking. And for that, I use &lt;code&gt;Array#include?&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ["bar", "baz", :sed, 5].include?(foo)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;(And if you're only testing against strings, you could use &lt;code&gt;%w(bar baz)&lt;/code&gt; as a shortcut to create the array. Here's more &lt;a href="http://caiustheory.com/ruby-shortcuts"&gt;ruby shortcuts&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="assigning-multiple-items-from-a-nested-hash-to-variables"&gt;Assigning multiple items from a nested hash to variables&lt;/h3&gt;

&lt;p&gt;Occasionally I find myself needing to be given a hash of a hash of data (most recently, an &lt;a href="https://github.com/intridea/omniauth/wiki"&gt;omniauth&lt;/a&gt; auth hash) and assign some values from it to separate variables within my code. Given the following hash, containing a nested hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;details = {
  uid: "12345",
  info: {
    name: "Caius Durling",
    nickname: "caius",
  },
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets say we want to extract the name and nickname fields from &lt;code&gt;details[:info]&lt;/code&gt; hash into their own local variables (or instance variables within a class, more likely.) We should probably handle the case of &lt;code&gt;details[:info]&lt;/code&gt; not being a hash, and try not to read from it if that's the case - so we might end up with something like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;name = details[:info] &amp;amp;&amp;amp; details[:info][:name]
nickname = details[:info] &amp;amp;&amp;amp; details[:info][:nickname]

name # =&amp;gt; "Caius Durling"
nickname # =&amp;gt; "caius"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then in the spirit of &lt;a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself"&gt;DRYing&lt;/a&gt; up our code, we see there's duplication in both lines in checking &lt;code&gt;details[:info]&lt;/code&gt; exists (not actually that it's a hash, but hey ho, we rely on upstream to send us &lt;code&gt;nil&lt;/code&gt; or a hash.) So we reduce it down using an if statement and give ourselves slightly less to type at the same time.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (( info = details[:info] ))
  name = info[:name]
  nickname = info[:nickname]
end

name # =&amp;gt; "Caius Durling"
nickname # =&amp;gt; "caius"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="returning-two-values-conditionally"&gt;Returning two values conditionally&lt;/h3&gt;

&lt;p&gt;Sometimes a method will end with a ternary, where depending on a condition it'll either return one or another value. If this conditional returns true, then the first value is returned. Otherwise it returns the second value. You could quite easily write it out as an if/else longer-form block too.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def my_method
  @blah == foo ? :foo_matches : :no_match
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My brain finds picking the logic in this apart slightly harder mentally, than if I drop a &lt;a href="http://en.wikipedia.org/wiki/Return_early"&gt;return early&lt;/a&gt; bomb on the method. Then it reads more akin to how I'd think through the logic. Return the first value if this conditional returns true. Otherwise the method returns this second value. I think the second value being on a completely separate line helps me make this mental distinction quicker too.&lt;/p&gt;

&lt;p&gt;So I'd write it this way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def my_method
  return :foo_matches if @blah == foo
  :no_match
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="returning-nil-or-a-value-conditionally"&gt;Returning nil or a value conditionally&lt;/h3&gt;

&lt;p&gt;Following on from the last snippet, but taking advantage of the ruby runtime a bit more, is when you're wanting to return a value if a conditional is true, or otherwise false. The easy way is to just write &lt;code&gt;nil&lt;/code&gt; in the ternary:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def my_method
  @foo == :bar ? :foo_matches : nil
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, we know ruby returns the result of the last expression in the method. And that if a single line conditional isn't met, it returns nil from the expression. Combining that, we can rewrite the previous example into this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def my_method
  :foo_matches if @foo == :bar
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it will still return nil in the case that &lt;code&gt;@foo&lt;/code&gt; doesn't match &lt;code&gt;:bar&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="returning-a-boolean"&gt;Returning a boolean&lt;/h3&gt;

&lt;p&gt;Sometimes you have a method that returns the result of a conditional, but it's written to return true/false in a conditional instead.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
def my_method
  @foo == :bar ? true : false
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The really easy refactor here is to just remove the ternary and leave the conditional.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
def my_method
  @foo == :bar
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And of course if you were returning &lt;code&gt;false&lt;/code&gt; when the conditional evaluates to &lt;code&gt;true&lt;/code&gt;, you can either negate the comparison (use &lt;code&gt;!=&lt;/code&gt; in that example), or negate the entire conditional result by prepending &lt;code&gt;!&lt;/code&gt; to the line.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Why I love DATA</title>
    <link rel="alternate" href="http://caiustheory.com/why-i-love-data/"/>
    <id>http://caiustheory.com/why-i-love-data/</id>
    <published>2013-01-08T19:09:42+00:00</published>
    <updated>2013-01-08T19:09:42+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;In a ruby script, there's a keyword &lt;code&gt;__END__&lt;/code&gt; that for a long time I thought just marked anything after it as a comment. So I used to use it to store snippets and notes about the script that weren't really needed inline. Then one day I stumbled across the &lt;code&gt;DATA&lt;/code&gt; constant, and wondered what flaming magic it was.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DATA&lt;/code&gt; is in fact an IO object, that you can read from (or anything else you'd do with an IO object). It contains all the content after &lt;code&gt;__END__&lt;/code&gt; in that ruby script file&lt;a href="#fn1"&gt;*&lt;/a&gt;. (It only exists when the file contains &lt;code&gt;__END__&lt;/code&gt;, and for the first file ruby invokes though. See &lt;a href="#fn1"&gt;footnote&lt;/a&gt; for more details.)&lt;/p&gt;

&lt;p&gt;How can we use this, and why indeed do I love this fickle constant? I mostly use it for quick scripts where I need to process text data, rather than piping to STDIN.&lt;/p&gt;

&lt;p&gt;Given a list of URLs that I want to open in my web browser and look at, I could do the following for instance:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DATA.each_line.map(&amp;amp;:chomp).each do |url|
  `open "#{url}"`
end

__END__
http://google.com/
http://yahoo.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which upon running (on a mac) would open all the URLs listed in DATA in my default web browser. (For bonus points, use &lt;a href="https://github.com/copiousfreetime/launchy#readme"&gt;Launchy&lt;/a&gt; for cross-platform compatibility.) Really handy &amp;amp; quick/simple when you've got 500+ URLs to open at once to go through. (I once had a job that required me to do this daily. Fun.)&lt;/p&gt;

&lt;p&gt;Or given a bunch of CSV data that you just want one column for, you could reach for &lt;code&gt;cut&lt;/code&gt; or &lt;code&gt;awk&lt;/code&gt; in the terminal, but ruby has a really good CSV library which I trust and know how to use already. Why not just use that &amp;amp; &lt;code&gt;DATA&lt;/code&gt; to pull out the field you want?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require "csv"

CSV.parse(DATA, headers: true).each do |row|
  puts row["kName"]
end

__END__
kId,kName,kURL
1,Google UK,http://google.co.uk
2,"Yahoo, UK",http://yahoo.co.uk

# &amp;gt;&amp;gt; Google UK
# &amp;gt;&amp;gt; Yahoo, UK
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I find when the data I want to munge is already in my clipboard, and I can run ruby scripts directly from text editors without having to save a file, it saves having to write the data out to a file, have ruby read it back in, etc just to do something with the data. I can just write the script reading from &lt;code&gt;DATA&lt;/code&gt;, paste the data in and run it. Which also lets me run it iteratively and build up a slightly more complex script that I don't want to keep. Then do what I need with the output and close the file without saving it.&lt;/p&gt;

&lt;p&gt;&lt;span id="fn1"&gt;*&lt;/span&gt; technically DATA is an IO handler to read &lt;code&gt;__FILE__&lt;/code&gt;, which has been wound forward to the start of the first line after &lt;code&gt;__END__&lt;/code&gt; in the file. And it only exists for the first ruby file to be invoked by the interpreter.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat &amp;gt; tmp/data.rb &amp;lt;&amp;lt;RB
p DATA.read
__END__
data.rb
RB

$ ruby tmp/data.rb
"data.rb\n"

$ cat &amp;gt; tmp/data-require.rb &amp;lt;&amp;lt;RB
require "./tmp/data"
RB

$ ruby tmp/data-require.rb
/Users/caius/tmp/data.rb:1:in `&amp;lt;top (required)&amp;gt;': uninitialized constant DATA (NameError)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And because it's a handle to &lt;code&gt;__FILE__&lt;/code&gt; though, you can rewind it and read the entire ruby script into itself…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby tmp/readself.rb 
DATA.rewind
print DATA.read

__END__
something goes here
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>Geolocation in nginx</title>
    <link rel="alternate" href="http://caiustheory.com/geolocation-in-nginx/"/>
    <id>http://caiustheory.com/geolocation-in-nginx/</id>
    <published>2012-12-04T09:42:00+00:00</published>
    <updated>2012-12-04T09:42:00+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Sometimes you need to have a rough idea of where your website visitor is located. There's many ways to geolocate them, but if you just want to go to country level then &lt;a href="http://dev.maxmind.com/geoip/geolite"&gt;MaxMind have free geo databases&lt;/a&gt; available to help you. When we needed to do this quickly on-the-fly at EmberAds, we came up with the &lt;a href="https://github.com/emberads/trifle#readme"&gt;trifle&lt;/a&gt; gem, which supports ipv4 and ipv6 lookups.&lt;/p&gt;

&lt;p&gt;Recently I was searching for something else to do with nginx and ran across &lt;a href="http://www.ruby-forum.com/topic/125810"&gt;a mailing list thread&lt;/a&gt; about using the maxmind database with nginx's &lt;a href="http://wiki.nginx.org/NginxHttpGeoModule"&gt;HTTP Geo module&lt;/a&gt; and do the lookup directly in nginx itself. Finally got a chance to sit down and work out the logistics of doing this. I've done this on an ubuntu 12.04 box, with the expected config file layouts that come with ubuntu.&lt;/p&gt;

&lt;p&gt;Run the following on your server (as someone with write access to nginx config files):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Generate the text file for nginx to import
perl &amp;lt;(curl -s https://raw.github.com/nginx/nginx/master/contrib/geo2nginx.pl) &amp;lt; &amp;lt;(zip=$(tempfile) &amp;amp;&amp;amp; curl -s -o $zip http://geolite.maxmind.com/download/geoip/database/GeoIPCountryCSV.zip &amp;amp;&amp;amp; unzip -p $zip) &amp;gt; /etc/nginx/nginx_ip_country.txt

# Tell nginx to work out the IP country and store in variable
echo 'geo $IP_COUNTRY {
  default --;
  include /etc/nginx/nginx_ip_country.txt;
}' &amp;gt; /etc/nginx/conf.d/ip_country.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now go find the http block for the vhost you want to have the header passed to, and assuming it's passenger, add the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# http {
  # server_name freddy.com;
  passenger_set_cgi_param HTTP_X_IP_COUNTRY $IP_COUNTRY;
# }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(If you don't use passenger, look at the docs for &lt;a href="http://wiki.nginx.org/HttpProxyModule#proxy_pass_header"&gt;proxy_pass_header&lt;/a&gt; or &lt;a href="http://wiki.nginx.org/HttpFastcgiModule#fastcgi_pass_header"&gt;fastcgi_pass_header&lt;/a&gt; to see which you'll require for your setup.)&lt;/p&gt;

&lt;p&gt;Reload nginx, and behold, &lt;code&gt;request.env["HTTP_X_IP_COUNTRY"]&lt;/code&gt; (assuming a rack app running under ruby) will be a two letter country code, or &lt;code&gt;"--"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately this is IPv4 only currently, there's a &lt;a href="http://forum.nginx.org/read.php?29,232648"&gt;thread on the nginx mailing list from November 2012&lt;/a&gt; saying IPv6 support should be coming on the v1.3 branch of nginx, but with no known ETA. So currently for IPv6 support, take a look at &lt;a href="https://github.com/emberads/trifle#readme"&gt;EmberAds' trifle gem&lt;/a&gt; instead.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Mounting Harman Kardon Soundsticks on the wall</title>
    <link rel="alternate" href="http://caiustheory.com/mounting-harman-kardon-soundsticks-on-the-wall/"/>
    <id>http://caiustheory.com/mounting-harman-kardon-soundsticks-on-the-wall/</id>
    <published>2012-11-06T20:46:45+00:00</published>
    <updated>2012-11-06T20:46:45+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Having recently moved my Soundstick III's into the front room, I've been thinking of a way to wall mount them safely to free up table room. Googling eventually turned up just one person who has previously documented &lt;a href="http://www.thanatopsic.org/hendrik/article/102/hot-hotdesking-action"&gt;mounting his soundsticks&lt;/a&gt; on the wall, using 22mm plumbing clips (intended for 22mm central heating pipes).&lt;/p&gt;

&lt;p&gt;A quick scrounge round the local Homebase this afternoon yielded a pack of similar clips, 5x 22mm push clips for £1.99. Having just fitted the speakers to the wall, they're nice and secure (providing no-one hangs on them, which they shouldn't do), fairly neat and simple to fit.&lt;/p&gt;

&lt;p&gt;I've left the subwoofer on the floor under the table, and only mounted the "sticks" (tweeters) on the wall, one each side of the mirror over our dining table. I can then conveniently run the cables to the "sticks" behind the mirror and keep it looking neater.&lt;/p&gt;

&lt;p&gt;I affixed the clips to the wall, one either side of the mirror with enough space for the speaker to sit without overlapping the mirror. Mostly just held the stick up and guessed at where to put the clip, but it looks ok.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://caius.name/images/wallmount-soundstick-2.jpg"&gt;
  &lt;img src="http://caius.name/images/wallmount-soundstick-2.jpg" alt="Speaker clip without speaker in it" width="320" /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then I bent the speaker stand backwards behind the stick (don't worry, it's on a hinge!) and threaded the cable through the middle of the ring to make it sit flusher against the wall.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://caius.name/images/wallmount-soundstick-1.jpg"&gt;
  &lt;img src="http://caius.name/images/wallmount-soundstick-1.jpg" alt="Speaker ring bent behind the unit" height="320" /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then it was just a case of easing the speaker ring into the clip, with the clip at the top of the ring (picture below if you can't visualise that easily). I think the rings are more like 24-25mm so it takes a bit of easing to get them in there. Once it's in there's no play in the clip for it to wiggle out though, even though it's plastic. I tried not to fatigue the clip arms too much wiggling it in there as well, so as to minimise the chance of it failing over time. (Something to check periodically!)&lt;/p&gt;

&lt;p&gt;&lt;a href="http://caius.name/images/wallmount-soundstick-4.jpg"&gt;
  &lt;img src="http://caius.name/images/wallmount-soundstick-4.jpg" alt="Close up of speaker unit in clip" height="320" /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, I just zip tied the cables together behind the mirror, and ran them down vertically from the middle to the floor and plugged them in. Sounds fantastic, and due to being plugged into an &lt;a href="http://www.apple.com/airportexpress/"&gt;Airport Express&lt;/a&gt;, anything compatible can stream audio through them wirelessly. Fabulous darling!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://caius.name/images/wallmount-soundstick-3.jpg"&gt;
  &lt;img src="http://caius.name/images/wallmount-soundstick-3.jpg" width="320" /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Click any image for a larger version)&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Musical Quiz</title>
    <link rel="alternate" href="http://caiustheory.com/musical-quiz/"/>
    <id>http://caiustheory.com/musical-quiz/</id>
    <published>2012-10-10T15:11:41+01:00</published>
    <updated>2012-10-10T15:11:41+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Using only song titles from ONE ARTIST, cleverly answer these questions. Try not to repeat a song title. It’s harder than you think.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Pick Your Artist:&lt;/dt&gt;
  &lt;dd&gt;Alanis Morissette&lt;/dd&gt;

  &lt;dt&gt;Describe yourself:&lt;/dt&gt;
  &lt;dd&gt;So-Called Chaos&lt;/dd&gt;

  &lt;dt&gt;If you could go anywhere, where would you go?:&lt;/dt&gt;
  &lt;dd&gt;edge of evolution&lt;/dd&gt;

  &lt;dt&gt;Your favourite form of transportation:&lt;/dt&gt;
  &lt;dd&gt;Head over Feet&lt;/dd&gt;

  &lt;dt&gt;Your best friend is:&lt;/dt&gt;
  &lt;dd&gt;Ironic&lt;/dd&gt;

  &lt;dt&gt;What’s the weather like?:&lt;/dt&gt;
  &lt;dd&gt;Limbo no More&lt;/dd&gt;

  &lt;dt&gt;If your life was a TV show, what would it be called?:&lt;/dt&gt;
  &lt;dd&gt;Citizen of the Planet&lt;/dd&gt;

  &lt;dt&gt;What is life to you?:&lt;/dt&gt;
  &lt;dd&gt;Madness&lt;/dd&gt;

  &lt;dt&gt;What is the best advice you have to give?:&lt;/dt&gt;
  &lt;dd&gt;You Learn&lt;/dd&gt;

  &lt;dt&gt;If you could change your name, what would it be?:&lt;/dt&gt;
  &lt;dd&gt;Not The Doctor&lt;/dd&gt;

  &lt;dt&gt;Your favourite food is:&lt;/dt&gt;
  &lt;dd&gt;Utopia&lt;/dd&gt;

  &lt;dt&gt;Thought for the Day:&lt;/dt&gt;
  &lt;dd&gt;Giggling Again For No Reason&lt;/dd&gt;

  &lt;dt&gt;How would you like to die?&lt;/dt&gt;
  &lt;dd&gt;havoc&lt;/dd&gt;

  &lt;dt&gt;Your motto:&lt;/dt&gt;
  &lt;dd&gt;Incomplete&lt;/dd&gt;
&lt;/dl&gt;

</content>
  </entry>
  <entry>
    <title>Human Affliction</title>
    <link rel="alternate" href="http://caiustheory.com/human-affliction/"/>
    <id>http://caiustheory.com/human-affliction/</id>
    <published>2012-04-09T15:04:32+01:00</published>
    <updated>2012-04-09T15:04:32+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;That damned human affliction,&lt;br /&gt;
Missing someone like an addiction,&lt;br /&gt;
The cure's quite simple,&lt;br /&gt;
Like bursting a pimple,&lt;br /&gt;
Hug them, hold them, repetition.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Where did life go?</title>
    <link rel="alternate" href="http://caiustheory.com/where-did-life-go/"/>
    <id>http://caiustheory.com/where-did-life-go/</id>
    <published>2012-03-30T17:33:51+01:00</published>
    <updated>2012-03-30T17:33:51+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Into the past,&lt;br /&gt;
with our regrets and tears,&lt;br /&gt;
and our successes and cheers.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>diff in shell</title>
    <link rel="alternate" href="http://caiustheory.com/diff-in-shell/"/>
    <id>http://caiustheory.com/diff-in-shell/</id>
    <published>2012-03-10T14:11:34+00:00</published>
    <updated>2012-03-10T14:11:34+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;h1 id="diff-muninpassengerstatus-sed--re-susrbinenv-rubyoptruby193-p0binruby-muninpassengerstatus"&gt;diff munin_passenger_status &amp;lt;(sed -re 's@#!/usr/bin/env ruby@#!/opt/ruby1.9.3-p0/bin/ruby@' munin_passenger_status)&lt;/h1&gt;
&lt;p&gt;1c1
&amp;lt; #!/usr/bin/env ruby
—
&amp;gt; #!/opt/ruby1.9.3-p0/bin/ruby&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Install capybara-webkit gem on Ubuntu</title>
    <link rel="alternate" href="http://caiustheory.com/install-capybara-webkit-gem-on-ubuntu/"/>
    <id>http://caiustheory.com/install-capybara-webkit-gem-on-ubuntu/</id>
    <published>2012-03-01T11:01:34+00:00</published>
    <updated>2012-03-01T11:01:34+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Dear future Caius searching for this issue,&lt;/p&gt;

&lt;p&gt;The apt package you need to install to use the capybara-webkit rubygem on ubuntu (tested on 10.04 and 11.10) is &lt;code&gt;libqt4-dev&lt;/code&gt;. That is, to &lt;code&gt;gem install capybara-webkit&lt;/code&gt;, you need to run &lt;code&gt;aptitude install libqt4-dev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Yours helpfully,&lt;br /&gt;
Past Caius&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Use Readline With Default Ruby on OS X</title>
    <link rel="alternate" href="http://caiustheory.com/use-readline-with-default-ruby-on-os-x/"/>
    <id>http://caiustheory.com/use-readline-with-default-ruby-on-os-x/</id>
    <published>2012-02-05T18:13:20+00:00</published>
    <updated>2012-02-05T18:13:20+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;OS X Lion comes with ruby 1.8.7-p249 installed, although it's compiled against libedit rather than libreadline. Whilst libedit is a mostly-compatible replacement for libreadline, I find there's a couple of settings I'm used to that don't work in libedit. (Like &lt;code&gt;history-beginning-search-backward&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;Luckily you can grab the source of ruby and compile just the readline extension, and move it into the right place for it to just work. Here's what's been working for me:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Install readline using homebrew
$ brew install readline

# Download the ruby source and check out 1.8.7-p249
$ mkdir ~/tmp &amp;amp;&amp;amp; cd ~/tmp
$ git clone git://github.com/ruby/ruby
$ cd ruby
$ git checkout v1_8_7_249
$ cd ext/readline
$ ruby extconf.rb --with-readline-dir=$(brew --prefix readline) --disable-libedit
$ make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you should have &lt;code&gt;readline.bundle&lt;/code&gt; in the current directory, and it should be compiled against your homebrew-installed readline library, rather than libedit that comes with the system. We can quickly double-check that by using &lt;code&gt;otool&lt;/code&gt; to check what the binary is linked against.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ otool -L readline.bundle
readline.bundle:
    /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/libruby.1.dylib (compatibility version 1.8.0, current version 1.8.7)
    /usr/local/Cellar/readline/6.2.2/lib/libreadline.6.2.dylib (compatibility version 6.0.0, current version 6.2.0)
    /usr/lib/libncurses.5.4.dylib (compatibility version 5.4.0, current version 5.4.0)
    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And in the output you should see a line listing "libreadline", and no lines listing "libedit". Which that shows, we've compiled it properly then. Now the bundle is built we need to move it into the right place so it's loaded when ruby is invoked.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ RL_PATH="/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/universal-darwin11.0"
# Back up the original bundle, just in cases
$ sudo mv "$RL_PATH/readline.bundle" "$RL_PATH/readline.bundle.libedit"
$ sudo mv readline.bundle "$RL_PATH/readline.bundle"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that's it. You've got a proper compiled-against-readline installed ruby 1.8.7-p249 on 10.7 now.&lt;/p&gt;

&lt;p&gt;One gotcha I ran into was needing to pass the same arguments to rvm when installing any other version of 1.8.7 on the same machine. Simple enough, just need to remember to do it though.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ CC=gcc-4.2 rvm install 1.8.7-p357 -C --with-readline-dir=$(brew --prefix readline) --disable-libedit
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>End Of An Era</title>
    <link rel="alternate" href="http://caiustheory.com/end-of-an-era/"/>
    <id>http://caiustheory.com/end-of-an-era/</id>
    <published>2012-01-12T15:30:00+00:00</published>
    <updated>2012-01-12T15:30:00+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I remember watching &lt;a href="http://www.youtube.com/watch?v=UF8uR6Z6KLc"&gt;Steve Jobs' commencement speech&lt;/a&gt; for the first time and being fairly touched by the three stories he told in it. The major one that resonated with me at the time, and has since made more sense to me, is the first story he tells about joining the dots later on when you're looking backwards. To quote from it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Of course, it was impossible to connect the dots looking forward when I was in college. But it was very very clear looking backwards ten years later. Again, you can't connect the dots looking forward, you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It made me think back to a time when I was a teenager and someone far older and wiser than me told me one way to think about the future and how what we do today affects where we end up. He described it as holding a piece of string in your hand, with the other end dangling free. The end of the string not attached to you is the future, and where you're holding it is the present. As you do things in life your hand moves around, flicking the string around and amplifying the movements of the present in the future.&lt;/p&gt;

&lt;p&gt;I think what he was trying to impart by telling me that story was to be careful not to do anything too extravagant in the present (like get expelled from school for instance), so as not to affect the future too much. Which I never really took on board at the time, but now I look back at the dots of my (some would say) rather short life so far, and connect them to see how some things influenced other things and how everything works out in the end. But that sometimes you need to push yourself or do something unexpected to get there.&lt;/p&gt;

&lt;h3 id="looking-backwards-to-go-forward"&gt;Looking Backwards to go Forward&lt;/h3&gt;

&lt;p&gt;When I look back over the last few years of my life, I find the dots quite amazing to connect. First there was BarCamp Sheffield 2007 where I met &lt;a href="http://www.thehodge.co.uk/"&gt;Dom&lt;/a&gt;, and there was Twitter and BarCamp Manchester &amp;amp; Leeds where I met geeks like &lt;a href="http://www.3hv.co.uk/"&gt;Rahoul&lt;/a&gt;, &lt;a href="http://johnleach.co.uk/"&gt;John&lt;/a&gt; and &lt;a href="http://brightbox.co.uk/"&gt;Jeremy&lt;/a&gt; both online and offline. And then in June 2008 I moved to Leeds, sharing a house with Dom and quite quickly ended up being hired into what was basically my dream first job at &lt;a href="http://www.brightbox.com/"&gt;Brightbox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And that's where I've been working for the last 1198 days, having far too much fun, solving weird, wonderful and sometimes downright frustrating problems, all with fantastically awesome and hilarious colleagues. And working on a massive variety of things, from &lt;a href="https://github.com/brightbox/rujitsu/"&gt;tiny utilities&lt;/a&gt; to the newly launched &lt;a href="http://www.brightbox.com/"&gt;Cloud Platform&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And today I flick my wrist ever so slightly more than normal by leaving Brightbox, without really knowing where the future end of the string will eventually end up, but knowing that I'll look back in a few years and see dots connected that I can't imagine today. I truly don't think I could have had a better job to start off as a professional geek, and especially want to thank &lt;a href="http://johnleach.co.uk/"&gt;John&lt;/a&gt; and &lt;a href="http://brightbox.co.uk/"&gt;Jeremy&lt;/a&gt; for hiring me and helping me start my career in the best way possible.&lt;/p&gt;

&lt;p&gt;As for my next challenge, I'm solving interesting problems in the online advertising world with &lt;a href="http://cristianobetta.com/"&gt;Cristiano&lt;/a&gt;, &lt;a href="http://www.thehodge.co.uk/"&gt;Dom&lt;/a&gt;, &lt;a href="http://missgeeky.com/"&gt;Melinda&lt;/a&gt; and &lt;a href="http://www.3hv.co.uk/"&gt;Rahoul&lt;/a&gt;. And we're bloody amazing together. :-)&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Nighttime Horrors</title>
    <link rel="alternate" href="http://caiustheory.com/nighttime-horrors/"/>
    <id>http://caiustheory.com/nighttime-horrors/</id>
    <published>2012-01-10T10:51:03+00:00</published>
    <updated>2012-01-10T10:51:03+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;Screaming ghouls and scary monsters,&lt;br /&gt;
Permeating our subconscious,&lt;br /&gt;
At night they roam freely through our dreams,&lt;br /&gt;
With the sole intent of causing our screams,&lt;br /&gt;
Scaring us until we awake,&lt;br /&gt;
Annoyingly, for we know they are fake.&lt;/p&gt;
&lt;/blockquote&gt;

</content>
  </entry>
  <entry>
    <title>Defining Ruby Superclasses On The Fly</title>
    <link rel="alternate" href="http://caiustheory.com/defining-ruby-superclasses-on-the-fly/"/>
    <id>http://caiustheory.com/defining-ruby-superclasses-on-the-fly/</id>
    <published>2011-12-18T01:13:14+00:00</published>
    <updated>2011-12-18T01:13:14+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Any rubyist that's defined a class should understand the following class definition:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Foo &amp;lt; Object
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It creates a new Constant (&lt;code&gt;Foo&lt;/code&gt;) that is a subclass of &lt;code&gt;Object&lt;/code&gt;. Pretty straightforward. But what you might not know is that ruby executes each line it reads in as it reads them. So we could do the following to show that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Foo &amp;lt; Object
  puts "we just defined object!"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And get the following output when we run that file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# &amp;gt;&amp;gt; we just defined object!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So.. we know ruby is executing things on the fly whilst defining classes for us. How can we use this for profit and shenanigans?! (Err, use this for vanquishing evil and creating readable code I mean. Honest.)&lt;/p&gt;

&lt;p&gt;How about if we've got a couple of opinionated people who like to think they've got the biggest ego in the interpreter? The last one to be loaded likes to have any new people ushered into the interpreter to be a subclass of themselves. Lets abuse a global for storing it in, and use a method to choose that on the fly when creating a new class.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def current_awkward_bugger
  $awkward_bugger
end

class Simon; end
$awkward_bugger = Simon

class Fred &amp;lt; current_awkward_bugger()
end
Fred.superclass # =&amp;gt; Simon

class Harold; end
$awkward_bugger = Harold

class John &amp;lt; current_awkward_bugger()
end
John.superclass # =&amp;gt; Harold
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Okay, so that looks a bit different to normally defined classes. We create &lt;code&gt;Simon&lt;/code&gt;, assign him to the awkward bugger global then create &lt;code&gt;Fred&lt;/code&gt;, who subclasses the return value of the &lt;code&gt;current_awkward_bugger&lt;/code&gt; method which happens to be &lt;code&gt;Simon&lt;/code&gt; currently. Then &lt;code&gt;Harold&lt;/code&gt; muscles his way into the interpreter and decides he's going to be the current awkward bugger, so poor &lt;code&gt;John&lt;/code&gt; gets to subclass &lt;code&gt;Harold&lt;/code&gt; even though he's defined in the same way as &lt;code&gt;Fred&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On a somewhat related note there's a lovely method called &lt;code&gt;const_missing&lt;/code&gt; that gets invoked when you call a Constant in ruby that isn't defined. (Much like &lt;code&gt;method_missing&lt;/code&gt; if you're familiar with that.) Means you can do even more shenanigans with non-existent superclasses for classes you're defining.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Simon; end
class Harold; end

class Object
  def self.const_missing konstant
    [Simon, Harold].shuffle.first
  end
end

class Fred &amp;lt; ArrogantBastard
end
Fred.superclass # =&amp;gt; Simon

class Albert &amp;lt; ArrogantBastard
end
Albert.superclass # =&amp;gt; Harold
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So here we're choosing from Simon and Harold on the fly each time a missing constant is referenced (in this case the aptly named &lt;code&gt;ArrogantBastard&lt;/code&gt; constant.) If you run this code yourself you'll see the superclasses change on each run according to what your computer picks that time.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Magic Bubble</title>
    <link rel="alternate" href="http://caiustheory.com/magic-bubble/"/>
    <id>http://caiustheory.com/magic-bubble/</id>
    <published>2011-12-06T22:03:46+00:00</published>
    <updated>2011-12-06T22:03:46+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;You and me,&lt;br /&gt;
Quietly,&lt;br /&gt;
Watching the rain in the stars,&lt;br /&gt;
From a bubble near Mars.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>Experimental Procrastination</title>
    <link rel="alternate" href="http://caiustheory.com/experimental-procrastination/"/>
    <id>http://caiustheory.com/experimental-procrastination/</id>
    <published>2011-11-07T00:41:49+00:00</published>
    <updated>2011-11-07T00:41:49+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;A while ago I read a blog post that Elizabeth N wrote, on the &lt;a href="http://naramore.net/blog/the-value-of-self-serving-code"&gt;value of writing self-serving code&lt;/a&gt;. Ever since I've been moderately aware of when I've written self-serving code, usually either at hackdays, or just little projects where I'm either experimenting with something or just bashing out a new idea.&lt;/p&gt;

&lt;p&gt;In fact, I even wrote about one of my recent "self-serving" projects I bashed out in an evening, &lt;a href="http://caiustheory.com/tweetsavr"&gt;TweetSavr&lt;/a&gt;. It has no tests, was written moderately quickly and not refactored immensely (here's hoping the git history backs me up on that! I certainly didn't knowingly majorly refactor it at any point at least.)  But it "scratched an itch" and solved the problem I had, and it works for the limited use case I need it to, so it's a success as far as I'm concerned.&lt;/p&gt;

&lt;p&gt;More recently a friend remarked to me in a private conversation that everyone needs to procrastinate occasionally, to save them going "stir crazy". Whilst I agree with what she said, everyone needs to switch gears and do something that perhaps you shouldn't, or that won't directly contribute to completing your current task, I couldn't help but draw a link between procrastinating and writing self-serving code.&lt;/p&gt;

&lt;p&gt;Now I'm a programmer, it's what I did for a hobby through school, it's what I leapt into a career doing when I was offered the chance and even when I've had a particularly exhausting week, it's something I'll eventually turn back to. But I realised that often when I procrastinate, I do so by writing self-serving code. My creative output or process if you will is to create things digitally on the computer, be that a web app, hacky script to let me do something I'm not supposed to be able to with someone else's application, just dicking around or exploring whatever tidbit of interesting info/behaviour in a language or library someone's just shared on IRC.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Aside: I've often joked (semi-seriously) that if/when I have enough cash in the bank to not have to actually have a "day job", I'll just spend all day building the random ideas that get tossed out on IRC instead. Quite often the smaller things I code up anyway already of an evening and they end up in my &lt;a href="https://gist.github.com/caius"&gt;gists&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now it's unhealthy and counter-productive to want to program 24/7, at least in the long term. (Doing the odd 24 hour hackday event here and there can mean winning fun prizes to play with however.) And sometimes all that you need to do to solve a problem you've been butting your head against for the last couple of hours is to get off the damn computer. (I usually find taking a shower makes my subconscious reveal the answer it's been quietly computing and hey presto, I know how to solve the problem properly!) At other times it just requires changing gears and flexing a different part of your brain muscle. Like say, writing self-serving code. And procrastinating by doing so.&lt;/p&gt;

&lt;p&gt;I'm not entirely sure what the point of this thought process is, or if there can really be a point to it, but it really intrigued me drawing a link between procrastinating and writing self-serving code. I can imagine other creatively minded people might do much the same thing, an artist just sketching for the sake of sketching, or a writer taking a couple of hours off from her next novel to write a short story for her blog. (That last one is actually something a friend's done, go read her &lt;a href="http://libertyfallsdown.wordpress.com/tag/short-story/"&gt;short stories&lt;/a&gt;, they're quite good. Start from the bottom though.)&lt;/p&gt;

&lt;p&gt;And of course sometimes you just need to vegetate and read facebook (or twitter), but constructive procrastination does serve a real purpose I think, and can be quite useful as well.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Install GCC-4.2.1 (Apple build 5666.3) with Xcode 4.2</title>
    <link rel="alternate" href="http://caiustheory.com/install-gcc-421-apple-build-56663-with-xcode-42/"/>
    <id>http://caiustheory.com/install-gcc-421-apple-build-56663-with-xcode-42/</id>
    <published>2011-10-30T17:36:48+00:00</published>
    <updated>2011-10-30T17:36:48+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;As of Xcode 4.2 Apple have stopped bundling GCC with it, shipping only the (mostly) compatible llvm-gcc binary instead. The suggested fix is to install GCC using the &lt;a href="https://github.com/kennethreitz/osx-gcc-installer"&gt;osx-gcc-installer&lt;/a&gt; project. However, I wanted to build and install it from source, which apple provides at &lt;a href="http://opensource.apple.com/"&gt;http://opensource.apple.com/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should already have installed Xcode 4.2 from the app store, then basically the following steps are to grab the tarball from the &lt;a href="http://opensource.apple.com/release/developer-tools-41/"&gt;4.1 developer tools source&lt;/a&gt;, unpack &amp;amp; compile it, then install it into the right places.&lt;/p&gt;

&lt;h2 id="instructions"&gt;Instructions&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# Grab and unpack the tarball
$ mkdir ~/tmp &amp;amp;&amp;amp; cd ~/tmp
$ curl -O http://opensource.apple.com/tarballs/gcc/gcc-5666.3.tar.gz
$ tar zxf gcc-5666.3.tar.gz
$ cd gcc-5666.3

# Setup some stuff it requires
$ mkdir -p build/obj build/dst build/sym
# And then build it. You should go make a cup of tea or five whilst this runs.
$ gnumake install RC_OS=macos RC_ARCHS='i386 x86_64' TARGETS='i386 x86_64' \
  SRCROOT=`pwd` OBJROOT=`pwd`/build/obj DSTROOT=`pwd`/build/dst SYMROOT=`pwd`/build/sym

# And finally install it
$ sudo ditto build/dst /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now you should have &lt;code&gt;gcc-4.2&lt;/code&gt; in your &lt;code&gt;$PATH&lt;/code&gt;, available to build all the things that &lt;code&gt;llvm-gcc&lt;/code&gt; fails to compile.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>TweetSavr</title>
    <link rel="alternate" href="http://caiustheory.com/tweetsavr/"/>
    <id>http://caiustheory.com/tweetsavr/</id>
    <published>2011-10-22T13:05:39+01:00</published>
    <updated>2011-10-22T13:05:39+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I've had a dream for a while. A simple webapp that takes the last tweet in a conversation and outputs that conversation in chronological order on a page you can link to forevermore. Occasionally I'll google to see if anything new's turned up, but they all seem to do far more, require the start and end tweets or are covered in ads.&lt;/p&gt;

&lt;p&gt;So one friday evening I just built it. It's called &lt;a href="http://tweetsavr.com/"&gt;TweetSavr&lt;/a&gt;. It's very simple—to the point the error page is just a standard 500 server error page currently. It fetches, caches and displays a conversation, given just the last tweet in said conversation.&lt;/p&gt;

&lt;p&gt;KISS extends to the interface as well, I'm quite a fan of &lt;a href="http://jerz.setonhill.edu/writing/etext/url-hacking.htm"&gt;URL hacking&lt;/a&gt; to use webapps, so TweetSavr works on that basis as well. The homepage sort of has some help telling you how to use it, but you basically take the (old-twitter) URL of the last tweet and paste it after tweetsavr.com in the address bar. Eg, &lt;a href="http://tweetsavr.com/http://twitter.com/ElizabethN/status/19766711653765120"&gt;http://tweetsavr.com/http://twitter.com/ElizabethN/status/19766711653765120&lt;/a&gt;. It'll then redirect you through to the actual page for that conversation. You can also put just the status id on the end of the URL, &lt;a href="http://tweetsavr.com/19766711653765120"&gt;http://tweetsavr.com/19766711653765120&lt;/a&gt; and hey presto, it loads.&lt;/p&gt;

&lt;p&gt;The caching layer is moderately rudimentary, after fetching a tweet that isn't in the cache it writes out a hash of data for that tweet into a yaml file. And when looking up a tweet it checks to see if that file exists, reading it in from disk if it is. Bonus side-effect is it builds up a corpus of tweets as yaml files on disk.&lt;/p&gt;

&lt;p&gt;It lives on the internet at &lt;a href="http://tweetsavr.com/"&gt;http://tweetsavr.com/&lt;/a&gt; and the source is on github at &lt;a href="http://github.com/caius/tweetsavr"&gt;http://github.com/caius/tweetsavr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Side note: isn't it wonderful what we can create given just a few hours, a server somewhere in the cloud, and an idea? Never ceases to amaze me what can be built in just a short amount of time, even the dead simple things.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>#to_param and keyword slugs</title>
    <link rel="alternate" href="http://caiustheory.com/to_param-and-keyword-slugs/"/>
    <id>http://caiustheory.com/to_param-and-keyword-slugs/</id>
    <published>2011-07-06T00:13:43+01:00</published>
    <updated>2011-07-06T00:13:43+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Imagine you've got a blogging app and it's currently generating URL paths like &lt;code&gt;posts/10&lt;/code&gt; for individual posts. You decide the path should contain the post title (in some form) to make your URLs friendlier when someone reads them. I know I certainly prefer to read &lt;a href="http://caiustheory.com/abusing-ruby-19-and-json-for-fun"&gt;http://caiustheory.com/abusing-ruby-19-and-json-for-fun&lt;/a&gt; vs &lt;a href="http://caiustheory.com/?id=70"&gt;http://caiustheory.com/?id=70&lt;/a&gt;. &lt;em&gt;(That's a fun blog post if you're into (ab)using ruby occasionally!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now you know &lt;em&gt;all&lt;/em&gt; about how to change the URL path that rails generates—just define &lt;code&gt;to_param&lt;/code&gt; in your app. Something simple that generates a slug consisting of hyphens and lowercase alphanumerical characters. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 70-abusing-ruby-1-9-json-for-fun
def to_param
  "#{id}-#{title.gsub(/\W/, "-").squeeze("-")}".downcase
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;NB&lt;/strong&gt;: You might want to go the route of storing the slug against the post record in the database and thus generating it before saving the record. In which case the rest of this post is sort of moot and you just need to search on that column. If not, then read on!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now we're generating a nice human-readable URL we need to change the way we find the post in the controller's show action. Up until now it's been a simple &lt;code&gt;@post = Post.find(params[:id])&lt;/code&gt; to grab the record out the database. Problem now is &lt;code&gt;params[:id]&lt;/code&gt; is &lt;code&gt;"70-abusing-ruby-1-9-json-for-fun"&lt;/code&gt;, rather than just &lt;code&gt;"70"&lt;/code&gt;. A quick check in the &lt;a href="http://ruby-doc.org/core/classes/String.html#M001149"&gt;String#to_i&lt;/a&gt; docs reveals it "Returns the result of interpreting leading characters in str as an integer base base (between 2 and 36)." Basically it extracts the first number it comes across and returns it.&lt;/p&gt;

&lt;p&gt;Knowing that we can just lean on it to extract the id before using find to look for the post: &lt;code&gt;@post = Post.find(params[:id].to_i)&lt;/code&gt;. Fantastic! We've got nice human readable paths on our blog posts and they can be found in the database. All finished… or are we?&lt;/p&gt;

&lt;p&gt;There's still a rather embarassing bug in our code where we're not explicitly checking the slug in the URL against the slug of the Post we've extracted from the database. If we visited &lt;code&gt;/posts/70-ruby-19-sucks-and-python-rules-4eva&lt;/code&gt; it would load the blog post and render it without batting an eyelid. This has caused &lt;a href="http://www.niemanlab.org/2011/04/how-url-spoofing-can-put-libelous-words-into-news-orgs-mouths/"&gt;rather a few embarrassing situations&lt;/a&gt; for some high profile media outlets who don't (or didn't) check their URLs and just output the content. Luckily there's a simple way for us to check this.&lt;/p&gt;

&lt;p&gt;All we want to do is render the content if the id param matches the slug of the post exactly, and return a 404 page if it doesn't. We already know the id param (&lt;code&gt;params[:id]&lt;/code&gt;) and have pulled the Post object out of the database and stored it in an instance variable (&lt;code&gt;@post&lt;/code&gt;). The &lt;code&gt;@post&lt;/code&gt; knows how to generate it's own slug, using &lt;code&gt;#to_param&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we end up with something like the following in our posts controller, which does all the above and correctly returns a 404 if someone enters an invalid slug (even if it starts with a valid post id):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
  @post = Post.find(params[:id].to_i)
  render_404 &amp;amp;&amp;amp; return unless params[:id] == @post.to_param
end

def render_404
  render :file =&amp;gt; Rails.root + "public/404.html", :status =&amp;gt; :not_found
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And going to an invalid path like &lt;code&gt;/posts/70-ruby-19-sucks-and-python-rules-4eva&lt;/code&gt; just renders the default rails 404 page with a 404 HTTP status. (If you want the id to appear at the end of the path, alter &lt;code&gt;to_param&lt;/code&gt; accordingly and do something like &lt;code&gt;params[:id].match(/\d+$/)&lt;/code&gt; to extract the Post's id to search on.)&lt;/p&gt;

&lt;p&gt;Hey presto, we've implemented human readable slugs that are tamper-proof (without storing them in the database.)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(And bonus points if in fact you spotted I used my blog as an example, but that it isn't a rails app. (Nor contains the blog post ID in the pretty URL.) It's actually powered by &lt;a href="http://habariproject.org/"&gt;Habari&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Bad Recruiters - Rhys Evans at Devonshire</title>
    <link rel="alternate" href="http://caiustheory.com/bad-recruiters-rhys-evans-at-devonshire/"/>
    <id>http://caiustheory.com/bad-recruiters-rhys-evans-at-devonshire/</id>
    <published>2011-02-09T14:03:49+00:00</published>
    <updated>2011-02-09T14:03:49+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;This is a linked-in invitation I received from Rhys, and my reply.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Update 2011-02-10:&lt;/strong&gt; As much as recruiters can be scummy twats, Rhys appears to at least care somewhat about his relationship with potential clients/contacts and has &lt;a href="http://caiustheory.com/bad-recruiters-rhys-evans-at-devonshire#comment-34098"&gt;responded in the comments&lt;/a&gt;. Normally my policy with recruiters is a two strike one, first email gets a polite "No thanks, go away.", second gets a mini-rant to bugger off and stop contacting me. Rhys hadn't technically contacted me before, but the unsolicited xmas email showed up when I searched my mailbox (which had annoyed me back when I received it.) And asking amongst my peers around at the time showed he was fairly disliked. (As you can see in some of the comments left below as well.) Since then, including a comment left below, a few people I trust have noted he's really not that bad as recruiters go, and the fact he's left a comment acknowledging perhaps his approach is a little misguided is enough for me to see he does still care about trying to be better than the rest of the recruitment crowd.&lt;/p&gt;

&lt;p&gt;I still stand by my initial reply to him, and all other recruiters who don't understand "No." however.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;On 02/09/11 5:30 AM, Rhys Evans wrote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Caius,&lt;/p&gt;

  &lt;p&gt;Good afternoon, I hope all is well.&lt;/p&gt;

  &lt;p&gt;I've noticed we are connected to a number of the same people within the Rails space on LinkedIn. I've tried you on 07960 268100 to no avail so I'd like to add you to my network and make contact.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;Hi Rhys,&lt;/p&gt;

&lt;p&gt;I've already got you blocked on twitter, so we've obviously run across each other in the past. You also appear to have sent me a Merry Xmas email from Devonshire, with no previous contact initiated by me. (I seem to remember a lot of my friends got those emails as well and we eventually worked out you'd scraped Github for them.)&lt;/p&gt;

&lt;p&gt;Now it would appear you're being more intrusive and hunting folk out on linked in, ignoring the fact that they are employed and have specifically set linked in to say they aren't looking for new jobs currently. From asking around you harass a few of my friends, to the point of ringing one up recently to tell them you knew they'd changed jobs and where they were now working. If you're going to spend time doing that much research then why not have the decency to not be a completely mannerless cunt and leave them alone when they request you to.&lt;/p&gt;

&lt;p&gt;It would also appear you've just blanket-spammed me and a few people in my peer group through linked in with the same request, again a pretty dumb thing to do. It's as if you recruiters think we never talk to each other, and don't realise how much you lot being a bunch of pestering spammy bastards taints developers against ever dealing with a recruiter.&lt;/p&gt;

&lt;p&gt;So no, I don't think I do want to accept your invitation to connect. And please never phone, email or contact me via any other means. I'm happily employed and if I &lt;em&gt;ever&lt;/em&gt; need the services of a recruiter I'll find someone who actually possesses an ounce of politeness about approaching (potential) candidates.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br /&gt;
Caius&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Abusing Ruby 1.9 &amp;amp; JSON for fun</title>
    <link rel="alternate" href="http://caiustheory.com/abusing-ruby-19-and-json-for-fun/"/>
    <id>http://caiustheory.com/abusing-ruby-19-and-json-for-fun/</id>
    <published>2011-02-07T19:16:58+00:00</published>
    <updated>2011-02-07T19:16:58+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Ever since I found out about the new hash syntax you can use in ruby 1.9, and how similar that syntax is to JSON, I've been waiting for someone to realise you can just abuse &lt;code&gt;eval()&lt;/code&gt; for parsing (some) JSON now.&lt;/p&gt;

&lt;p&gt;For example, lets say we have the following ruby hash, which could be generated by a RESTful api:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;thing = {
    :person =&amp;gt; {
        :name =&amp;gt; "caius"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we pull in the JSON gem and dump that out as a string, we get the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby-1.9.2-p136 &amp;gt; jsonstr = thing.to_json
 =&amp;gt; '{"person":{"name":"caius"}}'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's… not quite what we wanted. It's not going to turn back into valid ruby as it is. Luckily javascript will parse objects without requiring the attributes to be wrapped in quotes, eg: &lt;code&gt;{some: "attribute"}&lt;/code&gt;. We could build a JSON emitter that does it properly, or we could just run it through a regular expression instead. &lt;em&gt;(Lets also add a space after the colon to aid readability.)&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby-1.9.2-p136 &amp;gt; jsonstr.gsub!(/"([^"]+)": /, '\1: ')
 =&amp;gt; '{person: {name: "caius"}}'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Okay, so now we've turned a ruby hash into a JSON hash, that can still be parsed by the browser. Here's a screenshot to prove that:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Valid JSON 'thing'" src="http://farm6.static.flickr.com/5300/5425314597_43be5824cf_o.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it parses that into a valid JS object, complete with person and then (nested) name attributes. If we wanted to, &lt;code&gt;thing["person"]["name"]&lt;/code&gt; or &lt;code&gt;thing.person.name&lt;/code&gt; would access the nested value "caius" just fine.&lt;/p&gt;

&lt;p&gt;Now then, we've proved that is successfully parsed into javascript objects by the browser, generated from a ruby hash. No great shakes there, that's fairly simple and has worked for ages. Now for my next trick, I'm going to turn that string of JSON back into a ruby hash, all without going anywhere near the JSON gem.&lt;/p&gt;

&lt;p&gt;Some of you might have guessed what I'm about to do and have started hoping you've guessed wrongly — just for the record I don't condone doing this except for fun and games. The JSON gem is there for a reason ;) With that little disclaimer out the way, here we go!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby-1.9.2-p136 &amp;gt; thing2 = eval(jsonstr)
 =&amp;gt; {:person=&amp;gt;{:name=&amp;gt;"caius"}}
ruby-1.9.2-p136 &amp;gt; thing2 == thing
 =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh snap! We just turned javascript objects back into valid ruby objects, in one simple method call. And we'd be able to access the "caius" value by calling &lt;code&gt;thing2[:person][:name]&lt;/code&gt;, or creating OpenStructs from the hashes and calling &lt;code&gt;thing2.person.name&lt;/code&gt;. Which is uncannily like the JS!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updated 2011-02-07&lt;/strong&gt;: &lt;a href="http://jens.ayton.se/"&gt;Jens Ayton&lt;/a&gt; pointed out unquoted keys aren't strictly valid JSON, which is correct. Amended to say they're parsed as javascript objects instead, with no mention of it being valid JSON.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>App Store Hidden Preferences</title>
    <link rel="alternate" href="http://caiustheory.com/app-store-hidden-preferences/"/>
    <id>http://caiustheory.com/app-store-hidden-preferences/</id>
    <published>2011-01-06T19:45:49+00:00</published>
    <updated>2011-01-06T19:45:49+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;See the Update at the end before you get excited :(&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Having just installed 10.6.6 to use the Mac App Store, I was &lt;a href="http://twitter.com/Caius/status/23096911170899968"&gt;slightly annoyed&lt;/a&gt; that it fills my dock with apps as I install them. I'm a bit strange, in that I use a hidden preference to make the dock uneditable (it stops me accidentally dragging an app off.) But that means I can't drag off the Mac App Store installed apps either.&lt;/p&gt;

&lt;p&gt;Had a quick look through &lt;code&gt;/Applications/App Store.app/Contents/MacOS/App Store&lt;/code&gt; with &lt;code&gt;strings&lt;/code&gt; (love that tool) and noted a few strings that looked interesting. (There's a full list &lt;a href="https://gist.github.com/768442"&gt;in this gist&lt;/a&gt;.) There wasn't anything that explicitly stated it stopped it putting anything in the dock, but I did notice an option that stopped it showing &lt;strong&gt;install progress&lt;/strong&gt; in the dock.&lt;/p&gt;

&lt;p&gt;Yank up a terminal window, bash out the following…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;defaults write com.apple.appstore FRDebugShowInstallProgress -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;…head back to the MAS and install another (free) app, and hey presto, it's leaving my dock alone! Hopefully that's all I needed to continue using my Dock as I like. (Hidden, and left alone.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2011-01-06:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Seems my joy was short-lived. I'd re-downloaded an app I'd already purchased and it just showed download progress in the MAS app, not in the dock. Installing new applications still shows up in the dock (annoyingly.)&lt;/p&gt;

&lt;p&gt;I've been having a poke through how it all hangs together, and if it's possible to actually block downloads from the Dock or not. It doesn't look like there's a hidden preference to hide new apps from downloading in the dock, you can just disable the progress bars in the dock with prefs. The MAS.app seems to be codenamed "Firenze", with &lt;a href="https://gist.github.com/768829"&gt;the "hidden" prefs&lt;/a&gt; being prefixed with "FRDebug".&lt;/p&gt;

&lt;p&gt;As I understand it, the App\ Store.app invokes a binary inside &lt;code&gt;/System/Library/PrivateFrameworks/CommerceKit.framework&lt;/code&gt; called "storeagent" to do the actual downloading/talking to the dock. From looking at the &lt;a href="https://gist.github.com/768837"&gt;class-dump&lt;/a&gt; of storeagent it communicates with the dock to place a new type of DockTile. Interesting sounding methods to (potentially?) swizzle are &lt;code&gt;-[DownloadQueue sendDownloadListToDock]&lt;/code&gt; and &lt;code&gt;-[DownloadQueue tellDockToAddDownload:]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I've given up for now, but I reckon it should be possible to create a bundle that swizzles the right methods in storeagent to stop it placing the downloads on the Dock.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Facebook iPhone app Contact Sync isn't automatic</title>
    <link rel="alternate" href="http://caiustheory.com/facebook-iphone-app-contact-sync-isnt-automatic/"/>
    <id>http://caiustheory.com/facebook-iphone-app-contact-sync-isnt-automatic/</id>
    <published>2010-10-06T15:10:06+01:00</published>
    <updated>2010-10-06T15:10:06+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;There's an article on the guardian about &lt;a href="http://www.guardian.co.uk/technology/blog/2010/oct/06/facebook-privacy-phone-numbers-upload"&gt;private phone numbers being uploaded from facebook&lt;/a&gt;, and another over &lt;a href="http://www.techeye.net/security/facebook-takes-and-stores-data-numbers-from-your-iphone"&gt;techeye.net on the same subject.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly a quote from the techeye article:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Facebook doesn't warn users that they are uploading their phone's address book to Facebook.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And whilst the guardian article never says it happens automatically, it also doesn't lay it out that you have to &lt;strong&gt;explicitly&lt;/strong&gt; enable that feature, &lt;strong&gt;and&lt;/strong&gt; agree to the facebook app uploading the data.&lt;/p&gt;

&lt;p&gt;I was pretty sure that facebook wouldn't be grabbing all your contact information without telling you, if they did at all, and that both articles were just pure scaremongering. So I fired up the facebook iPhone app, headed into my friends list on there, clicked sync and got the following screen:&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="http://farm5.static.flickr.com/4148/5056619687_973ae660cc_d.jpg" /&gt;&lt;br /&gt;
&lt;a href="http://www.flickr.com/photos/caius/5056619687/"&gt;View Original&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, so according to that text, they're just pulling down profile images and profile links from facebook and putting them in your address book against your contacts. Seems fairly harmless so far. So I toggled the top switch, to enable Contact Sync, and got the following screen:&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="http://farm5.static.flickr.com/4145/5056697193_252e954ec3_d.jpg" /&gt;&lt;br /&gt;
&lt;a href="http://www.flickr.com/photos/caius/5056697193/"&gt;View Original&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reading that, it's fairly obvious what data facebook are uploading (although a little ambiguous why), and it &lt;strong&gt;certainly&lt;/strong&gt; isn't happening automatically. As it says, it uploads the "name, email address, phone number" from all your contacts to facebook, and pull down "your friends' profile photos and other info from Facebook".&lt;/p&gt;

&lt;p&gt;So whilst facebook &lt;em&gt;are&lt;/em&gt; collecting more data (albeit stored subject to their Privacy Policy), it's certainly &lt;strong&gt;NOT&lt;/strong&gt; done automatically, and is &lt;strong&gt;very explicit&lt;/strong&gt; about what is being uploaded at the point you enable it.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>+[NSObject load] in MacRuby</title>
    <link rel="alternate" href="http://caiustheory.com/nsobject-load-in-macruby/"/>
    <id>http://caiustheory.com/nsobject-load-in-macruby/</id>
    <published>2010-06-12T03:11:32+01:00</published>
    <updated>2010-06-12T03:11:32+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;If you've not heard of it, &lt;a href="http://www.macruby.org/"&gt;MacRuby&lt;/a&gt; is &lt;q&gt;an implementation of Ruby 1.9 directly on top of Mac OS X core technologies such as the Objective-C runtime and garbage collector, the LLVM compiler infrastructure and the Foundation and ICU frameworks.&lt;/q&gt; Basically means you write in Ruby using Objective-C frameworks, and vice versa. It's pretty damn cool to be honest!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="what-is-nsobject-load"&gt;What is +[NSObject load]?&lt;/h3&gt;

&lt;p&gt;From the &lt;a href="http://developer.apple.com/mac/library/documentation/cocoa/reference/foundation/Classes/NSObject_Class/Reference/Reference.html#//apple_ref/occ/clm/NSObject/load"&gt;documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Invoked whenever a class or category is added to the Objective-C runtime; implement this method to perform class-specific behavior upon loading.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means when your class is loaded, and implements the &lt;code&gt;load&lt;/code&gt; method, you get a &lt;code&gt;load&lt;/code&gt; message sent to your class. Which means you can start doing stuff as soon as your class is loaded by the runtime.&lt;/p&gt;

&lt;p&gt;The main place I've seen it used (and used it myself) is in &lt;a href="http://www.culater.net/software/SIMBL/SIMBL.php"&gt;SIMBL&lt;/a&gt; plugins. A SIMBL plugin is an NSBundle that contains code which is loaded (injected) into a running application shortly after said application is launched. It lets you extend (or "fix") cocoa applications with additional features. So you have this bundle of code, that gets loaded into a running application some point after it starts, and you want to run some code as the bundle is loaded - usually to kick off doing whatever you want to do in the plugin. This is where &lt;code&gt;load&lt;/code&gt; becomes useful.&lt;/p&gt;

&lt;p&gt;Here's a quick implementation that just logs to the console:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@implementation MainController

+ (void) load
{
    NSlog(@"MainController#load called");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="now-where-does-macruby-come-into-this"&gt;Now where does MacRuby come into this?&lt;/h3&gt;

&lt;p&gt;Well I came across a need to do the same in ruby, have some code triggered when the class is loaded into the runtime. Tried implementing &lt;code&gt;Class.load&lt;/code&gt; but to no avail. Then remembered MacRuby is just ruby! And I can call any code from within my ruby class definition.&lt;/p&gt;

&lt;p&gt;For continuity I still call it &lt;code&gt;Class.load&lt;/code&gt;, but then call it as soon as I've defined it in the class. Eg:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class MainController

    def self.load
        NSLog "MainController#load called"
    end
    self.load

end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course, I'm not sure when the Objective-C method is called, it's probably after the entire class has been defined rather than as soon as &lt;code&gt;load&lt;/code&gt; has been loaded into the runtime. So you might want to move the &lt;code&gt;self.load&lt;/code&gt; call to just before the closing &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Potty Training YAML</title>
    <link rel="alternate" href="http://caiustheory.com/potty-training-yaml/"/>
    <id>http://caiustheory.com/potty-training-yaml/</id>
    <published>2010-05-10T22:46:17+01:00</published>
    <updated>2010-05-10T22:46:17+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Ran into a problem today where I have a class with a few attributes on it, but I only want a certain three of those attributes to appear in the YAML dump of a class instance.&lt;/p&gt;

&lt;p&gt;Diving straight into a code example–lets say we have a &lt;code&gt;Contact&lt;/code&gt; class, and we only want to dump the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;website&lt;/code&gt; attributes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require "yaml"

class Contact
    attr_accessor :name, :email, :website, :telephone

    # helper method to make setting up easy
    def initialize params={}
      params.each do |key, value|
        meffod = "#{key.to_s}="
        send(meffod, value) if respond_to?(meffod)
      end
    end
end

# And create an instance for us to play with
caius = Contact.new(
  :name =&amp;gt; "Caius",
  :email =&amp;gt; "dev@caius.name",
  :website =&amp;gt; "http://caius.name/",
  :telephone =&amp;gt; "12345"
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As we'd expect when dumping this, all instance variables get dumped out:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print caius.to_yaml
# &amp;gt;&amp;gt; --- !ruby/object:Contact 
# &amp;gt;&amp;gt; email: dev@caius.name
# &amp;gt;&amp;gt; name: Caius
# &amp;gt;&amp;gt; telephone: "12345"
# &amp;gt;&amp;gt; website: http://caius.name/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Initially I tried to override &lt;code&gt;to_yaml&lt;/code&gt; and unset the instance variables I didn't want showing up, but that just made them show up empty. After digging around a bit more, I happened across the &lt;a href="http://yaml4r.sourceforge.net/doc/page/type_families.htm"&gt;Type Families&lt;/a&gt; page in the yaml4r docs, which right at the bottom mentions &lt;code&gt;to_yaml_properties&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Turns out &lt;code&gt;to_yaml_properties&lt;/code&gt; returns an array of instance variable names (as strings) that should be dumped out as part of the object. A quick method definition later, and we're only dumping the variables we want. (&lt;em&gt;See my &lt;a href="http://caiustheory.com/ruby-shortcuts"&gt;Ruby Shortcuts&lt;/a&gt; post if you don't know what &lt;code&gt;%w()&lt;/code&gt; does&lt;/em&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Contact
    def to_yaml_properties
        %w(@name @email @website)
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now we dump the class, expecting only the three attributes to be outputted:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print caius.to_yaml
# &amp;gt;&amp;gt; --- !ruby/object:Contact 
# &amp;gt;&amp;gt; name: Caius
# &amp;gt;&amp;gt; email: dev@caius.name
# &amp;gt;&amp;gt; website: http://caius.name/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Ruby Shortcuts</title>
    <link rel="alternate" href="http://caiustheory.com/ruby-shortcuts/"/>
    <id>http://caiustheory.com/ruby-shortcuts/</id>
    <published>2010-03-18T22:32:45+00:00</published>
    <updated>2010-03-18T22:32:45+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;There's a few useful shorthand ways to create certain objects in Ruby, a couple of obvious ones are &lt;code&gt;[]&lt;/code&gt; to create an &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; to create a &lt;code&gt;Hash&lt;/code&gt; (Or block/&lt;code&gt;Proc&lt;/code&gt;). There's some not so obvious ones too, for creating strings, regexes and executing shell commands.&lt;/p&gt;

&lt;p&gt;With all of the examples I've used &lt;code&gt;{}&lt;/code&gt; as the delimiter characters, but you can use a variety of characters. Personally I tend to use &lt;code&gt;{}&lt;/code&gt; unless the string contains them, in which case I'll use &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;@@&lt;/code&gt;. My only exception appears to be &lt;code&gt;%w&lt;/code&gt;, for which I tend to use &lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="strings"&gt;Strings&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;%&lt;/code&gt; and &lt;code&gt;%Q&lt;/code&gt; are the same as using double quotes, including string interpolation. Really useful when you want to create a string that contains double quotes, but without the hassle of escaping them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%{}                 # =&amp;gt; ""
%Q{}                # =&amp;gt; ""

%{caius}            # =&amp;gt; "caius"
%{caius #{5}}       # =&amp;gt; "caius 5"
%{some "foo" thing} # =&amp;gt; "some \"foo\" thing"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;%q&lt;/code&gt; is equivalent to using single quotes. Behaves exactly the same, no string interpolation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%q{}           # =&amp;gt; ''
%q{caius}      # =&amp;gt; "caius"
%q{caius #{5}} # =&amp;gt; "caius \#{5}"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="arrays"&gt;Arrays&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;%w&lt;/code&gt; is the equivalent of using String#split. It takes a string and splits it on whitespace. With the added bonus of being able to escape whitespace too. &lt;code&gt;%W&lt;/code&gt; allows string interpolation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%w(foo bar sed)  # =&amp;gt; ["foo", "bar", "sed"]
%w(foo\ bar sed) # =&amp;gt; ["foo bar", "sed"]
%W(foo #{5} bar) # =&amp;gt; ["foo", "5", "bar"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="regexes"&gt;Regexes&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;%r&lt;/code&gt; is just like using &lt;code&gt;//&lt;/code&gt; to create a regexp object. Comes in handy when you're writing a regex containing &lt;code&gt;/&lt;/code&gt; as you don't have to continually escape it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%r{foo|bar} # =&amp;gt; /foo|bar/
%r{foo/bar} # =&amp;gt; /foo\/bar/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="symbols"&gt;Symbols&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;%s&lt;/code&gt; creates a symbol, just like writing &lt;code&gt;:foo&lt;/code&gt; manually. It takes care of escaping the symbol, but unlike &lt;code&gt;:""&lt;/code&gt; it doesn't allow string interpolation however.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%s{foo}      # =&amp;gt; :foo
%s{foo/bar}  # =&amp;gt; :"foo/bar"
:"foo-#{5}"  # =&amp;gt; :"foo-5"
%s{foo-#{5}} # =&amp;gt; :"foo-\#{5}"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="shelling-out"&gt;Shelling out&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;%x&lt;/code&gt; is the same as backticks (&lt;code&gt;``&lt;/code&gt;), executes the command in a shell and returns the output as a string. And just like backticks it supports string interpolation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`echo hi`     # =&amp;gt; "hi\n"
%x{echo hi}   # =&amp;gt; "hi\n"
%x{echo #{5}} # =&amp;gt; "5\n"
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>iPad? iPerfect (…for me)</title>
    <link rel="alternate" href="http://caiustheory.com/ipad-iperfect-for-me/"/>
    <id>http://caiustheory.com/ipad-iperfect-for-me/</id>
    <published>2010-01-27T20:56:50+00:00</published>
    <updated>2010-01-27T20:56:50+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;Google Groups is a pile of fail and hasn't posted my message in reply to a thread on &lt;a href="http://geekup.org/"&gt;Geekup&lt;/a&gt; so I'm blogging it instead.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On 27 Jan 2010, at 19:53, Steve Richardson wrote:&lt;br /&gt;
Thoughts?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've been searching for a device to fit between my Macbook Pro and iPhone. I work all day on the MBP, and moving it to then watch video in another room or read twitter/news/mail whilst watching telly, etc is a pain.&lt;/p&gt;

&lt;p&gt;The iPhone is a great little device on the move, but for trying to multitask at home it's a bit.. tedious. Even jailbroken and running multiple apps at once it's still limiting.&lt;/p&gt;

&lt;p&gt;I'd been looking around at netbooks, but what put me off actually getting one was my previous experience with one. I know I'd want it to run OS X to keep in sync (easily) with my other Apple devices, but hackintoshing one was a bit too much hassle, plus the fact ones to hackintosh cost more than I really wanted to pay for something that wasn't &lt;em&gt;quite&lt;/em&gt; what I thought I needed.&lt;/p&gt;

&lt;p&gt;And then.. the iPad. I've been sort of keeping up with the rumours (mainly through &lt;a href="http://daringfireball.net"&gt;Daring Fireball&lt;/a&gt;) and whilst I didn't get excited about it too much ahead of announcement&lt;sup&gt;1&lt;/sup&gt;, having seen the official video of it it's pretty much guaranteed that I'm going to get one.&lt;/p&gt;

&lt;p&gt;Yes, it's limited (App Store, closed device), but.. I don't care. Take the iPhone, it's good enough for doing things on it, even if someone else is in charge of the ecosystem and has a big finger saying yes or no. I (willingly) use iTunes, Mobile Me, all the things that are so wonderfully integrated in the world of Apple, so another device that consumes my media using channels I already know and use is just a massive win for me.&lt;/p&gt;

&lt;p&gt;All I'm hoping now is that $499 doesn't equal £499. Hopefully it'll be £399, still a good £80 above direct exchange rate, but low enough that it's a no-brainer for me to get one.&lt;/p&gt;

&lt;p&gt;…And I think this is the first Apple product that I've seen announced and actually known from the start &lt;em&gt;why&lt;/em&gt; I'm going to get one, instead of just a knee-jerk "SHINY!!!! WANT!!!" reaction. Uh oh, does that make me an adult?&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; I miss getting really excited about apple announcements :(&lt;/p&gt;

&lt;h4 id="update"&gt;Update&lt;/h4&gt;

&lt;p&gt;It just got even better. Was lamenting to a &lt;a href="http://tmertz.com/"&gt;friend&lt;/a&gt; on IM that it'd be so much nicer once you can directly suck photos off a camera/SD card into it. Turns out there's an adapter for that. See "iPad Camera Connection Kit" at the bottom of &lt;a href="http://www.apple.com/ipad/specs/"&gt;http://www.apple.com/ipad/specs/&lt;/a&gt; for details.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>at(1) on OS X</title>
    <link rel="alternate" href="http://caiustheory.com/at-1-on-os-x/"/>
    <id>http://caiustheory.com/at-1-on-os-x/</id>
    <published>2009-12-28T09:30:30+00:00</published>
    <updated>2009-12-28T09:30:30+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I recently came across the &lt;a href="http://developer.apple.com/mac/library/DOCUMENTATION/Darwin/Reference/ManPages/man1/at.1.html"&gt;&lt;code&gt;at(1)&lt;/code&gt;&lt;/a&gt; command, and wondered why it wasn't executing jobs I gave it on my machine. Had a poke around the man pages, and discovered in &lt;a href="http://developer.apple.com/mac/library/documentation/Darwin/Reference/ManPages/man8/atrun.8.html"&gt;&lt;code&gt;atrun(8)&lt;/code&gt;&lt;/a&gt; that by default &lt;code&gt;launchd(8)&lt;/code&gt; has the &lt;code&gt;atrun&lt;/code&gt; entry disabled.&lt;/p&gt;

&lt;p&gt;To enable it (and have &lt;code&gt;at&lt;/code&gt; jobs fire) you simply need to run the following command once:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Personally I've taken to using this to sleep my machine after a custom amount of time, mainly because my alarm clock/sleep timer of choice (&lt;a href="http://embraceware.com/awaken/"&gt;Awaken&lt;/a&gt;) can't handle playing &lt;a href="http://www.spotify.com/"&gt;Spotify&lt;/a&gt; for x minutes and then sleeping the machine. The following command puts the machine to sleep, which (quite effectively) silences spotify.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo "osascript -e 'tell app \"Finder\" to sleep'" | at 1:00am
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See the &lt;a href="http://developer.apple.com/mac/library/DOCUMENTATION/Darwin/Reference/ManPages/man1/at.1.html"&gt;&lt;code&gt;at(1)&lt;/code&gt;&lt;/a&gt; manpage for how to specify the time, but as I'm only ever scheduling it on the same day (usually 20 minutes or so in advance), just passing the time works fine.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Read Later in a keystroke</title>
    <link rel="alternate" href="http://caiustheory.com/read-later-in-a-keystroke/"/>
    <id>http://caiustheory.com/read-later-in-a-keystroke/</id>
    <published>2009-12-06T22:15:37+00:00</published>
    <updated>2009-12-06T22:15:37+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I use a wonderful service for saving text to be read later, &lt;a href="http://instapaper.com/"&gt;instapaper.com&lt;/a&gt;. It's gotten more wonderful as time has gone on and other applications/service's have gained the ability to save links/articles/webpages there for me to pick up later.&lt;/p&gt;

&lt;p&gt;For instance, I'm out and about checking twitter on my iPhone using &lt;a href="http://atebits.com/tweetie-iphone/"&gt;tweetie&lt;/a&gt; and someone tweets a link. Rather than wait for it to load and having to read it then and there I can just hit "Read Later" and it's saved in my instapaper account for me to read as and when I choose to. Recently the legendary mac feed reader &lt;a href="http://www.newsgator.com/INDIVIDUALS/NETNEWSWIRE/"&gt;NetNewsWire&lt;/a&gt; gained this ability too.&lt;/p&gt;

&lt;p&gt;There's a few ways to send a feed item to instapaper from within NNW. Firstly you can right-click and click "Send to Instapaper".&lt;/p&gt;

&lt;p&gt;&lt;img alt="Send to Instapaper from contextual menu" src="http://farm3.static.flickr.com/2553/4163576297_ee60e26b53_o.jpg" /&gt;&lt;br /&gt;
&lt;a href="http://www.flickr.com/photos/caius/4163576297"&gt;View Original on Flickr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Secondly there's a menu item for it in the News menu, which also provides my chosen way of instapapering an item—the keyboard shortcut! ⌃P &lt;em&gt;(control-P)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Send to Instapaper from News menu" src="http://farm3.static.flickr.com/2748/4164341910_476f8ba539_o.jpg" /&gt;&lt;br /&gt;
&lt;a href="http://www.flickr.com/photos/caius/4164341910"&gt;View Original on Flickr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, in NNW I'm happily sending stuff to instapaper with the handy ⌃P shortcut, but that doesn't exist in the third place I mark things to read later–Safari! Up until now I've been using the standard "Read Later" bookmarklet that &lt;a href="http://instapaper.com/"&gt;instapaper.com&lt;/a&gt; provides, and it's got a spot on my Bookmarks Bar so I can easily click it.&lt;/p&gt;

&lt;p&gt;That doesn't really help with the fact I'm hitting ⌃P in NNW, and it doesn't work in Safari. Quite often I noticed myself hitting the key combination in Safari and wondering for a split second why it wasn't sending the item to instapaper. Then the solution hit me!&lt;/p&gt;

&lt;p&gt;In OS X you can setup (and/or override) menu items with custom key combinations! Why hadn't I remembered this before. Because the "Read Later" bookmark&lt;em&gt;(let)&lt;/em&gt; is nested under the Bookmarks menu, it &lt;strong&gt;is&lt;/strong&gt; a menu item! A quick trip into the Keyboards Prefpane in System Preferences and a new binding later and voilâ, "Read Later" in Safari is bound to ⌃P and I can use it in both Safari and NNW.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Filling in the form to bind the keyboard shortcut" src="http://farm3.static.flickr.com/2517/4163642801_a14250da65_o.jpg" /&gt;&lt;br /&gt;
&lt;a href="http://www.flickr.com/photos/caius/4163642801"&gt;View Original on Flickr&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My Menubar Items</title>
    <link rel="alternate" href="http://caiustheory.com/my-menubar-items/"/>
    <id>http://caiustheory.com/my-menubar-items/</id>
    <published>2009-12-06T12:56:49+00:00</published>
    <updated>2009-12-06T12:56:49+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;!-- Just for this post --&gt;
&lt;style&gt;
    ol { list-style-type: lower-alpha; }
    ol ol { list-style-type: decimal; }
&lt;/style&gt;

&lt;p&gt;This is a something that occasionally makes the rounds again, I've not seen it for a while and I've added some new items since I last remember documenting it. Thus, &lt;a href="http://twitter.com/macarne"&gt;@macarne&lt;/a&gt; &lt;a href="http://twitter.com/macarne/status/6398125336"&gt;asking&lt;/a&gt; what the app was that gives me stats prompted me to document my current menubar items.&lt;/p&gt;

&lt;p&gt;&lt;img alt="annotated-menubar by ©aius, on Flickr" title="annotated-menubar" src="http://farm3.static.flickr.com/2586/4162170875_1d1a8be4cf.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/caius/4162170875/"&gt;View original&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href="http://www.eidac.de/"&gt;SMCFanControl&lt;/a&gt; - Lets me adjust the minimum speed of my fans.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://atebits.com/tweetie-mac"&gt;Tweetie/mac&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://iscrobbler.sourceforge.net/"&gt;iScrobbler&lt;/a&gt; - Scrobbles tunes iTunes plays&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.realmacsoftware.com/littlesnapper/"&gt;LittleSnapper&lt;/a&gt; &lt;em&gt;(Or more accurately the menubar icon is NanoSnapper, LittleSnapper is the full app.)&lt;/em&gt; Mainly used for screen grabs.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.orange-carb.org/SBM/"&gt;SlimBatteryMonitor&lt;/a&gt; - Takes up less horizontal space than Apple's menu item.&lt;/li&gt;
  &lt;li&gt;Expresscard menu item - Lets me power off my &lt;a href="http://www.memoryc.com/storage/solidstatedisk/48gbfilematesolidgoexpresscardultra.html"&gt;Expresscard/34 SSD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.ragingmenace.com/software/menumeters/"&gt;MenuMeters&lt;/a&gt; - An old friend I've been using for as long as I can remember running OS X. Set to show (left to right)
    &lt;ol&gt;
      &lt;li&gt;Ram - &lt;strong&gt;U&lt;/strong&gt;sed and &lt;strong&gt;F&lt;/strong&gt;ree totals.&lt;/li&gt;
      &lt;li&gt;Network - Graph + values.&lt;/li&gt;
      &lt;li&gt;CPU - Graph per core. Probably the most useful out of the three.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Bluetooth&lt;/li&gt;
  &lt;li&gt;Time Machine&lt;/li&gt;
  &lt;li&gt;Modem - To dial on my Huawei E220 3G stick.&lt;/li&gt;
  &lt;li&gt;Airport&lt;/li&gt;
  &lt;li&gt;Sound&lt;/li&gt;
  &lt;li&gt;Day/Time&lt;/li&gt;
  &lt;li&gt;Fast User Switching - Not sure why I keep this in the menubar, only have one user and I lock my screen with a password protected screensaver.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.viscosityvpn.com/"&gt;Viscosity&lt;/a&gt; - VPN software. Pretty useful.&lt;/li&gt;
  &lt;li&gt;Spotlight! - Occasionally this vanishes when spotlight decides to be a dick and eat ram/cpu reindexing my disk every few hours. Touch wood it hasn't done it since 10.6.1.&lt;/li&gt;
&lt;/ol&gt;

</content>
  </entry>
  <entry>
    <title>Read standard input using Objective-C</title>
    <link rel="alternate" href="http://caiustheory.com/read-standard-input-using-objective-c/"/>
    <id>http://caiustheory.com/read-standard-input-using-objective-c/</id>
    <published>2009-12-06T11:50:08+00:00</published>
    <updated>2009-12-06T11:50:08+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;On a couple of occasions now I've wanted to read from &lt;code&gt;STDIN&lt;/code&gt; into an Objective-C command line tool, and both times I've had to hunt quite a bit to find the answer because nothing shows up in google for the search terms I used. "Objective-c read from stdin" and "objc read stdin" both turn up results ranging from using &lt;code&gt;NSInputStream&lt;/code&gt; to dropping some C++ in there.&lt;/p&gt;

&lt;p&gt;The answer is quite simple really, just use &lt;code&gt;NSFileHandle&lt;/code&gt;. More specifically &lt;code&gt;+[NSFileHandle fileHandleWithStandardInput]&lt;/code&gt;. You can then read all data currently in &lt;code&gt;STDIN&lt;/code&gt;, monitor it for new data and anything else you can do with a normal &lt;code&gt;NSFileHandle&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And here's some example code, reads all data from &lt;code&gt;STDIN&lt;/code&gt; and stores it into an NSString:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSFileHandle *input = [NSFileHandle fileHandleWithStandardInput];
NSData *inputData = [NSData dataWithData:[input readDataToEndOfFile]];
NSString *inputString = [[NSString alloc] initWithData:inputData encoding:NSUTF8StringEncoding];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;I'm using this in GarbageCollected apps, memory management without GC is left as an exercise to the user.&lt;/em&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Nissan Almera Self Diagnostic Menu</title>
    <link rel="alternate" href="http://caiustheory.com/nissan-almera-self-diagnostic-menu/"/>
    <id>http://caiustheory.com/nissan-almera-self-diagnostic-menu/</id>
    <published>2009-09-28T11:44:00+01:00</published>
    <updated>2009-09-28T11:44:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Here's how to access the self diagnostic / configuration menu on a Nissan Almera 2003 SVE (N16):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Start the engine&lt;/li&gt;
  &lt;li&gt;Turn the radio on&lt;/li&gt;
  &lt;li&gt;Turn the radio off&lt;/li&gt;
  &lt;li&gt;Hold the info button in &lt;em&gt;then:&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Turn the volume knob up (clockwise) &lt;em&gt;until:&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Diagnostic menu appears&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;From here you can do various things: run self-diagnostics; reset/change the main service counter; various other tests for the climate control, sat nav system, etc.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ignore .gitignore in Git</title>
    <link rel="alternate" href="http://caiustheory.com/ignore-gitignore-in-git/"/>
    <id>http://caiustheory.com/ignore-gitignore-in-git/</id>
    <published>2009-09-21T07:00:00+01:00</published>
    <updated>2009-09-21T07:00:00+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Recently I ran into an issue where I was working on a project which had files I wanted git to ignore, but I didn't want to commit a &lt;code&gt;.gitignore&lt;/code&gt; file into the project. In case you don't know, any files matching a pattern in &lt;code&gt;.gitignore&lt;/code&gt; in a git repository are ignored by git. (Unless the file(s) have already been committed, then they need removing from git before they are ignored.)&lt;/p&gt;

&lt;p&gt;Initially I figured I could just throw the patterns I needed excluded into my global &lt;code&gt;~/.gitignore&lt;/code&gt;, but quickly realised that I needed files matching these patterns to show up in other git repos, so going the global route really wasn't an option. After some thought I wondered if you could make git ignore &lt;code&gt;.gitignore&lt;/code&gt;, whilst still getting it to ignore files matching the other patterns in the &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets create a new empty repo to test this crazy idea in:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir foo
$ cd foo
$ git init
Initialized empty Git repository in /Volumes/Brutus/Users/caius/foo/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And create a couple of files for us to play with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ touch bar
$ touch baz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ignore one of the files so we can check other matches are still ignored later on:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo "baz" &amp;gt;&amp;gt; .gitignore
$ git ststatus
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add &amp;lt;file&amp;gt;..." to include in what will be committed)
#
#       .gitignore
#       bar
nothing added to commit but untracked files present (use "git add" to track)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok so far, but we can still see .gitignore in git, so now for the crazy shindig, ignore the ignore file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo ".gitignore" &amp;gt;&amp;gt; .gitignore 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets see if it worked, or if we can still see our .gitignore:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add &amp;lt;file&amp;gt;..." to include in what will be committed)
#
#       bar
nothing added to commit but untracked files present (use "git add" to track)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And lets just double-check that &lt;code&gt;.gitignore&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; still exist on the filesystem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -a
.               ..              .git            .gitignore      bar             baz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fantastic! Turns out adding ".gitignore" to &lt;code&gt;.gitignore&lt;/code&gt; works perfectly. The file is still parsed by git to ignore everything else too, so it does exactly what I needed in this instance.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Filter through command</title>
    <link rel="alternate" href="http://caiustheory.com/filter-through-command/"/>
    <id>http://caiustheory.com/filter-through-command/</id>
    <published>2009-09-14T23:39:37+01:00</published>
    <updated>2009-09-14T23:39:37+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;This is another old post that I'm republishing. Originally published 27th April 2007.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My text editor &lt;a href="http://macromates.com/"&gt;TextMate&lt;/a&gt; has a nice feature called "Filter through command" whereby you can filter the current document through a command.&lt;/p&gt;

&lt;p&gt;Anyway, I've never used it before, but today I had a text file with 30 or so url's in, each on a new line, so I thought I'd test it out.  I selected it to input the document &amp;amp; to not replace the output.  I then entered the following command, which is a ruby command to take each line that isn't blank, and run the shell command &lt;code&gt;open $url&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e 'a = ARGF.read.scan(/\S+/); a.each { |x| `open #{x}` }'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What this does is take ARGF (the document) and read it in line by line, but only the non-whitespace characters (so newlines, space, etc are ignored.)  And it assigns it to an array called &lt;code&gt;a&lt;/code&gt;.  What I then do is for each item of &lt;code&gt;a&lt;/code&gt;, we run it past the shell command &lt;code&gt;open&lt;/code&gt;, which on OS X if you pass it a URL it just opens that URL in the default browser.&lt;/p&gt;

&lt;p&gt;My browser is Safari, and its set to open new links in a new tab in the foremost window.  So I ran the command, and hey presto, within a few seconds I had all the URL's loading in seperate tabs in Safari's foremost window!&lt;/p&gt;

&lt;p&gt;The power of Unix &lt;em&gt;(OS X)&lt;/em&gt; &amp;amp; TextMate (amongst other tools) just never ceases to amaze me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I just realised if you change the regex to scan for http://.* then it'll select all website URLs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e 'a = ARGF.read.scan(/^http://.*$/); a.each { |url| `open #{url}` }'
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>Mac Tips you may not know</title>
    <link rel="alternate" href="http://caiustheory.com/mac-tips-you-may-not-know/"/>
    <id>http://caiustheory.com/mac-tips-you-may-not-know/</id>
    <published>2009-08-31T14:08:48+01:00</published>
    <updated>2009-08-31T14:08:48+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Here are some mac tips I know and consider "basic" mac knowledge, but no-one else seems to know.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;exposé&lt;/strong&gt; key is on modern mac keyboards, looks like a load of squares on the F3 key.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌘ + Exposé key&lt;/strong&gt; =&amp;gt; Show Desktop&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌃ + Exposé key&lt;/strong&gt; =&amp;gt; Show Application Windows&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌥ + Brightness keys&lt;/strong&gt; =&amp;gt; Open Displays prefpane in System Preferences.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌥ + Exposé key&lt;/strong&gt; =&amp;gt; Open Exposé &amp;amp; Spaces prefpane in System Preferences.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌥ + Dashboard key&lt;/strong&gt; =&amp;gt; Open Exposé &amp;amp; Spaces prefpane in System Preferences.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌥ + Keyboard Backlight keys&lt;/strong&gt; =&amp;gt; Open Keyboard prefpane in System Preferences. &lt;em&gt;(Only on laptops with keyboard backlighting.)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌥ + Volume keys&lt;/strong&gt; =&amp;gt; Open Sound prefpane in System Preferences.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⇧ + Volume keys&lt;/strong&gt; =&amp;gt; Adjust the volume with the feedback noise setting toggled. If you normally have feedback "blips", it'll be silent. Or vice versa.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌥ + ⇧ + Volume keys&lt;/strong&gt; =&amp;gt; Adjust the volume in 1/4 of a usual step.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;⌃ + Eject key&lt;/strong&gt; =&amp;gt; Shows the Shut Down dialog.&lt;/li&gt;
  &lt;li&gt;In the shut down dialog, hit &lt;em&gt;R&lt;/em&gt; to restart, &lt;em&gt;S&lt;/em&gt; to sleep, &lt;em&gt;⎋&lt;/em&gt; to cancel.&lt;/li&gt;
  &lt;li&gt;(Pretty much) Any dialog that pops up, hitting &lt;em&gt;⎋&lt;/em&gt; will push the "cancel" button.&lt;/li&gt;
  &lt;li&gt;In "Show all windows" or "Show application windows" exposé modes, hit the tab key to cycle through applications.&lt;/li&gt;
  &lt;li&gt;Hit the space bar in exposé to activate "Quick Look" + windows pop up to 100% size as you mouse over them.&lt;/li&gt;
  &lt;li&gt;Hold down &lt;strong&gt;⌃ + ⇧&lt;/strong&gt; when mousing over the dock to toggle magnification whilst the keys are down.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;(Alternative title &lt;a href="http://www.petercooper.co.uk/"&gt;Peter Cooper&lt;/a&gt; suggested, "A miscellany of input device co-ordinations to modulate the response of Apple's task preview and switching subsystem")&lt;/em&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Education Network Restrictions</title>
    <link rel="alternate" href="http://caiustheory.com/education-network-restrictions/"/>
    <id>http://caiustheory.com/education-network-restrictions/</id>
    <published>2009-07-31T15:14:16+01:00</published>
    <updated>2009-07-31T15:14:16+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;This is a re-run of an old post I took offline in an old server move and hadn't re-published.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Having been on two college systems and various university networks, I'm just amazed at the levels of freedom you have on some, and how locked down others are.&lt;/p&gt;

&lt;p&gt;Take the first university network I ever used for example.  It was pretty much totally open, to the point that I could game quite freely, and the administrator only picked me up because I was logged in as admin and not a normal user.  (I didn't have an account for that machine.)&lt;/p&gt;

&lt;p&gt;Going from that to my school network was a very big shock as it was moderately filtered through third party filtering software.  This meant you couldn't go on the usual &lt;a title="Not Safe for Work" href="http://en.wikipedia.org/wiki/NSFW"&gt;NSFW&lt;/a&gt; stuff, but still had access to other sites that could be seen as bad, such as proxy sites, or IRC java Clients for example.&lt;/p&gt;

&lt;p&gt;Having moved from my old (slightly crass) college to my new one, its interesting how filtered this one is.  You can't seem to go on a site with &lt;code&gt;proxy&lt;/code&gt; or &lt;code&gt;irc&lt;/code&gt; in the URL, except &lt;em&gt;clean&lt;/em&gt; sites like the &lt;a title="British Broadcasting Corporation" href="http://www.bbc.co.uk/"&gt;BBC&lt;/a&gt; or &lt;a title="Wikipedia in English" href="http://wikipedia.org/"&gt;Wikipedia&lt;/a&gt;.  The Proxy searching only came about through looking for web based IRC solutions.&lt;/p&gt;

&lt;p&gt;Personally I think the universities have got it right.  With all the students they have, they just limit the things they definitely have to, and allow everything else.  (Blacklisting technique.)  Both colleges seem to do the opposite - block everything until its verified and unblocked.  (Whitelisting technique.)&lt;/p&gt;

&lt;p&gt;The way I see it, the problem with the white listing technique is that people will always find a way around whatever restrictions are in place.  For instance, I'm locked out of all of my web based email sites, so I can't email anyone.  Its not the not being able to send that bothers me, its the not being able to save text that I've written in college to a website to then retrieve it from home that annoys me.&lt;/p&gt;

&lt;p&gt;So how did I work around this restriction?  Well I remembered that Google had bought &lt;a title="Collaborative Writing on the web" href="http://writely.com/"&gt;Writely&lt;/a&gt; at some point recently, so one quick sign in later and I've got my own little area where I can save, organise and edit text based files.  All I have to do when I get home is login, copy / paste into my email client and hit send.&lt;/p&gt;

&lt;p&gt;One word that isn't blocked yet is &lt;code&gt;blog&lt;/code&gt;, so I can still post this, and edit my posts.  However, I'm still writing it in &lt;a title="Collaborative Writing on the web" href="http://writely.com/"&gt;Writely&lt;/a&gt; and checking my &lt;a title="Markup HTML without HTML" href="http://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt; syntax is correct with &lt;a title="Preview and Practice MarkDown &amp;amp; SmartyPants" href="http://daringfireball.net/projects/markdown/dingus/"&gt;Dingus&lt;/a&gt;.  The writely interface is just that much nicer than notepad.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Capitalise "ringer" on the iPhone Volume Bezel</title>
    <link rel="alternate" href="http://caiustheory.com/capitalise-ringer-on-the-iphone-volume-bezel/"/>
    <id>http://caiustheory.com/capitalise-ringer-on-the-iphone-volume-bezel/</id>
    <published>2009-06-20T16:44:04+01:00</published>
    <updated>2009-06-20T16:44:04+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;Backstory:&lt;/strong&gt; Got myself a first generation iPhone second hand and unlocked it to work on my existing T-Mobile (Official iPhone network in the UK is O2.) Noticed after a week or so of owning it that when you change the volume on the phone, the bezel that comes up says "ringer" across the top. But when you have headphones plugged in, it says "Headphones". &lt;em&gt;(Note the capitalisation difference.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now I'm not usually bothered by stuff like this (honest!) but as soon as I'd noticed the &lt;em&gt;"bug"&lt;/em&gt;, I couldn't help but think of it everytime I changed the volume, whether I was looking at the screen or not. Seeing as I'm running a jailbroken phone, and therefore have SSH access to it, I figured the string would be defined in a .strings file somewhere in the &lt;code&gt;/System&lt;/code&gt; folder. And I'd be able to change it!&lt;/p&gt;

&lt;p&gt;Fast-forward a few months and I install the iPhone OS 3.0 update (jailbroken of course), and finally decide to turn the phone's SSH server on and go looking for the setting. To do so I figured I'd just need &lt;code&gt;grep&lt;/code&gt; installed on the phone - I could copy the file itself to my mac and edit it there.&lt;/p&gt;

&lt;p&gt;So I connect to the phone, have a poke around the filesystem and then start a search to find the correct file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# On the iPhone
$ cd /System/Library/
$ grep -r "ringer" *
Binary file CoreServices/SpringBoard.app/English.lproj/SpringBoard.strings matches
Binary file CoreServices/SpringBoard.app/M68AP.plist matches
Binary file CoreServices/SpringBoard.app/SpringBoard matches
Binary file Frameworks/CFNetwork.framework/CFNetwork matches
Binary file Frameworks/CFNetwork.framework/da.lproj/Localizable.strings matches
Binary file Frameworks/CFNetwork.framework/no.lproj/Localizable.strings matches
Binary file Frameworks/Foundation.framework/da.lproj/URL.strings matches
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At which point I stopped the grep search (&lt;code&gt;^C&lt;/code&gt;) because I know the home screen of the iPhone is the SpringBoard.app, so I figured it would be in the file &lt;code&gt;SpringBoard.app/English.lproj/SpringBoard.strings&lt;/code&gt;. Making sure to have SSH enabled on your mac, a simple &lt;code&gt;scp CoreServices/SpringBoard.app/English.lproj/SpringBoard.strings user@your_mac.local:&lt;/code&gt; later and the file is sat in my home folder on my mac.&lt;/p&gt;

&lt;p&gt;Switching to the mac, now I try and open the file with TextMate, only to realise its in binary format. I need it in the nice XML format to edit it, so a quick google later and I've found a hint on &lt;a href="http://macosxhints.com"&gt;MacOSXHints&lt;/a&gt; telling me how to convert from &lt;a href="http://www.macosxhints.com/article.php?story=20050430105126392"&gt;binary to xml plist format&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# On the mac
$ plutil -convert xml1 SpringBoard.strings
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then opening the file in TextMate was a bit more successful! I can actually understand what its defining now. Search through the file for "ringer" and I found the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;key&amp;gt;RINGER_VOLUME&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;ringer&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the "ringer" to "Ringer" between the &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; and my editing work is complete! Yes, it really is that easy to edit an interface string that is defined in a &lt;code&gt;.string&lt;/code&gt;. Now I just need to convert the file back to binary, and copy it back to the phone. Converting back to binary file is one line, just change the &lt;code&gt;xml1&lt;/code&gt; in the previous command to &lt;code&gt;binary1&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# On the mac
$ plutil -convert binary1 SpringBoard.strings
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then scp it back to the phone, make a backup of the existing file, and overwrite the existing file with the new one I've edited:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# On the iPhone
$ cd ~
$ scp user@mac_name.local:SpringBoard.strings .
$ cd /System/Library/CoreServices/SpringBoard.app/English.lproj/
$ mv SpringBoard.strings SpringBoard.strings.bak
$ cp ~/SpringBoard.strings SpringBoard.strings
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then restart the phone, either in the usual manner or just run &lt;code&gt;reboot&lt;/code&gt; on the phone via SSH. Lo and behold once its rebooted and I changed the volume, it read "Ringer"!&lt;/p&gt;

&lt;p&gt;&lt;img alt="Screenshot of Volume bezel" src="http://caius.name/images/ringer.jpg" /&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Adding XHTML output validation to Cucumber stories</title>
    <link rel="alternate" href="http://caiustheory.com/adding-xhtml-output-validation-to-cucumber-stories/"/>
    <id>http://caiustheory.com/adding-xhtml-output-validation-to-cucumber-stories/</id>
    <published>2009-06-16T11:19:11+01:00</published>
    <updated>2009-06-16T11:19:11+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;At the 2009 &lt;a href="http://barcampleeds.com/"&gt;Barcamp Leeds&lt;/a&gt; I attended a talk by &lt;a href="http://neilcrosby.com/vcard/"&gt;Neil Crosby&lt;/a&gt; where he talked about automated testing, and about how he felt there was a gap in everything that people were testing. Everyone has unit tests, and people are doing full stack testing too, but no-one (so he feels) does XHTML/CSS/JS validation as part of their automated test suite. And certainly from what I've seen on the mainstream Ruby site's about testing, I agreed with him.&lt;/p&gt;

&lt;p&gt;So after his talk I had a quick look at his &lt;a href="http://github.com/NeilCrosby/frontend-test-suite/tree/master"&gt;frontend test suite&lt;/a&gt;, and started wondering where exactly I would fit frontend validation testing into my workflow. Would it be part of my unit tests (RSpec), or part of the full stack tests (Cucumber)? As you've probably guessed by the title of this post, its ended up going into my cucumber tests. Since the initial play its been something I've mused about occasionally, but not something I've actively looked into how to implement as part of my test workflow.&lt;/p&gt;

&lt;p&gt;Fast-forward a few weeks from &lt;a href="http://barcampleeds.com/"&gt;Barcamp Leeds&lt;/a&gt; and I see a news article in my feed reader entitled &lt;a href="http://tenderlovemaking.com/2009/06/12/easy-markup-validation/"&gt;"Easy Markup Validation"&lt;/a&gt; which gets me hopeful someone's solved this frontend validation thing easily for Rubyists. A quick read through and I'm sold on it and installing the gem. Opened an existing project I'm working on which has a fairly extensive test suite (both unit tests &amp;amp; full stack tests) and tried to slot the validation into my controller unit tests.&lt;/p&gt;

&lt;p&gt;Problem with doing this is by default RSpec-rails doesn't generate the views in your controller specs. At that point I realised I was already generating the full page when I was doing a full stack test using &lt;a href="http://github.com/langalex/culerity/tree/master"&gt;culerity&lt;/a&gt; and &lt;a href="http://cukes.info/"&gt;cucumber&lt;/a&gt;. So why not just add a cucumber step in my stories to validate the HTML on each page I visit? Mainly because its not enough of a failure for this app to have invalid XHTML markup. Having valid markup would be nice, but I'd rather have it as a separate test to my stories in some way.&lt;/p&gt;

&lt;p&gt;Currently I just do that by only validating if &lt;code&gt;ENV["VALIDATION"]&lt;/code&gt; is set to anything, so a normal run of my cucumber stories will just test the app does what its supposed to do. If I run them with &lt;code&gt;VALIDATION=true&lt;/code&gt; then it will check my markup is valid as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;features/support/env.rb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require "markup_validity" if ENV["VALIDATION"]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;features/step_definitions/general_steps.rb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Then %r/the page is valid XHTML/ do
  $browser.html.should be_xhtml_strict if ENV["VALIDATION"]
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;features/logging_in.feature&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Feature: Logging in
  In order to do stuff
  As a registered user
  I want to login

  Scenario: Successful Login
    Given there is a user called "Caius"

    When I goto the homepage
    Then the page is valid XHTML

    When I click on the "Login" link
    Then I am redirected to the login page
    And the page is valid XHTML

    When I enter my login details
    And I click "Login"
    Then I am redirected to my dashboard
    And the page is valid XHTML
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now when I run &lt;code&gt;cucumber features/logging_in.feature&lt;/code&gt;, it doesn't validate the HTML, it just makes sure that I can login as my user and that I am redirected to the right places. But if I run &lt;code&gt;VALIDATION=true cucumber features/logging_in.feature&lt;/code&gt;, then it &lt;em&gt;does&lt;/em&gt; validate my XHTML on the homepage, the login page and on the user's dashboard. If it fails validation then it gives you a fairly helpful error message as to what it was expecting and what it found instead.&lt;/p&gt;

&lt;p&gt;From a quick run against a couple of stories in my app I discovered that I've not been wrapping form elements in an enclosing element, so they've been quickly fixed and now they validate. Now I realise this gem is only testing XHTML output, and doesn't include CSS or JS validation, but from a quick peek at the gem's source it should be fairly easy to add both of those in I think, although again they aren't major errors for me yet in this app.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Quantum Javascript Bug</title>
    <link rel="alternate" href="http://caiustheory.com/quantum-javascript-bug/"/>
    <id>http://caiustheory.com/quantum-javascript-bug/</id>
    <published>2009-06-04T16:12:24+01:00</published>
    <updated>2009-06-04T16:12:24+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I've got some js I've written to update a couple of &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; lists in a form, and it was all working fine for me (under Safari.) &lt;a href="http://johnleach.co.uk/"&gt;John&lt;/a&gt; happened to mention it wasn't working for him under Firefox, so I fired up Firefox and took a look. Could reproduce it perfectly, changing the first popup was populating the second one, but then wasn't selecting the right value from the list.&lt;/p&gt;

&lt;p&gt;Having no idea what was happened I figured I'd enable firebug and watch it execute to figure out what was happening. Enabled firebug, reloaded the page, selected from the first popup… and &lt;strong&gt;voila!&lt;/strong&gt; It updated the second one and selected the correct row! WTF!!!&lt;/p&gt;

&lt;p&gt;Turned firebug off and it didn't work, turned it back on and it worked. Figured it might be something buggy in the Firefox 3.0.5 js runtime, so I grabbed a copy of the new &lt;a href="http://www.mozilla.com/en-US/firefox/all-beta.html"&gt;beta 3.5&lt;/a&gt; and tried it in there—still failed to update the page as it should.&lt;/p&gt;

&lt;p&gt;Then started poking around the javascript code, the function that was seemingly failing to run was being triggered by a setTimeout() call set to 1 second. We figured it might be the timing causing it, so started playing around with the time, tried anything from ½ a second up to 4 seconds but still no joy in firefox with firebug turned off.&lt;/p&gt;

&lt;p&gt;Then &lt;a href="http://johnleach.co.uk/"&gt;John&lt;/a&gt; went looking for the javascript errors in firefox (with firebug off) and discovered that it was throwing an error because &lt;code&gt;window.console&lt;/code&gt; didn't exist. All of a sudden it made perfect sense! Safari has &lt;code&gt;window.console.log()&lt;/code&gt; for writing to the console log, as does firebug. But of course firefox &lt;em&gt;without&lt;/em&gt; firebug doesn't!&lt;/p&gt;

&lt;p&gt;So the function was just exiting on that error. It was very weird initially to have it work perfectly as soon as the developer tools were enabled!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Automatically Deploying Website From Remote Git Repository</title>
    <link rel="alternate" href="http://caiustheory.com/automatically-deploying-website-from-remote-git-repository/"/>
    <id>http://caiustheory.com/automatically-deploying-website-from-remote-git-repository/</id>
    <published>2009-05-30T03:30:40+01:00</published>
    <updated>2009-05-30T03:30:40+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Before I start, I'll just quickly run through where I put stuff on my server. Apache logs and config are in the ubuntu default folders: &lt;code&gt;/var/log/apache2&lt;/code&gt; and &lt;code&gt;/etc/apache2/&lt;/code&gt; respectively.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Websites:  /home/caius/vhosts/&amp;lt;domain name&amp;gt;/htdocs
Git Repos: /home/caius/git/&amp;lt;domain name&amp;gt;.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I have a git repo locally, &lt;code&gt;~/projects/somesite.com/&lt;/code&gt;, and want to deploy it to my webserver. I'll keep the git repo in &lt;code&gt;~/git/&lt;/code&gt; and set it up so that when I push to the repo &lt;em&gt;(over ssh)&lt;/em&gt; it will automatically checkout the new changes into the website's htdocs folder.&lt;/p&gt;

&lt;p&gt;I'm assuming DNS is already setup (or I've used &lt;a href="http://github.com/bjeanes/ghost/tree/master"&gt;ghost&lt;/a&gt; to map it locally.) And that I've setup the virtualhost in apache pointing at &lt;code&gt;/home/caius/vhosts/somesite.com/htdocs&lt;/code&gt; and reloaded apache so the config is in place.&lt;/p&gt;

&lt;h2 id="remote-machine"&gt;Remote Machine&lt;/h2&gt;

&lt;p&gt;We create a bare git repo, then point the working tree at the docroot of our website. This means all the git stuff is kept in the &lt;code&gt;somesite.git&lt;/code&gt; folder, but the files themselves are checked out to the website's folder. Then we setup a post-receive hook to update the worktree folder after new changes have been pushed to the repo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd git
$ mkdir somesite.git
$ cd somesite.git/
$ git init --bare
Initialized empty Git repository in /home/caius/git/somesite.git/
$ git --bare update-server-info
$ git config core.worktree /home/caius/vhosts/somesite.com/htdocs
$ git config core.bare false
$ git config receive.denycurrentbranch ignore
$ cat &amp;gt; hooks/post-receive
#!/bin/sh
git checkout -f
^D
$ chmod +x hooks/post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="local-machine"&gt;Local Machine&lt;/h2&gt;

&lt;p&gt;And now on the client machine we add the remote repo as a git remote, and then push to it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add web ssh://myserver/home/caius/git/somesite.git
$ git push web +master:refs/heads/master
Counting objects: 3, done.
Writing objects: 100% (3/3), 229 bytes, done.
Total 3 (delta 0), reused 0 (delta 0)
To ssh://myserver/home/caius/git/somesite.git
 * [new branch]      master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="all-done"&gt;All Done&lt;/h2&gt;

&lt;p&gt;And now if you go to &lt;em&gt;somesite.com&lt;/em&gt; you'll see the contents of your git repo there. (&lt;em&gt;somesite.com&lt;/em&gt; is just an example url though, I don't actually own it!)&lt;/p&gt;

&lt;h3 id="helpful-urls"&gt;Helpful URLs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://toroid.org/ams/git-website-howto"&gt;http://toroid.org/ams/git-website-howto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.mblondel.org/journal/2008/05/25/git-memo/"&gt;http://www.mblondel.org/journal/2008/05/25/git-memo/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://tatey.com/2009/04/29/jekyll-meets-dreamhost-automated-deployment-for-jekyll-with-git.html"&gt;http://tatey.com/2009/04/29/jekyll-meets-dreamhost-automated-deployment-for-jekyll-with-git.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Find shell commands with which</title>
    <link rel="alternate" href="http://caiustheory.com/find-shell-commands-with-which/"/>
    <id>http://caiustheory.com/find-shell-commands-with-which/</id>
    <published>2009-04-19T16:02:04+01:00</published>
    <updated>2009-04-19T16:02:04+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I have this command in my $PATH, &lt;code&gt;apachectl&lt;/code&gt;. Because I'm on a mac and I've installed apache2 through &lt;a href="http://macports.org/"&gt;MacPorts&lt;/a&gt;, the command that gets found first is my macports install in &lt;code&gt;/opt&lt;/code&gt;. Up until now I've always known that &lt;code&gt;which apachectl&lt;/code&gt; will find that location, but to find any other locations of &lt;code&gt;apachectl&lt;/code&gt; I'd usually use &lt;code&gt;locate&lt;/code&gt; and &lt;code&gt;egrep&lt;/code&gt; together.&lt;/p&gt;

&lt;p&gt;Here's my original workflow, lets find the location of the &lt;code&gt;apachectl&lt;/code&gt; being called when I don't specify a path.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Julius:~ caius$ which apachectl
/opt/local/apache2/bin/apachectl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Simple enough. Now lets figure out what other locations there's an &lt;code&gt;apachectl&lt;/code&gt; installed at.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Julius:~ caius$ locate apachectl | egrep "\/apachectl$"
/opt/local/apache2/bin/apachectl
/opt/local/var/macports/software/apache2/2.2.11_0+darwin_9/opt/local/apache2/bin/apachectl
/usr/sbin/apachectl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Right, so now I know where else a command exists in the filesystem called &lt;code&gt;apachectl&lt;/code&gt;, but I don't know if any of those is in my $PATH, or what order they come in when searching through my $PATH. In this (old) workflow I'd have compared them to my $PATH manually as there's so few of them.&lt;/p&gt;

&lt;p&gt;So I noticed &lt;a href="http://awhitebox.com"&gt;Ali&lt;/a&gt; googling for the &lt;code&gt;which&lt;/code&gt; man page on IRC, and &lt;em&gt;(quite stupidly)&lt;/em&gt; poked fun at him for doing so. I then swallowed my ego and actually followed the link to the man page, and boy was I glad I did. Just shows with even a fairly simple command like &lt;code&gt;which&lt;/code&gt;, you sure don't know everything!&lt;/p&gt;

&lt;p&gt;What I discovered was that &lt;code&gt;which&lt;/code&gt; has a single flag you can pass it, &lt;code&gt;-a&lt;/code&gt;. From the &lt;a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?which"&gt;man page&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-a     print all matching pathnames of each argument
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Right. So that &lt;code&gt;locate | grep&lt;/code&gt; command plus manually figuring out what is in my $PATH is really hard work then. &lt;code&gt;which -a&lt;/code&gt; should give us the same results, but a lot faster and with a lot less manual thought.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Julius:~ caius$ which -a apachectl
/opt/local/apache2/bin/apachectl
/usr/sbin/apachectl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And hey presto, yet another useful bit of bash knowledge for me, thanks to &lt;a href="http://awhitebox.com"&gt;Ali&lt;/a&gt; not being afraid to &lt;acronym title="Read the Fucking Manual"&gt;RTFM&lt;/acronym&gt;!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Validating Data with Regular Expressions in Ruby</title>
    <link rel="alternate" href="http://caiustheory.com/validating-data-with-regular-expressions-in-ruby/"/>
    <id>http://caiustheory.com/validating-data-with-regular-expressions-in-ruby/</id>
    <published>2009-04-11T13:41:48+01:00</published>
    <updated>2009-04-11T13:41:48+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I happened to be sent a link to the &lt;a href="https://www.owasp.org/index.php/Main_Page"&gt;OWASP&lt;/a&gt; paper on &lt;a href="https://www.owasp.org/images/8/89/Rails_Security_2.pdf"&gt;Rails Security&lt;/a&gt; recently and started reading it. Partway in there's a section on Regular Expressions, which opens with the following line:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A common pitfall in Ruby's regular expressions is to match the string's beginning and end by &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;, instead of &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now I've never used &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt; in my regular expressions to validate data, I've only ever used &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; assuming they matched the start and end of the string. This becomes an issue with validating data in rails, because &lt;code&gt;%0A&lt;/code&gt; (&lt;code&gt;\n&lt;/code&gt; URL encoded) is decoded by rails before passing the string to your model to validate.&lt;/p&gt;

&lt;h2 id="testing-our-expectations"&gt;Testing our expectations&lt;/h2&gt;

&lt;p&gt;Lets say we want to validate the string as a username for our app. A username is 5 characters long and consists only of lowercase letters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;regex = /^[a-z]{5}$/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First we make sure it matches the data we want it to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"caius".validate(regex) =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Excellent, that validated. Now we'll try a shorter string, which we expect to fail.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"cai".validate(regex) =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once more, it behaves how we expected it to. The shorter string was rejected as we wanted it to be. Now, what happens if we test a string with a newline character in it? We'll make sure the data before the &lt;code&gt;\n&lt;/code&gt; is valid, and then add some more data after the newline.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"caius\nfoo".validate(regex) =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uh oh! That validated and would've been saved as a username?!&lt;/p&gt;

&lt;p&gt;Lets have a look at exactly what's happening there, the &lt;code&gt;$&lt;/code&gt; matches the &lt;code&gt;\n&lt;/code&gt; character, so the regex is only matching the first 5 characters of the string, and just ignores anything after the &lt;code&gt;\n&lt;/code&gt;. As it turns out, this is exactly what we've asked the regex to match, but we didn't want this behaviour.&lt;/p&gt;

&lt;p&gt;Now you might be thinking, "So what? someone can have a username with a newline in it." For starters this will probably display weirdly anywhere you use their username, but more importantly it opens your application to an injection attack. Suppose they took advantage of this by setting their username to include some javascript on the page which stole your login cookie and sent it to them. You view their account in the admin section and oh no! They can login as your admin account and do what they want.&lt;/p&gt;

&lt;p&gt;Simple example of this is just having it output an alert dialog. &lt;em&gt;(This is actually the code I'll use to test an application as its not malicious, but blindingly obvious if the javascript is executed or not.)&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"caius\n&amp;lt;script&amp;gt;alert('hello')&amp;lt;/script&amp;gt;".validate(regex) =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok, so that was the result we were expecting this time, although it's still not the outcome we wanted. Anytime their username is viewed (providing you aren't escaping the data to HTML entities) you'll see the following:&lt;/p&gt;

&lt;p&gt;&lt;img alt="javascript alert dialog" src="http://caius.name/images/qs/javascript-alert-dialog.png" /&gt;&lt;/p&gt;

&lt;h2 id="the-solution"&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Having realised from our testing above that ^$ matches the beginning/end of a &lt;em&gt;line&lt;/em&gt; in ruby not the beginning and end of a &lt;em&gt;string&lt;/em&gt;, I hear you cry, "How do we make sure we're matching the entire string?!"&lt;/p&gt;

&lt;p&gt;The answer is pretty simple. Just swap out &lt;code&gt;^$&lt;/code&gt; for &lt;code&gt;\A\z&lt;/code&gt;. Lets go ahead and try this with the same data as we have above, but with the modified regular expression.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;new_regex = /\A[a-z]{5}\z/
"caius".validate(new_regex) =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's a good start, the valid string still matches.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"cai".validate(new_regex) =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks like it's going well, invalid string is invalid.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"caius\nfoo".validate(new_regex) =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh Excellent! It's validating this one correctly now.&lt;/p&gt;

&lt;p&gt;And just for consistency, lets test it with a more likely attack string.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"caius\n&amp;lt;script&amp;gt;alert('hello')&amp;lt;/script&amp;gt;".validate(new_regex) =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fantastic! We've fixed the security hole in our validation of the user's username.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you want to actually run the code above you'll need the following at the start of the ruby script to patch the validate method into String.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class String
  def validate regex
    !self[regex].nil?
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update:&lt;/em&gt;&lt;/strong&gt; I had &lt;code&gt;\Z&lt;/code&gt; in the &lt;code&gt;new_regex&lt;/code&gt; rather than the &lt;code&gt;\z&lt;/code&gt; it should've been. Thanks &lt;a href="http://ciaranwal.sh/"&gt;Ciarán&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Safari 4 Hidden Preferences</title>
    <link rel="alternate" href="http://caiustheory.com/safari-4-hidden-preferences/"/>
    <id>http://caiustheory.com/safari-4-hidden-preferences/</id>
    <published>2009-02-24T16:11:05+00:00</published>
    <updated>2009-02-24T16:11:05+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;Updated 2009-06-09:&lt;/strong&gt; This post is for the Safari 4 &lt;strong&gt;beta&lt;/strong&gt; and will not work with the new Safari 4 released yesterday at the WWDC keynote. I've had a look through that release and can't see any way to revert the address bar, etc sorry.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Having a quick poke through the new Safari binary yields the following strings:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ strings /Applications/Safari.app/Contents/MacOS/Safari | grep DebugSafari4
DebugSafari4TabBarIsOnTop
DebugSafari4IncludeToolbarRedesign
DebugSafari4IncludeFancyURLCompletionList
DebugSafari4IncludeGoogleSuggest
DebugSafari4LoadProgressStyle
DebugSafari4IncludeFlowViewInBookmarksView
DebugSafari4TopSitesZoomToPageAnimationDimsSnapshot
DebugSafari4IncludeTopSites
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;NB: Run these commands in Terminal.app and then you need to restart Safari for them to take effect.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="debugsafari4tabbarisontop"&gt;DebugSafari4TabBarIsOnTop&lt;/h3&gt;

&lt;p&gt;This moves the tab bar back where you expect it to be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4TabBarIsOnTop -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="debugsafari4includetoolbarredesign-and-debugsafari4loadprogressstyle"&gt;DebugSafari4IncludeToolbarRedesign and DebugSafari4LoadProgressStyle&lt;/h3&gt;

&lt;p&gt;When both set to NO it restores the blue loading bar behind the URL. &lt;em&gt;Also puts a page loading spinner in the tab itself, which looks odd with the new tabs.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4IncludeToolbarRedesign -bool NO
$ defaults write com.apple.Safari DebugSafari4LoadProgressStyle -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="debugsafari4includefancyurlcompletionlist"&gt;DebugSafari4IncludeFancyURLCompletionList&lt;/h3&gt;

&lt;p&gt;Switches off the new URL autocomplete menu and goes back to the original one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4IncludeFancyURLCompletionList -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="debugsafari4includegooglesuggest"&gt;DebugSafari4IncludeGoogleSuggest&lt;/h3&gt;

&lt;p&gt;Turns off the new Google suggest menu.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4IncludeGoogleSuggest -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="debugsafari4includeflowviewinbookmarksview"&gt;DebugSafari4IncludeFlowViewInBookmarksView&lt;/h3&gt;

&lt;p&gt;Removes CoverFlow from the Bookmarks view entirely. (&lt;a href="http://twitter.com/iacas/status/1245800183"&gt;Credit&lt;/a&gt; to &lt;a href="http://nslog.com/"&gt;Erik&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4IncludeFlowViewInBookmarksView -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="debugsafari4topsiteszoomtopageanimationdimssnapshot"&gt;DebugSafari4TopSitesZoomToPageAnimationDimsSnapshot&lt;/h3&gt;

&lt;p&gt;Disables the dimming when you click on a Top Site and it scales the screenshot up to fill the screen.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4TopSitesZoomToPageAnimationDimsSnapshot -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="debugsafari4includetopsites"&gt;DebugSafari4IncludeTopSites&lt;/h3&gt;

&lt;p&gt;Disables Top Sites feature completely.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults write com.apple.Safari DebugSafari4IncludeTopSites -bool NO
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="undoing-changes"&gt;Undoing changes&lt;/h2&gt;

&lt;p&gt;Just run the defaults command with the &lt;code&gt;delete&lt;/code&gt; flag for the appropriate key you wish to delete.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ defaults delete com.apple.Safari &amp;lt;key&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;NB: Don't include the &lt;code&gt;-bool NO&lt;/code&gt; at the end, it just requires the key (eg: "DebugSafari4IncludeGoogleSuggest")&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="update-2009-02-26"&gt;Update 2009-02-26&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://swedishcampground.com/safari-4-hidden-preferences#comment-3265"&gt;Jools points out in the comments&lt;/a&gt; how to reset the recent searches in the google search box.&lt;/p&gt;

&lt;h3 id="update-2009-05-26"&gt;Update 2009-05-26&lt;/h3&gt;

&lt;p&gt;Lowell's kindly created a Mac OS X application to edit these settings without using Terminal. &lt;a href="http://github.com/cocoastep/tweaky"&gt;http://github.com/cocoastep/tweaky&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="update-2010-11-18"&gt;Update 2010-11-18&lt;/h3&gt;

&lt;p&gt;Patric has kindly &lt;a href="http://www.movavi.com/opensource/safari-4-hidden-preferences-be"&gt;translated this post into Belorussian&lt;/a&gt; and posted it on his site.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Migrating Rubygems to Ruby 1.9.x</title>
    <link rel="alternate" href="http://caiustheory.com/migrating-rubygems-to-ruby-19x/"/>
    <id>http://caiustheory.com/migrating-rubygems-to-ruby-19x/</id>
    <published>2009-01-31T20:29:57+00:00</published>
    <updated>2009-01-31T20:29:57+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I just installed ruby 1.9.1 through &lt;a href="http://macports.org/"&gt;MacPorts&lt;/a&gt; and wanted to easily migrate my rubygems across from 1.8 to see which ones would fail to install.&lt;/p&gt;

&lt;p&gt;Thought about it for a while, then came up with the following bash one-liner to do it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem list | grep "(" | awk '{ print $1 }' | xargs -L 1 gem1.9 install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; Installing Ruby 1.9.1 through macports &lt;code&gt;sudo port install ruby19&lt;/code&gt; means I get &lt;code&gt;ruby1.9&lt;/code&gt;, &lt;code&gt;gem1.9&lt;/code&gt; and &lt;code&gt;rake1.9&lt;/code&gt; installed alongside my usual 1.8 &lt;code&gt;ruby&lt;/code&gt;, &lt;code&gt;gem&lt;/code&gt; and &lt;code&gt;rake&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That grabs the list of installed gems from &lt;code&gt;gem&lt;/code&gt;, searches for lines containing "(" so it only grabs the gem names, spits out the first section of the line, which is the name of the gem, and finally calls &lt;code&gt;gem1.9 install&lt;/code&gt; for each line via &lt;code&gt;xargs -L 1&lt;/code&gt;. Make sure to run it as root or prefix &lt;code&gt;gem1.9&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt;. &lt;em&gt;(Or let it install in your home folder, but I hate that.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From my quick run of the above snippet, 75% of my gems installed &lt;em&gt;(73 out of 98)&lt;/em&gt; and the other few that failed to install were ones like &lt;a href="http://github.com/why/hpricot/tree/master"&gt;Hpricot&lt;/a&gt; that require native extensions compiling. You can see the entire list of failures and successes of the gems in &lt;a href="http://pastie.textmate.org/pastes/376136"&gt;this pastie&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>View Raw Source</title>
    <link rel="alternate" href="http://caiustheory.com/view-raw-source/"/>
    <id>http://caiustheory.com/view-raw-source/</id>
    <published>2009-01-31T01:54:57+00:00</published>
    <updated>2009-01-31T01:54:57+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I write this blog using &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; because I'm a human and writing &lt;code&gt;stuff &amp;lt;strong&amp;gt;with&amp;lt;/strong&amp;gt; tags&lt;/code&gt; is just &lt;strong&gt;WRONG&lt;/strong&gt;. Thankfully, &lt;a href="http://daringfireball.net/"&gt;Gruber&lt;/a&gt; solved this problem by writing markdown.&lt;/p&gt;

&lt;p&gt;Now on the &lt;a href="http://daringfireball.net/projects/markdown/"&gt;markdown page&lt;/a&gt; he says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The best way to get a feel for Markdown’s formatting syntax is simply to look at a Markdown-formatted document. For example, you can view the Markdown source for the article text on this page here: &lt;a href="http://daringfireball.net/projects/markdown/index.text"&gt;http://daringfireball.net/projects/markdown/index.text&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;(You can use this ‘.text’ suffix trick to view the Markdown source for the content of each of the pages in this section, e.g. the Syntax and License pages.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And ever since I noticed that I've always read his articles using the '.text' trick. One of the plugins I've been meaning to write for &lt;a href="http://habariproject.org/"&gt;habari&lt;/a&gt; is one that replicates this '.text' behaviour. So tonight I decided to try and write it, started picking through the &lt;a href="http://wiki.habariproject.org/en/Creating_A_Plugin"&gt;Plugin documentation&lt;/a&gt; in preparation. Got a bit stuck with it as I've been out of the habari development loop for a few months, popped into &lt;a href="irc://irc.freenode.net/#habari"&gt;#habari&lt;/a&gt; and asked if I was thinking along the right lines.&lt;/p&gt;

&lt;p&gt;Few minutes later &lt;a href="http://asymptomatic.net/"&gt;Owen&lt;/a&gt; pops up and sends me a link to &lt;a href="http://svn.habariproject.org/habari-extras/plugins/plaintext/trunk/plaintext.plugin.php"&gt;plaintext.plugin.php&lt;/a&gt;, which does exactly what I was trying to do! Couple of tweaks later (switching it to '.text' instead of '.md') and its installed and working on this blog. Feel free to view the &lt;a href="http://caiustheory.com/view-raw-source.text"&gt;raw source&lt;/a&gt; of this post. Or any other post on this site.&lt;/p&gt;

&lt;h3 id="updated-2009-01-31"&gt;Updated 2009-01-31&lt;/h3&gt;

&lt;p&gt;Added to the habari-extras repo as the &lt;a href="http://svn.habariproject.org/habari-extras/plugins/plaintext/trunk/plaintext.plugin.php"&gt;Plaintext&lt;/a&gt; plugin.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>This is my Compiler</title>
    <link rel="alternate" href="http://caiustheory.com/this-is-my-compiler/"/>
    <id>http://caiustheory.com/this-is-my-compiler/</id>
    <published>2009-01-30T12:18:56+00:00</published>
    <updated>2009-01-30T12:18:56+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;As some friday fun in &lt;a href="http://twitter.com/geekupirc"&gt;#geekup&lt;/a&gt; we ended up converting the &lt;a href="http://usmilitary.about.com/od/marines/l/blriflecreed.htm"&gt;US Marines Creed&lt;/a&gt; to a geekier version.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is my compiler.&lt;br /&gt;
There are many like it, but this one is MINE.&lt;br /&gt;
My compiler is my best friend. It is my life.&lt;br /&gt;
I must master it as I must master my life.&lt;br /&gt;
My compiler without me is useless. Without my compiler, I am useless.&lt;br /&gt;
I must run my compiler true.&lt;br /&gt;
I must run faster than my bug who is trying to kill me.&lt;br /&gt;
I must squash him before he squashes me. I will…&lt;br /&gt;
My compiler and myself know that what counts in war is not the warnings we squash,&lt;br /&gt;
the builds we create, nor the optimisations we make.&lt;br /&gt;
We know it is the build errors fixed that count. We will fix…&lt;br /&gt;
My compiler is human, even as I, because it is my life.&lt;br /&gt;
Thus, I will learn it as a brother.&lt;br /&gt;
I will learn its weaknesses, its strengths, its output, its code,&lt;br /&gt;
its quirks, and its errors.&lt;br /&gt;
I will ever guard it against the ravages of virii and disk failures.&lt;br /&gt;
I will keep my compiler clean and ready, even as I am clean and ready.&lt;br /&gt;
We will become part of each other. We will…&lt;br /&gt;
Before Assembler I swear this creed.&lt;br /&gt;
My compiler and myself are the defenders of good code.&lt;br /&gt;
We are the masters of our bugs.&lt;br /&gt;
We are the saviors of our code.&lt;br /&gt;
So be it, until code is compiling and there are no bugs, but compiled code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then &lt;a href="http://jamx.org/"&gt;jamx&lt;/a&gt; jumped in with the &lt;a href="http://en.wikipedia.org/wiki/Lord's_Prayer#English_versions"&gt;Lords Prayer&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our Compiler, who art in memory. GNU be thy name.&lt;br /&gt;
Thy source code come, thy will be done.&lt;br /&gt;
On script as it is in memory.&lt;br /&gt;
Give us this day our daily data, and forgive us our segfaults as we forgive those who segfault against us.&lt;br /&gt;
And lead us not into /dev/null but deliver us from M$,&lt;br /&gt;
for thine is the domain, the cpu and the peeps.&lt;br /&gt;
for (x=0; x&amp;lt;2; x++){ x=0; }&lt;br /&gt;
Amen&lt;/p&gt;
&lt;/blockquote&gt;

</content>
  </entry>
  <entry>
    <title>Install Mysql Gem on Leopard</title>
    <link rel="alternate" href="http://caiustheory.com/install-mysql-gem-on-leopard/"/>
    <id>http://caiustheory.com/install-mysql-gem-on-leopard/</id>
    <published>2009-01-21T17:09:41+00:00</published>
    <updated>2009-01-21T17:09:41+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So, I keep having to reinstall mysql5 and rubygems from time to time for various reasons. I always install mysql5 through &lt;a href="http://macports.org/"&gt;MacPorts&lt;/a&gt; as a dependency for the php5 port (along with various other bits for the LA*P stack).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port install php5 +mysql5 +pear +readline +sockets +apache2 +sqlite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once this is installed then I have &lt;code&gt;mysql&lt;/code&gt; and can setup my databases, etc.&lt;/p&gt;

&lt;p&gt;Ignoring the rest of the LAMP stack, I then need to connect Ruby to the Mysql I just installed through MacPorts. Its quite simple to do, once you know the right argument to pass to it. The easiest way is to just tell it where the &lt;code&gt;mysql5_conf&lt;/code&gt; file is and let it figure out the rest for itself.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install mysql -- --with-mysql-config=/opt/local/bin/mysql_config5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully this will save me 10 minutes of googling next time I need to do this!&lt;/p&gt;

&lt;h3 id="update-2009-01-21"&gt;Update 2009-01-21&lt;/h3&gt;

&lt;p&gt;I'm an idiot and typed the &lt;code&gt;gem install&lt;/code&gt; command by hand, and ended up with &lt;code&gt;--with-mysql-conf&lt;/code&gt; instead of &lt;code&gt;--with-mysql-config&lt;/code&gt;. Updated now.&lt;/p&gt;

&lt;h3 id="update-2009-10-19"&gt;Update 2009-10-19&lt;/h3&gt;

&lt;p&gt;On Snow Leopard I needed to tell rubygems to install the gem as a 64-bit binary. Hattip to &lt;a href="http://www.schmidp.com/2009/06/14/rubyrails-and-mysql-on-snow-leopard-10a380/comment-page-1/"&gt;Philipp&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo env ARCHFLAGS="-arch x86_64" gem install mysql -- --with-mysql-config=/opt/local/bin/mysql_config5
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>GTranslate</title>
    <link rel="alternate" href="http://caiustheory.com/gtranslate/"/>
    <id>http://caiustheory.com/gtranslate/</id>
    <published>2009-01-04T09:40:59+00:00</published>
    <updated>2009-01-04T09:40:59+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I finally wrapped up some code I've been meaning to write for a while, its a wrapper for the &lt;a href="http://translate.google.com/"&gt;Google Translate API&lt;/a&gt;. Its also the first serious time I've used &lt;code&gt;method_missing&lt;/code&gt; in a class, in this case its to add methods for translating between all the various languages.&lt;/p&gt;

&lt;p&gt;Its fairly simple to use, there is an &lt;a href="http://github.com/caius/gtranslate/tree/master/examples.rb"&gt;examples.rb&lt;/a&gt; included with it, but the basic usage is just this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Convert from english to french
Google::Translate.english_to_french( "Hello" ) # =&amp;gt; "Bonjour"

# There is also a short(er)-hand version
Google::Tr.en_to_fr( "Hello" )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As per usual with all my code its available on my &lt;a href="http://github.com/caius/"&gt;github account&lt;/a&gt;, as the &lt;a href="http://github.com/caius/gtranslate/"&gt;GTranslate&lt;/a&gt; project. I'll throw some specs together for it and package it up as a gem soon.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>The Shell Meme</title>
    <link rel="alternate" href="http://caiustheory.com/the-shell-meme/"/>
    <id>http://caiustheory.com/the-shell-meme/</id>
    <published>2008-12-30T18:29:35+00:00</published>
    <updated>2008-12-30T18:29:35+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I ran across &lt;a href="http://lstoll.net/2008/04/shell-meme/"&gt;The Shell Meme&lt;/a&gt; on &lt;a href="http://lstoll.net/"&gt;Lincoln Stoll's&lt;/a&gt; blog, and figured I'd, uh, &lt;em&gt;borrow&lt;/em&gt; it.&lt;/p&gt;

&lt;p&gt;Run this command in a new shell:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;history|awk '{a[$2]++} END{for(i in a){printf "%5d\t%s\n ",a[i],i}}'|sort -rn|head
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I get this as the output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;379    git
221    cd
181    ssh
77    sudo
69    ruby
66    ls
34    rake
33    m
32    bb
31    m.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;bb&lt;/code&gt; changes directory straight into my &lt;a href="http://www.brightbox.co.uk/"&gt;BrightBox&lt;/a&gt; source directory. &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;m.&lt;/code&gt; are &lt;a href="http://macromates.com/"&gt;TextMate&lt;/a&gt; alias's to open files or directories in TextMate for editing.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Sending Array elements as individual arguments in Ruby</title>
    <link rel="alternate" href="http://caiustheory.com/sending-array-elements-as-individual-arguments-in-ruby/"/>
    <id>http://caiustheory.com/sending-array-elements-as-individual-arguments-in-ruby/</id>
    <published>2008-12-26T07:25:15+00:00</published>
    <updated>2008-12-26T07:25:15+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Lets imagine we've got an array of strings, and we want to print it out as a list of strings using printf. &lt;em&gt;(If you're complaining about my logic here, hold fire for just a second good sir/madam.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So we start off with the array of strings, and then pass it to printf with the right amount of &lt;code&gt;%s&lt;/code&gt;'s in the format string:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;arr = ["one", "two", "three"]

printf "%s, %s, %s", arr
# ~&amp;gt; -:3:in `printf': too few arguments (ArgumentError)
# ~&amp;gt;     from -:3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh whoops, we've actually only passed &lt;code&gt;"%s, %s, %s", ["one", "two", "three"]&lt;/code&gt; to printf. So of course it whinges about not getting enough arguments. Now how do we fix this, how &lt;strong&gt;do&lt;/strong&gt; we pass an array with each element a seperate argument to a method?&lt;/p&gt;

&lt;p&gt;We use the &lt;code&gt;*&lt;/code&gt; of course! Just prefix the variable name with &lt;code&gt;*&lt;/code&gt; and the method is passed each element as separate arguments, rather than the whole array as one arguement.&lt;/p&gt;

&lt;p&gt;Going back to our &lt;code&gt;printf&lt;/code&gt; example above, we simply insert one character &lt;em&gt;(the lowly &lt;code&gt;*&lt;/code&gt;)&lt;/em&gt; and end up with a string being outputted.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;printf "%s, %s, %s", *arr
# &amp;gt;&amp;gt; one, two, three
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I realise this is a partially stupid example, but it serves to explain the point I wanted to make. If you were complaining about my choice of printf earlier, here is the way I think most rubyists would solve this problem instead.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;arr = ["one", "two", "three"]

print arr.join(" ")
# &amp;gt;&amp;gt; one two three
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And if I wanted to be slightly cleverer with the &lt;code&gt;printf&lt;/code&gt; version, and print out an array containing an unknown number of strings, but of a set width, then I could do the following. &lt;em&gt;(NB: This is actually how I ran into this problem.)&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;arr = ["one", "two", "three"]

printf arr.map { "%6s" }.join, *arr
# &amp;gt;&amp;gt;    one   two three
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that is where the lowly &lt;code&gt;*&lt;/code&gt; comes in.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Merry Testing</title>
    <link rel="alternate" href="http://caiustheory.com/merry-testing/"/>
    <id>http://caiustheory.com/merry-testing/</id>
    <published>2008-12-25T15:01:54+00:00</published>
    <updated>2008-12-25T15:01:54+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Just a few examples of the same test written in a few languages. Its testing setting the date on an object that is created in the tests' setup method already. These fall under the unit testing, rather than full-stack testing.&lt;/p&gt;

&lt;h3 id="testing-in-objc-with-ocunithttpwwwsentechsoftwareocunit"&gt;Testing in ObjC with &lt;a href="http://www.sente.ch/software/ocunit/"&gt;OCUnit&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;// Add a date and time
- (void)testSettingDate
{    
    NSDate *theDate = [NSDate date];        
    
    STAssertNoThrow([calc setDate:theDate], @"Shouldn't raise an exception");
    // And it should match when pulled out as well
    STAssertEqualObjects([calc date], theDate,
                         @"%@ should match %@",
                         [calc date], theDate);

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="testing-in-ruby-using-rspechttprspecinfo"&gt;Testing in Ruby using &lt;a href="http://rspec.info/"&gt;RSpec&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;it "should set the date successfully" do
  the_date = Date.today

  @calc.date = the_date
  # And it should match when pulled out as well
  @calc.date.should == the_date
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="testing-in-ruby-using-testunithttpwwwruby-docorgstdliblibdoctestunitrdocclassestestunithtml"&gt;Testing in Ruby using &lt;a href="http://www.ruby-doc.org/stdlib/libdoc/test/unit/rdoc/classes/Test/Unit.html"&gt;Test::Unit&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;def test_setting_date
  the_date = Date.today
  @calc.date = the_date
  # And it should match when pulled out as well
  assert_equal(@calc.date, the_date)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="testing-in-php-using-phpunithttpphpunit"&gt;Testing in PHP using &lt;a href="http://phpun.it/"&gt;PHPUnit&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;function testSettingDate()
{
    $date = date();
    $calc-&amp;gt;date = $date;
    # And it should match when pulled out as well
    $this-&amp;gt;assertEquals($calc-&amp;gt;date, $date);
}
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>Think Visibility: An Online Marketing Conference</title>
    <link rel="alternate" href="http://caiustheory.com/think-visibility-an-online-marketing-conference/"/>
    <id>http://caiustheory.com/think-visibility-an-online-marketing-conference/</id>
    <published>2008-12-20T13:48:05+00:00</published>
    <updated>2008-12-20T13:48:05+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Now I'm not one for blogging about events usually—if I'm attending one then I'll just talk about it on &lt;a href="http://twitter.com/caius"&gt;twitter&lt;/a&gt; quite a bit beforehand. However, seeing as this one is being organised by my housemate and I like to keep him in a good mood so he doesn't do something daft like change the locks, I figured I'd blog about this one. &lt;em&gt;(Also its really rather a good idea, I'll be paying to attend and think he's bloody mad to organise a conference!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The conference is &lt;a href="http://www.thinkvisibility.com/"&gt;Think Visibility&lt;/a&gt;, which is a&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;one-day mini conference with a focus on the areas of web development and marketing which are usually left behind in the creation process: SEO, PPC, Monetisation, Blogging, Accessibility and Usability.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;a href="http://www.thinkvisibility.com/speakers.html"&gt;speaker line-up&lt;/a&gt; has rather a lot of big names in it if you follow the SEO/Online marketing world, and its only £30 to turn up for the day and listen to them speak. Oh, and theres an afterparty with free drinks &lt;em&gt;(Sponsor permitting)&lt;/em&gt; where you can get drunk with your hero's. (Or something.)&lt;/p&gt;

&lt;p&gt;Me, I'm attending simply because up until a year or so ago I thought SEO was a complete heap of crap, but having known &lt;a href="http://www.thehodge.co.uk/"&gt;Dom&lt;/a&gt; for a while, and worked for an SEO agency, I'm starting to appreciate that there is an art to it, and it is a much needed skill to run a successful website.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Fix Mail.app crashing after 10.5.6 upgrade</title>
    <link rel="alternate" href="http://caiustheory.com/fix-mailapp-crashing-after-1056-upgrade/"/>
    <id>http://caiustheory.com/fix-mailapp-crashing-after-1056-upgrade/</id>
    <published>2008-12-17T13:58:04+00:00</published>
    <updated>2008-12-17T13:58:04+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;When you upgrade to Mac OS 10.5.6, Mail.app might start crashing a few seconds after starting due to the GPG Bundle.&lt;/p&gt;

&lt;p&gt;The solution is to grab the updated version of the &lt;a href="http://www.sente.ch/software/GPGMail/English.lproj/GPGMail.html"&gt;GPG bundle&lt;/a&gt; – &lt;a href="http://www.sente.ch/pub/beta/GPGMail_d55_Leopard.dmg"&gt;GPGMail_d55_Leopard.dmg&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Quick Picture of Yourself</title>
    <link rel="alternate" href="http://caiustheory.com/quick-picture-of-yourself/"/>
    <id>http://caiustheory.com/quick-picture-of-yourself/</id>
    <published>2008-12-16T18:12:53+00:00</published>
    <updated>2008-12-16T18:12:53+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Theres a meme going round the &lt;a href="http://www.google.com/search?q=Take+a+picture+of+yourself+right+now"&gt;blogosphere&lt;/a&gt;/&lt;a href="http://search.twitter.com/search?q=Take+a+picture+of+yourself+right+now"&gt;twitterverse&lt;/a&gt; recently, so I figured I'd jump on it because there aren't any pictures of me on this blog yet. And there aren't that many in my &lt;a href="http://flickr.com/photos/caius/"&gt;flickr&lt;/a&gt; photostream either actually.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Picture of Caius" title="Caius Durling" src="http://caius.name/images/qs/Me.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="http://caius.name/images/qs/Me.png"&gt;Fullsize Picture&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="instructions"&gt;Instructions&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Take a picture of yourself right now.&lt;/li&gt;
  &lt;li&gt;Don’t change your clothes, don’t fix your hair… just take a picture.&lt;/li&gt;
  &lt;li&gt;Post that picture with NO editing.&lt;/li&gt;
  &lt;li&gt;Post these instructions with your picture.&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>Installing Ubuntu on an iMac G3</title>
    <link rel="alternate" href="http://caiustheory.com/installing-ubuntu-on-an-imac-g3/"/>
    <id>http://caiustheory.com/installing-ubuntu-on-an-imac-g3/</id>
    <published>2008-12-09T08:51:48+00:00</published>
    <updated>2008-12-09T08:51:48+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I decided to install ubuntu onto my iMac G3&lt;ref&gt;450Mhz G3, 768mb ram, 20GB Hard Drive&lt;/ref&gt; to play around with.  Only problem was it would boot so far, then just stop at a black screen.  In googling the fix, the blog post that contains the fix is &lt;em&gt;slightly&lt;/em&gt; outdated and 100% 404.&lt;/p&gt;

&lt;p&gt;Here is the fix, updated for Ubuntu 6.10 Desktop PPC:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;When the screen goes black, drop to the console&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; Control - Option - F2
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;&lt;em&gt;(if you need to log in use the name ubuntu to log in.)&lt;/em&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ sudo nano /etc/X11/xorg.conf
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change the frequencies in monitor section as follows:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; Section “Monitor”
     Identifier “Generic Monitor”
     Option “DPMS”
     HorizSync 60-60
     VertRefresh 43-117
 EndSection
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;After the changes then type &lt;code&gt;control-o&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt; (to accept the filename), then &lt;code&gt;control-x&lt;/code&gt; (save and exit nano)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Restart X by running the following:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; sudo killall gdm &amp;amp;&amp;amp; sudo /etc/init.d/gdm start
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>About</title>
    <link rel="alternate" href="http://caiustheory.com/about/"/>
    <id>http://caiustheory.com/about/</id>
    <published>2008-12-07T04:09:28+00:00</published>
    <updated>2008-12-07T04:09:28+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;h2 id="the-domain-name"&gt;The Domain Name&lt;/h2&gt;

&lt;p&gt;This blog used to be located at &lt;a href="http://swedishcampground.com/"&gt;SwedishCampground.com&lt;/a&gt;, but I ended up with a better use for that name, so this got sidelined over here. I bought &lt;a href="http://caiustheory.com/"&gt;CaiusTheory.com&lt;/a&gt; after having someone mention it to me in parody of Chaos Theory, and decided it was fairly apt for my musings and technical waffling.&lt;/p&gt;

&lt;h2 id="the-author"&gt;The Author&lt;/h2&gt;

&lt;p&gt;I'm a:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mac User&lt;/li&gt;
  &lt;li&gt;Developer at &lt;a href="http://freeagent.com/"&gt;FreeAgent&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://twitter.com/caius"&gt;Twitter Addict&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find out more about me over on my &lt;a href="http://caius.name/"&gt;profile site&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>When work just feels right</title>
    <link rel="alternate" href="http://caiustheory.com/when-work-just-feels-right/"/>
    <id>http://caiustheory.com/when-work-just-feels-right/</id>
    <published>2008-11-21T11:51:08+00:00</published>
    <updated>2008-11-21T11:51:08+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Much like &lt;a title="3hv" href="http://www.3hv.co.uk/"&gt;Rahoul's&lt;/a&gt; post on &lt;a title="Working for Brightbox" href="http://www.3hv.co.uk/blog/2008/10/16/working-for-brightbox/"&gt;knowing you're on the right path&lt;/a&gt;, I had that moment this morning whilst we were discussing a future feature for our control panel.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;john&lt;/strong&gt;: will I be able to superpoke our customers?&lt;br /&gt;
&lt;strong&gt;john&lt;/strong&gt;: is that in the spec?&lt;br /&gt;
&lt;strong&gt;Jeremy&lt;/strong&gt;: "John made server10 a zombie"&lt;br /&gt;
&lt;strong&gt;Caius&lt;/strong&gt;: "server10 zombified server9"&lt;br /&gt;
&lt;strong&gt;Jeremy&lt;/strong&gt;: "David has poked server19 19234 times"&lt;br /&gt;
&lt;strong&gt;john&lt;/strong&gt;: server16 messaged David "My disk is filling up and I have files I need to put somewhere, please help!"&lt;br /&gt;
&lt;strong&gt;Caius&lt;/strong&gt;: "Rahoul ended his friendship with server15"&lt;br /&gt;
&lt;strong&gt;David&lt;/strong&gt;: "server02 is now married to server05"&lt;br /&gt;
&lt;strong&gt;Rahoul&lt;/strong&gt;: server10 has sent you 12 videos of a fat man eating a cake&lt;br /&gt;
&lt;strong&gt;David&lt;/strong&gt;: server11 joined the group "KVM ftw"&lt;br /&gt;
&lt;strong&gt;Caius&lt;/strong&gt;: "server16 threw a sheep at server15"&lt;br /&gt;
&lt;strong&gt;john&lt;/strong&gt;: server03 joined the group "Centos sucks!"&lt;br /&gt;
&lt;strong&gt;Caius&lt;/strong&gt;: "server15 sent an emergency broadcast: physical movement detected"&lt;br /&gt;
&lt;strong&gt;john&lt;/strong&gt;: storage03 has logged off&lt;br /&gt;
&lt;strong&gt;Caius&lt;/strong&gt;: "x13 flew to the moon 0 times"&lt;br /&gt;
&lt;strong&gt;john&lt;/strong&gt;: disk5 in storage02 is now a zombie&lt;br /&gt;
&lt;strong&gt;Jeremy&lt;/strong&gt;: disk4 in storage02 is now a zombie&lt;br /&gt;
&lt;strong&gt;Jeremy&lt;/strong&gt;: disk3 in storage02 is now a zombie&lt;br /&gt;
&lt;strong&gt;Jeremy&lt;/strong&gt;: disk2 in storage02 is now a zombie&lt;br /&gt;
&lt;strong&gt;john&lt;/strong&gt;: storage02 was sold on ebay by Jeremy&lt;br /&gt;
&lt;strong&gt;Caius&lt;/strong&gt;: "john was sold on brightbox marketplace by storage5"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;(In case you don't know, I work for &lt;a href="http://www.brightbox.co.uk/"&gt;Brightbox&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Adding a remote to existing git repo</title>
    <link rel="alternate" href="http://caiustheory.com/adding-a-remote-to-existing-git-repo/"/>
    <id>http://caiustheory.com/adding-a-remote-to-existing-git-repo/</id>
    <published>2008-11-09T18:32:55+00:00</published>
    <updated>2008-11-09T18:32:55+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Usually for me this happens when I have an existing project and I setup a &lt;a href="http://github.com/"&gt;github&lt;/a&gt; repo for it. As part of the setup for the github project, it gives you the commands to run to add the github repo as a remote to my local git repo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd existing_git_repo
git remote add origin git@github.com:caius/foo.git
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem then is you've added the remote account, but the local master branch isn't tracking the remote master branch, so when you try and just &lt;code&gt;git pull&lt;/code&gt; it will fail with a message telling you to set the remote refs up.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Julius:foo(master) caius$ git pull&lt;br /&gt;
You asked me to pull without telling me which branch you&lt;br /&gt;
want to merge with, and 'branch.master.merge' in&lt;br /&gt;
your configuration file does not tell me either.  Please&lt;br /&gt;
name which branch you want to merge on the command line and&lt;br /&gt;
try again (e.g. 'git pull &lt;repository&gt; &lt;refspec&gt;').  
See git-pull(1) for details on the refspec.&lt;/refspec&gt;&lt;/repository&gt;&lt;/p&gt;

  &lt;p&gt;If you often merge with the same branch, you may want to&lt;br /&gt;
configure the following variables in your configuration&lt;br /&gt;
file:&lt;/p&gt;

  &lt;pre&gt;&lt;code&gt;branch.master.remote = &amp;lt;nickname&amp;gt;
branch.master.merge = &amp;lt;remote-ref&amp;gt;
remote.&amp;lt;nickname&amp;gt;.url = &amp;lt;url&amp;gt;
remote.&amp;lt;nickname&amp;gt;.fetch = &amp;lt;refspec&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

  &lt;p&gt;See git-config(1) for details.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The answer is to do what it says funnily enough, and add the remote refs tracking to the config file. The easiest way I've found of doing this is to edit &lt;code&gt;.git/config&lt;/code&gt; and add the following at the bottom of it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[branch "master"]
    remote = origin
    merge = refs/heads/master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Remember to change the branch or remote names if you need to.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you've added that to the config you can run &lt;code&gt;git pull&lt;/code&gt; on the master branch and it'll do the usual automagical thing and pull the remote master branch changes into the local one!&lt;/p&gt;

&lt;h4 id="updated-2008-11-09"&gt;Updated 2008-11-09&lt;/h4&gt;

&lt;p&gt;See CiarÃƒÂ¡n's comment below for an all-inclusive command to do the above.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Removing non-existent source from rubygems</title>
    <link rel="alternate" href="http://caiustheory.com/removing-non-existant-source-from-rubygems/"/>
    <id>http://caiustheory.com/removing-non-existant-source-from-rubygems/</id>
    <published>2008-11-07T06:08:28+00:00</published>
    <updated>2008-11-07T06:08:28+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I just came to move some ruby scripts onto my mac mini, and to do so I needed to install a couple of gems. Now I realised I hadn't installed or updated rubygems on the machine for a while, so I figured it was best to update &lt;code&gt;gem&lt;/code&gt; before installing the gems I wanted. Easier said than done.&lt;/p&gt;

&lt;p&gt;At some point in the past I had added &lt;code&gt;http://gems.datamapper.org&lt;/code&gt; as a source to rubygems. Since then the datamapper project has discontinued using this gem source to serve up gems, so I was getting the following output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mm:daemons caius$ sudo gem update --system
Updating installed gems
Bulk updating Gem source index for: http://gems.rubyforge.org/
ERROR:  While executing gem ... (Gem::RemoteSourceException)
    HTTP Response 404 fetching http://gems.datamapper.org/yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eeek! I can't update because the source no longer exists. So I figured I'd remove the source before updating, that should work right? Wrong. It updates the sources before removing the source from the config it would appear.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mm:daemons caius$ sudo gem sources
** CURRENT SOURCES ***

http://gems.rubyforge.org
http://gems.datamapper.org

mm:daemons caius$ sudo gem sources -r http://gems.datamapper.org
Bulk updating Gem source index for: http://gems.rubyforge.org/
ERROR:  While executing gem ... (Gem::RemoteSourceException)
    HTTP Response 404 fetching http://gems.datamapper.org/yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh balls. So how do I remove the source without updating it first. I need to update it to remove it, but to remove it I need to update from it. Gotta love catch 22s!&lt;/p&gt;

&lt;p&gt;I remembered that &lt;code&gt;gem install&lt;/code&gt; has an option not to update sources, &lt;code&gt;--no-update-sources&lt;/code&gt;. So I figured thats gotta work when removing a source as well, but it doesn't.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mm:daemons caius$ sudo gem sources -r http://gems.datamapper.org --no-update-sources
ERROR:  While executing gem ... (OptionParser::InvalidOption)
    invalid option: --no-update-sources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh crap. Now what do I do? Take my usual tactic and google for a hint of course! I'd considered trying to find where the gem config was and remove the source by hand, but I figured that wouldn't be that simple. After hitting a couple of sites that weren't relevant I ended up &lt;a href="http://jaigouk.blogspot.com/2008/07/404-fetching-httpgemsdatamapperorgyaml.html"&gt;on the edge of complexity&lt;/a&gt; where he mentions the command &lt;code&gt;nano ~/.gemrc&lt;/code&gt;. Which made me wonder if that file contains the sources.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mm:daemons caius$ cat ~/.gemrc
--- 
:update_sources: true
:verbose: true
:bulk_threshold: 1000
:sources: 
- http://gems.rubyforge.org
- http://gems.datamapper.org
:backtrace: false
:benchmark: false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All I needed to do was remove the &lt;code&gt;- http://gems.datamapper.org&lt;/code&gt; line and &lt;em&gt;poof&lt;/em&gt;, &lt;code&gt;gem&lt;/code&gt; was working again. One quick &lt;code&gt;gem update --system&lt;/code&gt; later and I was upgraded from gem 1.1.1 to 1.3.1 and installing the gems I needed.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Setting up git with rails apps</title>
    <link rel="alternate" href="http://caiustheory.com/setting-up-git-with-rails-apps/"/>
    <id>http://caiustheory.com/setting-up-git-with-rails-apps/</id>
    <published>2008-11-06T13:03:02+00:00</published>
    <updated>2008-11-06T13:03:02+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;When I create a new rails app, I'm constantly going back to another project and stealing the &lt;code&gt;.gitignore&lt;/code&gt; file from it to make sure that git doesn't know about certain files rails either updates frequently, or stores machine-specific data in. The latter is generally just &lt;code&gt;config/database.yml&lt;/code&gt;, because I develop alongside my colleagues at &lt;a title="Brightbox - Serious Rails Hosting" href="http://brightbox.co.uk/"&gt;Brightbox&lt;/a&gt; and we deploy via &lt;a href="http://www.capify.org/"&gt;capistrano&lt;/a&gt;, we always put the &lt;code&gt;database.yml&lt;/code&gt; file in the shared directory on the server, so we each have our own version with our local credentials in it locally. And thus we don't want it to be tracked by git.&lt;/p&gt;

&lt;p&gt;Here's what I've collated from various sources over the few weeks I've been using git + rails everyday.&lt;/p&gt;

&lt;h4 id="gitignore"&gt;.gitignore&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;config/database.yml
log/*.log
tmp/*

# OS X only
.DS_Store
**/.DS_Store
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then to make sure &lt;code&gt;log/&lt;/code&gt; and &lt;code&gt;tmp/&lt;/code&gt; are tracked, I just add a blank .gitignore file in them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;touch log/.gitignore
touch tmp/.gitignore
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Spanning Sync</title>
    <link rel="alternate" href="http://caiustheory.com/spanning-sync/"/>
    <id>http://caiustheory.com/spanning-sync/</id>
    <published>2008-11-03T11:40:04+00:00</published>
    <updated>2008-11-03T11:40:04+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So for &lt;a title="Brightbox - Serious rails hosting" href="http://www.brightbox.co.uk"&gt;work&lt;/a&gt; I have to subscribe to a shared google calendar the company uses. Annoyingly this can't be through my Google Apps account though, it has to be through my normal google account.&lt;/p&gt;

&lt;p&gt;Also annoying is the fact google doesn't let me subscribe to my shared calendars without making them 100% public. Which means the shared private calendar work uses would have to be a &lt;em&gt;public&lt;/em&gt; shared calendar, which is obviously not going to happen. (Can't have everyone knowing when the secret drinking parties are!)&lt;/p&gt;

&lt;p&gt;Thankfully, there is already a solution out there to this problem, and it comes in the form of a Preference Pane called &lt;a title="Spanning Sync" href="http://spanningsync.com/"&gt;SpanningSync&lt;/a&gt; that syncs iCal to Google Calendar. All you need to do is install the prefpane and enter your google email/password (which is then safely secured in your keychain I believe.)&lt;/p&gt;

&lt;p&gt;What it does is stick an icon in the menubar, and then at a pre-defined (and customisable) interval, sync any new changes between the local iCal calendar and the remote shared calendar in your google acccount.&lt;/p&gt;

&lt;p&gt;Spanning Sync is only $25 to register for the year, but you can save yourself $5 by entering &lt;strong&gt;6EMQAC&lt;/strong&gt; as the spanning sync coupon code, or &lt;a href="http://spanningsync.com/?r=6EMQAC"&gt;clicking here&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Create a blank rails app including plugins</title>
    <link rel="alternate" href="http://caiustheory.com/create-a-blank-rails-app-including-plugins/"/>
    <id>http://caiustheory.com/create-a-blank-rails-app-including-plugins/</id>
    <published>2008-11-03T06:48:27+00:00</published>
    <updated>2008-11-03T06:48:27+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;When I create a rails app from scratch I like to include certain plugins to help me write the app, such as the &lt;em&gt;Rspec&lt;/em&gt; testing framework instead of the built-in &lt;em&gt;Test::Unit&lt;/em&gt; and &lt;em&gt;jQuery&lt;/em&gt; instead of &lt;em&gt;prototype&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://rspec.info/"&gt;Rspec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://github.com/rahoulb/rspec-rails/wikis"&gt;Rspec-rails&lt;/a&gt; &lt;em&gt;(NB: I use &lt;a href="http://3hv.co.uk"&gt;rahoul&lt;/a&gt;'s fork of rspec-rails)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://github.com/aslakhellesoy/cucumber/wikis"&gt;Cucumber&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://github.com/brynary/webrat/wikis"&gt;Webrat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://ennerchi.com/projects/jrails"&gt;jRails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://plugins.code.lukeredpath.co.uk/browser/demeters_revenge/trunk"&gt;Demeters Revenge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here are the commands in the order I run them to create the blank app.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Create the rails app
cd ~/Sites/apps/
rails myapp
cd myapp

# Setup a git repo
git init
# Add all files and make the initial import
git add .
git commit -m "Initial Import"

# Add the plugins as git submodules
git submodule add git://github.com/dchelimsky/rspec.git vendor/plugins/rspec
git submodule add git://github.com/rahoulb/rspec-rails.git vendor/plugins/rspec-rails
git submodule add git://github.com/aslakhellesoy/cucumber.git vendor/plugins/cucumber
git submodule add git://github.com/brynary/webrat.git vendor/plugins/webrat
git submodule add git://github.com/caius/demeters_revenge.git vendor/plugins/demeters_revenge

# Commit the changes
git ci -am "Adding all needed submodules"

# Replace TestUnit with rspec
git rm -r test/
ruby script/generate rspec
# Replace stories with cucumber features
rm -rf stories/
ruby script/generate cucumber

# Add the changes to git
git add .
git ci -m "Committing initial rspec/cucumber files"

# Install jRails, we have to install it using script/plugin
# Remove existing javascript files
git rm public/javascripts/*
mkdir public/javascripts
# Add jrails
ruby script/plugin install http://ennerchi.googlecode.com/svn/trunk/plugins/jrails
git add vendor/plugins/jrails/ public/javascripts
git ci -m "Adding jRails to replace Prototype"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now you have a blank app waiting for you to write using features for full stack testing, and rspec for testing model and controller code.&lt;/p&gt;

&lt;h4 id="updated-2008-11-04"&gt;Updated 2008-11-04&lt;/h4&gt;

&lt;p&gt;Added demeters revenge and jRails plugins.&lt;/p&gt;

&lt;h4 id="update-2008-11-05"&gt;Update 2008-11-05&lt;/h4&gt;

&lt;p&gt;I've also blogged the &lt;a href="http://swedishcampground.com/setting-up-git-with-rails-apps"&gt;.gitignore&lt;/a&gt; file I use with rails apps as well. Usually add it into my apps before running &lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Keyboards</title>
    <link rel="alternate" href="http://caiustheory.com/keyboards/"/>
    <id>http://caiustheory.com/keyboards/</id>
    <published>2008-10-14T14:59:01+01:00</published>
    <updated>2008-10-14T14:59:01+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Back in the day I swapped the keys on my 12" powerbook keyboard around to read &lt;code&gt;macgenius&lt;/code&gt; across the middle row.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/caius/2941719496/"&gt;&lt;img alt="Powerbook Keyboard" src="http://farm4.static.flickr.com/3213/2941719496_caf2a6a813_m.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I unearthed the picture, and figured, why not do it to my apple aluminium keyboard? So I found a &lt;a href="http://skeltoac.com/2007/10/22/apple-keyboard-aluminum-keycap-removal/"&gt;tutorial&lt;/a&gt; from some other guy that'd done it, and dug out my penknife.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/caius/2938651260/"&gt;&lt;img alt="External Keyboard" src="http://farm4.static.flickr.com/3243/2938651260_915f42d92d_m.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that I decided to rearrange the macbook internal keyboard as well. First I googled around to make sure lifting the keys was the same as doing it on the external keyboard (which it appeared to be), then I went ahead and rearranged them as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/caius/2940872039/"&gt;&lt;img alt="Internal Keyboard -- Macgenius" src="http://farm4.static.flickr.com/3214/2940872039_164ee672ef_m.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So whilst I was wondering what to do about it, my mother emailed me and suggested using &lt;code&gt;ontherails&lt;/code&gt; instead of &lt;code&gt;macgenius&lt;/code&gt;. So I did, and now the top row reads &lt;code&gt;ontherails&lt;/code&gt; on the macbooks' internal keyboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/caius/2941726222/"&gt;&lt;img alt="Internal Keyboard -- Ontherails" src="http://farm4.static.flickr.com/3146/2941726222_67b2405a89_m.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All pictures are licenced under &lt;a href="http://creativecommons.org/licenses/by/2.0/deed.en_GB"&gt;Creative Commons Attribution 2.0 Generic licence&lt;/a&gt; and the above pictures, plus some &lt;em&gt;in progress&lt;/em&gt; shots, are available in my &lt;a href="http://www.flickr.com/photos/caius/sets/72157608015895484/"&gt;Keyboard Modifications&lt;/a&gt; flickr set.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Alistapart Survey</title>
    <link rel="alternate" href="http://caiustheory.com/alistapart-survey/"/>
    <id>http://caiustheory.com/alistapart-survey/</id>
    <published>2008-07-29T15:47:24+01:00</published>
    <updated>2008-07-29T15:47:24+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://alistapart.com/articles/survey2008"&gt;&lt;img src="http://aneventapart.com/webdesignsurvey/templates/ala/images/i-took-the-2008-survey.gif" title="I took the 2008 alistapart survey -- you should to!" /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Another Concise Code Example</title>
    <link rel="alternate" href="http://caiustheory.com/another-concise-code-example/"/>
    <id>http://caiustheory.com/another-concise-code-example/</id>
    <published>2008-04-26T16:54:09+01:00</published>
    <updated>2008-04-26T16:54:09+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;This is just another example showing how I refactor code down to its bare minimum. The reason why I do this so much (and indeed I think why ruby is so easy to read compared to other languages) is because it makes my code more readable and less of a bugger to pick up after a while.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Page
    attr_accessor :parent_id
    
    def old_parent
    # The returns aren't needed here in ruby, but in other
    # languages using this logic block you would require
    # the returns, so I left them in here.

    if self.parent?
      return Page.find( self.parent_id )
    else
      return false
    end
  end

  def parent
    return Page.find( self.parent_id ) if self.parent?
    false
  end

end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;old_parent&lt;/code&gt; and &lt;code&gt;parent&lt;/code&gt; return exactly the same, but one is 2 lines compared to 5 and easier to read.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href="http://ciaranwal.sh/"&gt;Ciaran&lt;/a&gt; pointed out that the Page.parent method would only ever return false. Added the return statement to it to fix the bug.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Inaugural Habaricon</title>
    <link rel="alternate" href="http://caiustheory.com/inaugural-habaricon/"/>
    <id>http://caiustheory.com/inaugural-habaricon/</id>
    <published>2008-04-01T08:27:55+01:00</published>
    <updated>2008-04-01T08:27:55+01:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I managed to secure a place to &lt;a href="http://habaricon.com/"&gt;HabariCon '08&lt;/a&gt;. Not quite sure what to expect, but being able to meet other people in real life and talk about habari &amp;amp; related things all day will be quite cool.&lt;/p&gt;

&lt;p&gt;Expect a round-up post of the 'con tonight!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>BarCamp Manchester</title>
    <link rel="alternate" href="http://caiustheory.com/barcamp-manchester/"/>
    <id>http://caiustheory.com/barcamp-manchester/</id>
    <published>2008-03-01T11:34:25+00:00</published>
    <updated>2008-03-01T11:34:25+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I'm at BarCamp Manchester for the day.  Its great meeting people I already know, and meeting new ones; most impressed by &lt;a href="http://petercooper.co.uk/"&gt;Peter&lt;/a&gt;'s ruby shoes.. they glitter!&lt;/p&gt;

&lt;p&gt;So heres a little list of links for the day:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.flickr.com/photos/tags/BarCampManchesterUk/"&gt;http://www.flickr.com/photos/tags/BarCampManchesterUk/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://barcamp.org/BarCampManchesterUk"&gt;http://barcamp.org/BarCampManchesterUk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Command line tricks: Scripting Languages</title>
    <link rel="alternate" href="http://caiustheory.com/command-line-tricks--scripting-languages/"/>
    <id>http://caiustheory.com/command-line-tricks--scripting-languages/</id>
    <published>2008-02-14T16:24:27+00:00</published>
    <updated>2008-02-14T16:24:27+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;To search your php.ini file quickly and easily with the option to use regular expressions, I tend to drop back to the &lt;acronym title="command line interface"&gt;cli&lt;/acronym&gt;.  The reason for this is I can easily parse the output of &lt;code&gt;phpinfo()&lt;/code&gt; with &lt;code&gt;grep&lt;/code&gt;, and can do various things with the output, could even pass it to a script if I really wanted to.&lt;/p&gt;

&lt;p&gt;Here is the line I use to search &lt;code&gt;phpinfo()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo "&amp;lt;?php phpinfo() ?&amp;gt;" | php | grep -i $search_string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It passes the string through the php interpreter and then searches through it with grep.&lt;/p&gt;

&lt;p&gt;You can also do other nifty things with the shell &amp;amp; php + ruby especially (though I imagine python &amp;amp; perl work in the same way.) For instance I wanted to see if the following ruby would return the number of seconds since the &lt;a href="http:/en.wikipedia.org/wiki/Unix_Time"&gt;epoch&lt;/a&gt; till now.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;puts Time.now.to_i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I could fire up a PHP page and do something like the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
    echo "php: " . time() . "\n";
    echo `ruby -e 'puts "ruby: #{Time.now.to_i}"'`;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But what if I've not got a web server with PHP running on the machine I'm using? Well then I could drop back to the shell and run it through &lt;code&gt;php&lt;/code&gt; using &lt;code&gt;cat&lt;/code&gt; as a way to insert multiple lines, and it would look like the following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Julius:~ caius$ cat | php
&amp;lt;?php
    echo "php: " . time() . "\n";
    echo `ruby -e 'puts "ruby: #{Time.now.to_i}"'`;
?&amp;gt;
^D
php: 1203004463
ruby: 1203004463
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now this works, but why do I want to remember all that php, and seeing as I have to drop back to the shell to access the ruby statement, why not just let the shell do all the work? So after a few seconds thinking, I came up with this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e 'puts "ruby: #{Time.now.to_i}"' &amp;amp;&amp;amp; \
echo '&amp;lt;?php echo "PHP: " . time() . "\n" ?&amp;gt;' | php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This runs the ruby code through &lt;code&gt;ruby&lt;/code&gt; and the php code through &lt;code&gt;php&lt;/code&gt; without dropping back to the shell from within a language interpreter :)&lt;/p&gt;

&lt;h3 id="update"&gt;Update:&lt;/h3&gt;

&lt;p&gt;Following fangels comment pointing out &lt;code&gt;php -r&lt;/code&gt; is the equivilent of &lt;code&gt;ruby -e&lt;/code&gt; I've since modified the final commands to read as follows&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e 'puts "ruby: #{Time.now.to_i}"' &amp;amp;&amp;amp; \
php -r 'echo "PHP: ".time()."\n";'
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>Refactoring code logically</title>
    <link rel="alternate" href="http://caiustheory.com/refactoring-code-logically/"/>
    <id>http://caiustheory.com/refactoring-code-logically/</id>
    <published>2008-02-12T12:28:38+00:00</published>
    <updated>2008-02-12T12:28:38+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;And now an example of how I write my ruby code and get it down to the bare, readable, minimum code needed. This is real life code taken from a website I'm building, but I've changed the objects to a blog post because more people will relate to that easier.&lt;/p&gt;

&lt;p&gt;The show object has an id passed in using the &lt;code&gt;params&lt;/code&gt; Hash, I want to check if that post exists in the database first.  If it does, then render the page, and if it doesn't return a 404 error page.&lt;/p&gt;

&lt;p&gt;So I start off by writing this in &lt;em&gt;longhand&lt;/em&gt; ruby, I'm using the &lt;a href="http://merbivore.com/"&gt;merb&lt;/a&gt; framework with &lt;a href="http://datamapper.com/"&gt;DataMapper&lt;/a&gt; ORM by the way.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
    @post = Post.first(params[:id])
    if @post
        render
    else
        raise "404 - Not found"
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now whilst theres nothing wrong with this code, it just doesn't look right to me. There is a big if/else statement in there whilst I'm sure there doesn't need to be.&lt;/p&gt;

&lt;p&gt;Now I know if I return at any point in a ruby method, it exits the method at that point. So the first thing to is to refactor the &lt;code&gt;if&lt;/code&gt; test to remove a line of code. I shall assign &lt;code&gt;@post&lt;/code&gt; to the result of the DB as the actual if statement's test.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
    if @post = Post.first(params[:id])
        render
    else
        raise "404 - Not found"
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So thats reading slightly better, and also is a line less of code. Now I wonder if I can use a &lt;code&gt;return true&lt;/code&gt; in there to stop me having to explicitly state an &lt;code&gt;else&lt;/code&gt; clause.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
    if @post = post.first(params[:id])
        render
        return true
    end
    raise "404 - Not found"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the eagerest amongst you will be wondering what the advantage of that code is. It doesn't appear any more readable (slightly less in fact as you have to figure out its an implicit else) and is exactly the same amount of lines as the previous example. But what if we change the &lt;code&gt;if&lt;/code&gt; to an &lt;code&gt;if !&lt;/code&gt; and flip the code logic around?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
    if !@post = Post.first(params[:id])
        raise "404 - not found"
    end
    render
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now a raise will stop the code executing, and in the real application you would in fact just redirect to your 404 error page. The problem now is the &lt;code&gt;if !&lt;/code&gt; looks ugly and isn't easily readable.&lt;/p&gt;

&lt;p&gt;All &lt;code&gt;unless&lt;/code&gt; does is &lt;code&gt;if !&lt;/code&gt;, that is, if the inverse of the result of the test statement is true, then invoke the block given to it. A quick example for you:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# without unless
if !@user.logged_in?
    puts "Please login."
end

# using unless
unless @user.logged_in?
    puts "Please login."
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now whilst &lt;code&gt;if !&lt;/code&gt; doesn't seem that bad compared to &lt;code&gt;unless&lt;/code&gt;, the readablility of the code increases. It reads more as a flow of logic, and is quicker for the human brain to walk through (my brain anyway!)&lt;/p&gt;

&lt;p&gt;So using unless we get 4 lines of code that is easily readable.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
    unless @post = Post.first(params[:id])
        raise "404 - Not found"
    end
    render
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now what if we go one step further and use the unless shorthand way of testing and exectuting one line of code?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def show
    raise "404 - Not found" unless @post = Post.first(params[:id])
    render
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that is generally how I write my code logically.  Of course for something simple like this I'd probably jump in at the last block having refactored it in my head first, but for more complex things I tend to write them exlicitly and then refactor them down whilst maintaining readability of my code.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Use datamapper sessions with merb &amp; datamapper</title>
    <link rel="alternate" href="http://caiustheory.com/use-datamapper-sessions-with-merb-datamapper/"/>
    <id>http://caiustheory.com/use-datamapper-sessions-with-merb-datamapper/</id>
    <published>2008-02-05T20:27:31+00:00</published>
    <updated>2008-02-05T20:27:31+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;h3 id="issue"&gt;Issue&lt;/h3&gt;

&lt;p&gt;Can't use merb sessions with datamapper &amp;amp; mysql, get back an error about needing an id on the text column or something (I had the error a couple of days ago.)&lt;/p&gt;

&lt;h3 id="solution"&gt;Solution&lt;/h3&gt;

&lt;p&gt;I suggest grabbing merb_datamapper svn source to fix this in.  To do so make sure you have subversion installed on your machine (I'm assuming a Unix based machine here.)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Checkout the source&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; svn co http://svn.devjavu.com/merb/plugins/merb_datamapper
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;Checks out the svn source to ./merb_datamapper&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open up the affected file in your favourite editor &lt;em&gt;(I use TextMate)&lt;/em&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; cd merb_datamapper
 mate lib/merb/sessions/data_mapper_session.rb
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Find line 25 that contains&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;property :session_id, :text, :lazy =&amp;gt; false, :key =&amp;gt; true&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;and remove &lt;code&gt;:text, :lazy =&amp;gt; false&lt;/code&gt; to replace it with &lt;code&gt;:string&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;property :session_id, :string, :key =&amp;gt; true&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Save and close the file, thats the editing done.  Now to install the gem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Build the gem&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; rake gem
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install the gem&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; sudo gem install pkg/merb_datamapper-0.5.gem
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And you're away with the fix installed.  Now just run &lt;code&gt;merb&lt;/code&gt; to create your sessions table in the db.  Hope this helped!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Why do I love Ruby?</title>
    <link rel="alternate" href="http://caiustheory.com/why-do-i-love-ruby/"/>
    <id>http://caiustheory.com/why-do-i-love-ruby/</id>
    <published>2008-01-30T14:15:24+00:00</published>
    <updated>2008-01-30T14:15:24+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So mother (who can't program) just posed me the question&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why is Ruby your favourite programming language?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Me being a show off jumped straight into &lt;a href="http://macromates.com/"&gt;TextMate&lt;/a&gt; and banged out some code in real time to show her.  First up, a quick little one-liner of Ruby code to output a String:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;puts "Hello World"
# =&amp;gt; "Hello World"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So she goes, "Sure, but whats so brilliant about that?" So I just decide to reverse the string, have it output in reverse order:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;puts "Hello World".reverse
# =&amp;gt; "dlroW olleH"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then the next question comes, "So what makes that so much easier than in other languages?" Well now I was thinking on the spot about which other language I can bang out a quick example in without having to look up too much information.  PHP seems the logical choice, being the language I know best behind Ruby.&lt;/p&gt;

&lt;p&gt;Thinking about how to do it in PHP, I can't think of a function to reverse the content of a string, but I know that &lt;code&gt;array_reverse()&lt;/code&gt; exists, so I just split it into an array and reverse that array.  Only problem is I can't remember how to split a string by &lt;code&gt;""&lt;/code&gt;, I don't think &lt;code&gt;explode( "", $var )&lt;/code&gt; does the job.  So I quickly jump in and write the following code to test my concern.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$a = "Hello World"
$b = explode( "", $a );
$c = array_reverse( $b );
echo implode( "", $c );
?&amp;gt;
# =&amp;gt; ERROR
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The reason for the error is because I've missed a semi colon off the end of line 2, to this I get the response, "well thats certainly not as nice as ruby." Just because one little character is missing!&lt;/p&gt;

&lt;p&gt;So I fix the semi colon and run it again, now I get an error complaining about explode not being able to split by a missing delimiter (the empty string - &lt;code&gt;""&lt;/code&gt;)  So I go hunting through the &lt;a href="http://php.net/"&gt;php.net&lt;/a&gt; docs and find &lt;code&gt;str_split()&lt;/code&gt;, which does exactly what I want it to.&lt;/p&gt;

&lt;p&gt;In replacing &lt;code&gt;explode()&lt;/code&gt; with &lt;code&gt;str_split()&lt;/code&gt; and running it via the &lt;code&gt;php&lt;/code&gt; command line binary, I realise that I haven't got any &lt;code&gt;\n&lt;/code&gt; (newlines) at the end of it, so it doesn't display nicely in the terminal.  I thus update the script to the following and show her the result:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$a = "Hello World";
$b = explode( "", $a );
$c = array_reverse( $b );
echo implode( "", $c )."\n";
?&amp;gt;
# =&amp;gt; "dlroW olleH"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And so she goes away seeing why I prefer Ruby to other languages for &lt;em&gt;most&lt;/em&gt; programming I do. There are things Ruby fails at (and don't get me started on why rails isn't going to replace php!) and other places where it succeeds very well.&lt;/p&gt;

&lt;p&gt;But each to their own, and my own favourite is Ruby!&lt;/p&gt;

&lt;h3 id="update"&gt;Update&lt;/h3&gt;

&lt;p&gt;As pointed out in the comments, if I had looked a bit further I would've found &lt;code&gt;strrev()&lt;/code&gt; which does the same as the &lt;code&gt;reverse&lt;/code&gt; method in Ruby.  So in fact the final code would be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Ruby Code
puts "Hello World".reverse

# PHP Code
echo strrev( "Hello World" );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So it turns out this was a bad way to show why I prefer Ruby to PHP code wise to mother, think I might have to just bite the bullet and write about why I prefer &lt;code&gt;object.method&lt;/code&gt; to &lt;code&gt;method( object )&lt;/code&gt;!&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>UK Parking</title>
    <link rel="alternate" href="http://caiustheory.com/uk-parking/"/>
    <id>http://caiustheory.com/uk-parking/</id>
    <published>2008-01-12T12:35:01+00:00</published>
    <updated>2008-01-12T12:35:01+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I just saw this in my twitter stream:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="http://twitter.com/peterc/statuses/590099072"&gt;peterc&lt;/a&gt;: Warning UK drivers.. councils get powers on March 31st to give you parking fines for infractions they see on CCTV!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This indeed sucks.  We'll see how successful they are at ticketing people and whether anyone abuses the system…&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Published Pictures</title>
    <link rel="alternate" href="http://caiustheory.com/published-pictures/"/>
    <id>http://caiustheory.com/published-pictures/</id>
    <published>2008-01-05T16:08:39+00:00</published>
    <updated>2008-01-05T16:08:39+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;Interesting email arrived in my inbox today.  I attended &lt;a href="http://barcamp.org/BarCampLeeds"&gt;BarCamp Leeds&lt;/a&gt; in late 2007 and whilst I was there I happened to take some pictures (as I am apt to do these days.)&lt;/p&gt;

&lt;p&gt;Anyway, I was rather happy to see that at least one picture isn't just stagnating in my &lt;a href="http://flickr.com/photos/caius/"&gt;flickr stream&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Caius,&lt;/p&gt;

  &lt;p&gt;I am delighted to let you know that one of your photos with&lt;br /&gt;
a Creative Commons license has been selected for inclusion&lt;br /&gt;
in the newly released fourth edition of our Schmap Leeds&lt;br /&gt;
Guide:&lt;/p&gt;

  &lt;p&gt;Town Hall
&lt;a href="http://www.schmap.com/leeds/sights_hydepark/p=39139/i=39139_10.jpg"&gt;http://www.schmap.com/leeds/sights_hydepark/p=39139/i=39139_10.jpg&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=""&gt;Original Picture on flickr&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Twitter Statistics</title>
    <link rel="alternate" href="http://caiustheory.com/twitter-statistics/"/>
    <id>http://caiustheory.com/twitter-statistics/</id>
    <published>2008-01-02T07:15:00+00:00</published>
    <updated>2008-01-02T07:15:00+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://flickr.com/photo_zoom.gne?id=2157771886&amp;amp;size=o"&gt;&lt;img alt="Twitter Statistics for caius" src="http://farm3.static.flickr.com/2345/2157771886_9e41008ac2_m.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://dcortesi.com/2007/12/27/twitter-stats/"&gt;Just&lt;/a&gt; &lt;a href="http://www.flickr.com/photos/gruber/2156085517/"&gt;joining&lt;/a&gt; &lt;a href="http://www.randsinrepose.com/archives/2008/01/01/year_in_twitter.html"&gt;the&lt;/a&gt; &lt;a href="http://kosmar.de/archives/2007/12/29/twitter-statistics/"&gt;band&lt;/a&gt; &lt;a href="http://blog.nordquist.org/?p=2083"&gt;wagon&lt;/a&gt; in posting up my twitter statistics.  The skew towards december being the month I twitter most in is because I enabled twitter sms, and ended up replying/updating a lot more often than I expected.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>OS X User has a virus</title>
    <link rel="alternate" href="http://caiustheory.com/os-x-user-has-a-virus/"/>
    <id>http://caiustheory.com/os-x-user-has-a-virus/</id>
    <published>2008-01-02T01:15:15+00:00</published>
    <updated>2008-01-02T01:15:15+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;No not my computer, me.  I've managed to pickup an &lt;acronym title="Common Cold"&gt;acute coryza&lt;/acronym&gt; virus.  It causes &lt;code&gt;/dev/random&lt;/code&gt; to constantly pass data to &lt;code&gt;/Volumes/nose&lt;/code&gt;.  I don't think I got this from reading email, but I'm pretty sure it was a windows user who passed it to me.&lt;/p&gt;

&lt;p&gt;If I flush my partitions to disk every now and then I can get by with a clean &lt;code&gt;/Volumes/nose&lt;/code&gt; for a while before &lt;code&gt;/dev/random&lt;/code&gt; starts clogging it up again.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>dSLR Quote</title>
    <link rel="alternate" href="http://caiustheory.com/dslr-quote/"/>
    <id>http://caiustheory.com/dslr-quote/</id>
    <published>2007-12-31T17:25:25+00:00</published>
    <updated>2007-12-31T17:25:25+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;I was just talking to &lt;a href="http://keihatsu.org/"&gt;Nadim&lt;/a&gt; about him getting a new camera and then this happened:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nadim: &lt;a href="http://cyraq.deviantart.com/art/Above-the-Clouds-72170767"&gt;http://cyraq.deviantart.com/art/Above-the-Clouds-72170767&lt;/a&gt;&lt;br /&gt;
Nadim: Did you see that?&lt;br /&gt;
Nadim: Taken couple of weeks ago&lt;br /&gt;
Caius: woa&lt;br /&gt;
Caius: and you need a new camera because? :P&lt;br /&gt;
Nadim: I have wet dreams about DSLR's&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>Quote to see the new year in</title>
    <link rel="alternate" href="http://caiustheory.com/quote-to-see-the-new-year-in/"/>
    <id>http://caiustheory.com/quote-to-see-the-new-year-in/</id>
    <published>2007-12-31T17:11:11+00:00</published>
    <updated>2007-12-31T17:11:11+00:00</updated>
    <author>
      <name>Caius Durling</name>
    </author>
    <content type="html">&lt;p&gt;So I'm a geek, as my friends are gradually realising more and more.  Anyway, I twitter a lot, and occasionally write quotes that need to be saved elsewhere.  And what generally makes tweets funnier are other people replying to them.&lt;/p&gt;

&lt;p&gt;A little background information.  This had just taken place in #habari (a chat room.)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h0bbel&amp;gt; ringmaster: i'll show you my winky
* ringmaster runs.
&amp;lt;h0bbel&amp;gt; as jmullan has seen it
&amp;lt;h0bbel&amp;gt; i think
&amp;lt;jmullan&amp;gt; no, I didn't look
&amp;lt;ringmaster&amp;gt; 0_o
&amp;lt;h0bbel&amp;gt; i was kinda drunk at the time
&amp;lt;h0bbel&amp;gt; lol
&amp;lt;jmullan&amp;gt; we were playing "lightsabers" while peeing
&amp;lt;jmullan&amp;gt; not "swords"
&amp;lt;jmullan&amp;gt; I had the yellow saber, h0bbel had the green one
&amp;lt;jmullan&amp;gt; I'm not sure how that worked
&amp;lt;h0bbel&amp;gt; you said you didn't look!
&amp;lt;h0bbel&amp;gt; How did you know it was green?
&amp;lt;jmullan&amp;gt; I just saw the beam, not the handle, if you know what I'm saying
&amp;lt;h0bbel&amp;gt; ehehe
&amp;lt;Caius&amp;gt; xD
&amp;lt;ringmaster&amp;gt; This is all somewhat disturbing.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So in order&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://twitter.com/caius/statuses/549893582"&gt;me&lt;/a&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;man, #habari just wouldn't be the same without the semi-homosexual discussions every now and then&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://twitter.com/caius/statuses/549893582"&gt;me&lt;/a&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Formatting some SQL queries for a fellow dev&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://twitter.com/h0bbel/statuses/549895502"&gt;h0bbel&lt;/a&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href="http://twitter.com/caius/statuses/549893582"&gt;http://twitter.com/caius/st…&lt;/a&gt; is realy quoteworthy ;-)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://twitter.com/tmertz/statuses/549899752"&gt;Mertz&lt;/a&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;@&lt;a href="http://twitter.com/caius"&gt;caius&lt;/a&gt;, wtf are you doing? put down the computer, take five steps back and go find a new years celebration.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://twitter.com/caius/statuses/549903292"&gt;me&lt;/a&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;@&lt;a href="http://twitter.com/tmertz"&gt;tmertz&lt;/a&gt; just hanging in #habari whilst editing some SQL queries @&lt;a href="http://twitter.com/h0bbel"&gt;h0bbel&lt;/a&gt; wrote waiting for 1900GMT to go round my mates and get drunk&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And on the back of that, I'd just like to say have a very merry new years eve and just follow your desires onwards in life!&lt;/p&gt;
</content>
  </entry>
</feed>
